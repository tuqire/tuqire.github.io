{"version":3,"sources":["webpack:///js/bundle.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/io/controls.js","webpack:///./src/js/main.js","webpack:///./src/js/io/camera.js","webpack:///./src/js/io/renderer.js","webpack:///./src/js/objects/scene.js","webpack:///./src/js/objects/particles.js","webpack:///./src/js/shaders/size-simulation-shaders.js","webpack:///./src/js/shaders/black-and-white-webcam.js","webpack:///./src/js/shaders/difference-webcam.js","webpack:///./src/js/shaders/shaders.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","THREE","getZRatio","window","innerWidth","createDataTexture","_ref","data","tWidth","tHeight","format","filterType","dataTexture","DataTexture","FloatType","minFilter","magFilter","needsUpdate","flipY","call","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","detector_webgl","detector_webgl_default","n","stats_min","stats_min_default","io_camera","dat_gui","dat_gui_default","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","controls_Controls","Controls","arguments","undefined","particles","scene","this","gui","a","GUI","addBgControls","addSizeControls","addWebcamControls","addMouseControls","addColourStrengthControls","addOpacityControls","addColor","add","min","max","step","onFinishChange","updateSizes","updateParticleVars","updateColours","controls","io_renderer","objects_scene","objects_particles","document","addEventListener","container","getElementById","renderer","numParticles","matchMedia","matches","radius","minSize","maxSize","sizeRange","sizeInc","skew","brightness","opacity","webcamOutlineStrength","webcamThreshold","webcamStarInc","webcamStarSize","webcamStarMultiplier","webcamStarDecSpeed","hoverDist","hoverSizeInc","hoverMaxSizeMultiplier","camera","aspectRatio","position","x","y","z","stats","render","begin","update","get","end","showPanel","body","appendChild","dom","animate","requestAnimationFrame","innerHTML","_toConsumableArray","arr","Array","isArray","arr2","from","__WEBPACK_IMPORTED_MODULE_0__utils__","Camera","_ref$fov","fov","_ref$aspectRatio","innerHeight","_ref$near","near","_ref$far","far","_ref$position","_ref$up","up","setCameraZ","PerspectiveCamera","setPosition","setUp","apply","setLookAt","WIDTH","HEIGHT","aspect","setZ","updateProjectionMatrix","set","_ref2","_ref2$x","_ref2$y","_ref2$z","setX","setY","lookAt","Vector3","Renderer","_ref$alpha","alpha","_ref$pixelRatio","pixelRatio","devicePixelRatio","_ref$width","width","_ref$height","height","WebGLRenderer","gl","context","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setPixelRatio","setSize","getDomElement","onWindowResize","bind","domElement","w","h","_ref2$renderTarget","renderTarget","_ref2$force","force","Canvas","Scene","obj","remove","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__","__WEBPACK_IMPORTED_MODULE_3__shaders_black_and_white_webcam__","__WEBPACK_IMPORTED_MODULE_4__shaders_difference_webcam__","__WEBPACK_IMPORTED_MODULE_5__shaders_shaders__","Particles","_this","_ref$configUniforms","configUniforms","color","Color","sizeMultiplierForScreen","starImg","TextureLoader","load","_ref$blending","blending","AdditiveBlending","_ref$transparent","transparent","_ref$depthTest","depthTest","_ref$depthWrite","depthWrite","_ref$bgColorTop","bgColorTop","_ref$bgColorBottom","bgColorBottom","_ref$numParticles","_ref$radius","_ref$minSize","_ref$maxSize","_ref$sizeRange","_ref$sizeInc","_ref$skew","_ref$brightness","_ref$opacity","_ref$webcamOutlineStr","_ref$webcamThreshold","_ref$webcamStarInc","_ref$webcamStarSize","_ref$webcamStarMultip","_ref$webcamStarDecSpe","_ref$hoverDist","_ref$hoverSizeInc","_ref$hoverMaxSizeMult","windowHalfX","windowHalfY","videoEl","createElement","videoWidth","videoHeight","noSupport","navigator","getUserMedia","video","stream","srcObject","autoplay","addStars","console","error","getElementsByTagName","append","Math","ceil","sqrt","webcamEl","webcamElContext","getContext","webcamTexture","Texture","NearestFilter","webcamDiffEl","webcamDiffElContext","webcamDiffTexture","positions","Float32Array","blackAndWhiteFBO","uniforms","tWebcam","type","simulationVertexShader","simulationFragmentShader","webcamDifferenceFBO","webcamWidth","webcamHeight","setTextureUniform","getCurrentFrame","sizeFBO","tPosition","tDefaultSize","mouse","getPositions","getSizes","assign","simulationShader","tSize","targets","tColour","getColours","material","ShaderMaterial","vertexShader","fragmentShader","geometry","Geometry","vertex","floor","vertices","push","Points","frustumCulled","onMouseMove","ready","event","xMultiplier","cameraZ","yMultiplier","mouseX","clientX","mouseY","clientY","i3","i4","vertice","calcPosition","random","sizes","calcSize","pow","colours","colour","calcColour","_this2","randomVal","getColor","r","g","b","_webcamEl","readyState","HAVE_ENOUGH_DATA","drawImage","simulate","newCameraZ","_bgColorTop","newVal","style","background","_bgColorBottom","d","sizeSimulationFragmentShader","sizeSimulationVertexShader","blackAndWhiteSimulationFragmentShader","blackAndWhiteSimulationVertexShader","differenceSimulationFragmentShader","differenceSimulationVertexShader"],"mappings":"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","file":"js/bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* unused harmony export getParameterByName */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getZRatio;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createDataTexture;\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(url);\n\n  if (!results) return null;\n  if (!results[2]) return '';\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getZRatio() {\n  if (window.innerWidth > 1100) {\n    return 170;\n  } else if (window.innerWidth > 700) {\n    return 100;\n  } else if (window.innerWidth > 500) {\n    return 85;\n  } else {\n    return 50;\n  }\n}\n\nfunction createDataTexture(_ref) {\n  var data = _ref.data,\n      tWidth = _ref.tWidth,\n      tHeight = _ref.tHeight,\n      format = _ref.format,\n      filterType = _ref.filterType;\n\n  var dataTexture = new THREE.DataTexture(data, tWidth, tHeight, format, THREE.FloatType);\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType;\n  dataTexture.needsUpdate = true;\n  dataTexture.flipY = false;\n\n  return dataTexture;\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/detector-webgl/index.js\nvar detector_webgl = __webpack_require__(1);\nvar detector_webgl_default = /*#__PURE__*/__webpack_require__.n(detector_webgl);\n\n// EXTERNAL MODULE: ./node_modules/stats.js/build/stats.min.js\nvar stats_min = __webpack_require__(2);\nvar stats_min_default = /*#__PURE__*/__webpack_require__.n(stats_min);\n\n// EXTERNAL MODULE: ./src/js/io/camera.js\nvar io_camera = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/dat-gui/index.js\nvar dat_gui = __webpack_require__(4);\nvar dat_gui_default = /*#__PURE__*/__webpack_require__.n(dat_gui);\n\n// CONCATENATED MODULE: ./src/js/io/controls.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar controls_Controls = function () {\n  function Controls() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        particles = _ref.particles,\n        scene = _ref.scene;\n\n    _classCallCheck(this, Controls);\n\n    this.gui = new dat_gui_default.a.GUI();\n\n    this.addBgControls(particles);\n    this.addSizeControls(particles);\n    this.addWebcamControls(particles);\n    this.addMouseControls(particles);\n    this.addColourStrengthControls(particles);\n    this.addOpacityControls(particles);\n  }\n\n  _createClass(Controls, [{\n    key: 'addBgControls',\n    value: function addBgControls(particles) {\n      this.gui.addColor(particles, 'bgColorTop');\n\n      this.gui.addColor(particles, 'bgColorBottom');\n    }\n  }, {\n    key: 'addSizeControls',\n    value: function addSizeControls(particles) {\n      this.gui.add(particles, 'minSize').min(0.0001).max(0.06).step(0.0001).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'maxSize').min(0.01).max(0.1).step(0.001).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeInc').min(0.00001).max(0.0002).step(0.00001).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeRange').min(0).max(0.02).step(0.0005).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'skew').min(1).max(1000).step(10).onFinishChange(function () {\n        particles.updateSizes();\n      });\n    }\n  }, {\n    key: 'addWebcamControls',\n    value: function addWebcamControls(particles) {\n      this.gui.add(particles, 'webcamOutlineStrength').min(10).max(300).step(1).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'webcamThreshold').min(0).max(1).step(0.05).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'webcamStarInc').min(0.000001).max(0.001).step(0.00001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'webcamStarSize').min(0.001).max(0.05).step(0.001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'webcamStarMultiplier').min(1000).max(10000).step(100).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      // this.gui\n      //   .add(particles, 'webcamStarDecSpeed')\n      //   .min(1)\n      //   .max(50)\n      //   .step(0.5)\n      //   .onFinishChange(() => {\n      //     particles.updateParticleVars()\n      //   })\n    }\n  }, {\n    key: 'addMouseControls',\n    value: function addMouseControls(particles) {\n      this.gui.add(particles, 'hoverDist').min(0).max(0.5).step(0.01).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverSizeInc').min(0).max(0.03).step(0.001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverMaxSizeMultiplier').min(1).max(5).step(0.2).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addColourStrengthControls',\n    value: function addColourStrengthControls(particles) {\n      this.gui.add(particles, 'brightness').min(0.1).max(3).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }, {\n    key: 'addOpacityControls',\n    value: function addOpacityControls(particles) {\n      this.gui.add(particles, 'opacity').min(0.1).max(2).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }]);\n\n  return Controls;\n}();\n\n/* harmony default export */ var controls = (controls_Controls);\n// EXTERNAL MODULE: ./src/js/io/renderer.js\nvar io_renderer = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./src/js/objects/scene.js\nvar objects_scene = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./src/js/objects/particles.js\nvar objects_particles = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./src/js/main.js\n\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (detector_webgl_default.a) {\n    var container = document.getElementById('stars-simulation-container');\n    var renderer = new io_renderer[\"a\" /* default */]({ container: container });\n    var scene = new objects_scene[\"a\" /* default */]();\n    var particles = new objects_particles[\"a\" /* default */]({\n      scene: scene,\n      renderer: renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 4000 : 100000,\n      radius: 3,\n      minSize: 0.013,\n      maxSize: 0.04,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 75,\n      brightness: 0.9,\n      opacity: 1,\n      webcamOutlineStrength: 70,\n      webcamThreshold: 0.2,\n      webcamStarInc: 0.0001,\n      webcamStarSize: 0.01,\n      webcamStarMultiplier: 5000,\n      webcamStarDecSpeed: 5.5,\n      hoverDist: 0.04,\n      hoverSizeInc: 0.002,\n      hoverMaxSizeMultiplier: 3\n    });\n    var camera = new io_camera[\"a\" /* default */]({\n      aspectRatio: 1.0,\n      particles: particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -3.9\n      }\n    });\n    var stats = new stats_min_default.a();\n\n    var init = function init() {\n      new controls({ particles: particles }); // eslint-disable-line\n\n      stats.showPanel(0);\n      document.body.appendChild(stats.dom);\n    };\n\n    var animate = function animate() {\n      requestAnimationFrame(animate); // eslint-disable-line\n      render();\n    };\n\n    var render = function render() {\n      stats.begin();\n\n      particles.update();\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      });\n\n      stats.end();\n    };\n\n    init();\n    animate();\n  } else {\n    var info = document.getElementById('info');\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.';\n  }\n});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar Camera = function () {\n  function Camera(_ref) {\n    var particles = _ref.particles,\n        _ref$fov = _ref.fov,\n        fov = _ref$fov === undefined ? 400 : _ref$fov,\n        _ref$aspectRatio = _ref.aspectRatio,\n        aspectRatio = _ref$aspectRatio === undefined ? window.innerWidth / window.innerHeight : _ref$aspectRatio,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 0.1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 2000 : _ref$far,\n        _ref$position = _ref.position,\n        position = _ref$position === undefined ? {\n      x: 0, y: 0, z: 0\n    } : _ref$position,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 0, 1] : _ref$up;\n\n    _classCallCheck(this, Camera);\n\n    this.particles = particles;\n    this.particles.setCameraZ(position.z);\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n    this.up = up;\n\n    this.setPosition(position);\n    this.setUp.apply(this, _toConsumableArray(this.up));\n    this.setLookAt();\n  }\n\n  _createClass(Camera, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.camera.aspect = WIDTH / HEIGHT;\n      this.setZ(window.innerHeight / Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* getZRatio */])());\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: 'setUp',\n    value: function setUp(x, y, z) {\n      this.camera.up.set(x, y, z);\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(_ref2) {\n      var _ref2$x = _ref2.x,\n          x = _ref2$x === undefined ? this.camera.position.x : _ref2$x,\n          _ref2$y = _ref2.y,\n          y = _ref2$y === undefined ? this.camera.position.y : _ref2$y,\n          _ref2$z = _ref2.z,\n          z = _ref2$z === undefined ? this.camera.position.z : _ref2$z;\n\n      this.setX(x);\n      this.setY(y);\n      this.setZ(z);\n    }\n  }, {\n    key: 'setX',\n    value: function setX(x) {\n      this.camera.position.x = x;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setY',\n    value: function setY(y) {\n      this.camera.position.y = y;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setZ',\n    value: function setZ(z) {\n      this.camera.position.z = z;\n      this.setLookAt();\n      this.setUp(0, 0, 1);\n      this.particles.setCameraZ(z);\n    }\n  }, {\n    key: 'setLookAt',\n    value: function setLookAt() {\n      this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.camera;\n    }\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return this.camera.position;\n    }\n  }, {\n    key: 'getZ',\n    value: function getZ() {\n      return this.camera.position.z;\n    }\n  }]);\n\n  return Camera;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n  function Renderer(_ref) {\n    var _ref$alpha = _ref.alpha,\n        alpha = _ref$alpha === undefined ? true : _ref$alpha,\n        _ref$pixelRatio = _ref.pixelRatio,\n        pixelRatio = _ref$pixelRatio === undefined ? window.devicePixelRatio : _ref$pixelRatio,\n        _ref$width = _ref.width,\n        width = _ref$width === undefined ? window.innerWidth : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === undefined ? window.innerHeight : _ref$height,\n        container = _ref.container;\n\n    _classCallCheck(this, Renderer);\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: alpha });\n    var gl = this.renderer.context;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    this.setPixelRatio(pixelRatio);\n\n    this.setSize(width, height);\n\n    container.appendChild(this.getDomElement());\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Renderer, [{\n    key: 'getDomElement',\n    value: function getDomElement() {\n      return this.renderer.domElement;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.renderer.setSize(WIDTH, HEIGHT);\n    }\n  }, {\n    key: 'setPixelRatio',\n    value: function setPixelRatio(pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio);\n    }\n  }, {\n    key: 'setSize',\n    value: function setSize(w, h) {\n      this.renderer.setSize(w, h);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          scene = _ref2.scene,\n          camera = _ref2.camera,\n          _ref2$renderTarget = _ref2.renderTarget,\n          renderTarget = _ref2$renderTarget === undefined ? null : _ref2$renderTarget,\n          _ref2$force = _ref2.force,\n          force = _ref2$force === undefined ? false : _ref2$force;\n\n      this.renderer.render(scene, camera, renderTarget, force);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.renderer;\n    }\n  }]);\n\n  return Renderer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderer);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Canvas = function () {\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    this.scene = new THREE.Scene();\n  }\n\n  _createClass(Canvas, [{\n    key: \"add\",\n    value: function add(obj) {\n      this.scene.add(obj);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(obj) {\n      this.scene.remove(obj);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.scene;\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Canvas);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaders_black_and_white_webcam__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shaders_difference_webcam__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shaders_shaders__ = __webpack_require__(17);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\nvar Particles = function () {\n  function Particles(_ref) {\n    var _this = this;\n\n    var scene = _ref.scene,\n        _ref$configUniforms = _ref.configUniforms,\n        configUniforms = _ref$configUniforms === undefined ? {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: window.innerHeight * window.devicePixelRatio / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    } : _ref$configUniforms,\n        _ref$blending = _ref.blending,\n        blending = _ref$blending === undefined ? THREE.AdditiveBlending : _ref$blending,\n        _ref$transparent = _ref.transparent,\n        transparent = _ref$transparent === undefined ? true : _ref$transparent,\n        _ref$depthTest = _ref.depthTest,\n        depthTest = _ref$depthTest === undefined ? true : _ref$depthTest,\n        _ref$depthWrite = _ref.depthWrite,\n        depthWrite = _ref$depthWrite === undefined ? false : _ref$depthWrite,\n        renderer = _ref.renderer,\n        _ref$bgColorTop = _ref.bgColorTop,\n        bgColorTop = _ref$bgColorTop === undefined ? '#000f23' : _ref$bgColorTop,\n        _ref$bgColorBottom = _ref.bgColorBottom,\n        bgColorBottom = _ref$bgColorBottom === undefined ? '#00071b' : _ref$bgColorBottom,\n        _ref$numParticles = _ref.numParticles,\n        numParticles = _ref$numParticles === undefined ? 10000 : _ref$numParticles,\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? 100 : _ref$radius,\n        _ref$minSize = _ref.minSize,\n        minSize = _ref$minSize === undefined ? 1 : _ref$minSize,\n        _ref$maxSize = _ref.maxSize,\n        maxSize = _ref$maxSize === undefined ? 3 : _ref$maxSize,\n        _ref$sizeRange = _ref.sizeRange,\n        sizeRange = _ref$sizeRange === undefined ? 0.5 : _ref$sizeRange,\n        _ref$sizeInc = _ref.sizeInc,\n        sizeInc = _ref$sizeInc === undefined ? 0.01 : _ref$sizeInc,\n        _ref$skew = _ref.skew,\n        skew = _ref$skew === undefined ? 1 : _ref$skew,\n        _ref$brightness = _ref.brightness,\n        brightness = _ref$brightness === undefined ? 1 : _ref$brightness,\n        _ref$opacity = _ref.opacity,\n        opacity = _ref$opacity === undefined ? 1 : _ref$opacity,\n        _ref$webcamOutlineStr = _ref.webcamOutlineStrength,\n        webcamOutlineStrength = _ref$webcamOutlineStr === undefined ? 50 : _ref$webcamOutlineStr,\n        _ref$webcamThreshold = _ref.webcamThreshold,\n        webcamThreshold = _ref$webcamThreshold === undefined ? 0.5 : _ref$webcamThreshold,\n        _ref$webcamStarInc = _ref.webcamStarInc,\n        webcamStarInc = _ref$webcamStarInc === undefined ? 0.0001 : _ref$webcamStarInc,\n        _ref$webcamStarSize = _ref.webcamStarSize,\n        webcamStarSize = _ref$webcamStarSize === undefined ? 0.3 : _ref$webcamStarSize,\n        _ref$webcamStarMultip = _ref.webcamStarMultiplier,\n        webcamStarMultiplier = _ref$webcamStarMultip === undefined ? 5000 : _ref$webcamStarMultip,\n        _ref$webcamStarDecSpe = _ref.webcamStarDecSpeed,\n        webcamStarDecSpeed = _ref$webcamStarDecSpe === undefined ? 5 : _ref$webcamStarDecSpe,\n        _ref$hoverDist = _ref.hoverDist,\n        hoverDist = _ref$hoverDist === undefined ? 10 : _ref$hoverDist,\n        _ref$hoverSizeInc = _ref.hoverSizeInc,\n        hoverSizeInc = _ref$hoverSizeInc === undefined ? 0.05 : _ref$hoverSizeInc,\n        _ref$hoverMaxSizeMult = _ref.hoverMaxSizeMultiplier,\n        hoverMaxSizeMultiplier = _ref$hoverMaxSizeMult === undefined ? 5 : _ref$hoverMaxSizeMult;\n\n    _classCallCheck(this, Particles);\n\n    this.renderer = renderer;\n\n    this.bgColorTop = bgColorTop;\n    this.bgColorBottom = bgColorBottom;\n\n    this.numParticles = numParticles;\n    this.radius = radius;\n\n    // used to define star glinting\n    this.minSize = minSize;\n    this.maxSize = maxSize;\n    this.sizeRange = sizeRange;\n    this.sizeInc = sizeInc;\n    this.skew = skew; // skews the median size\n\n    // use to define particle colours\n    this.brightness = brightness;\n    this.opacity = opacity;\n\n    // webcm particle controls\n    this.webcamOutlineStrength = webcamOutlineStrength;\n    this.webcamThreshold = webcamThreshold;\n    this.webcamStarInc = webcamStarInc;\n    this.webcamStarSize = webcamStarSize;\n    this.webcamStarMultiplier = webcamStarMultiplier;\n    this.webcamStarDecSpeed = webcamStarDecSpeed;\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2;\n    this.windowHalfY = window.innerHeight / 2;\n\n    // used to define mouse interaction animation\n    this.hoverDist = hoverDist;\n    this.hoverSizeInc = hoverSizeInc;\n    this.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier;\n\n    this.videoEl = document.createElement('video');\n    this.videoWidth = 1280;\n    this.videoHeight = 720;\n\n    var noSupport = document.createElement('h1');\n    noSupport.innerHTML = 'Your browser is not supported. Please use Google Chrome (v21 or above).';\n\n    navigator.getUserMedia ? navigator.getUserMedia({ video: { width: this.videoWidth, height: this.videoHeight } }, function (stream) {\n      var videoEl = _this.videoEl;\n      videoEl.srcObject = stream;\n      videoEl.autoplay = true;\n\n      _this.addStars({\n        scene: scene,\n        renderer: renderer,\n        configUniforms: configUniforms,\n        blending: blending,\n        transparent: transparent,\n        depthTest: depthTest,\n        depthWrite: depthWrite\n      });\n    }, function () {\n      return console.error('video failed to load');\n    }) : document.getElementsByTagName('body')[0].append(noSupport);\n\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Particles, [{\n    key: 'addStars',\n    value: function addStars(_ref2) {\n      var scene = _ref2.scene,\n          renderer = _ref2.renderer,\n          configUniforms = _ref2.configUniforms,\n          blending = _ref2.blending,\n          transparent = _ref2.transparent,\n          depthTest = _ref2.depthTest,\n          depthWrite = _ref2.depthWrite;\n\n      // height and width that set up a texture in memory\n      // this texture is used to store particle position values\n      var tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles));\n      var tWidth = this.tWidth = tHeight;\n      this.numParticles = tWidth * tHeight;\n\n      var webcamEl = this.webcamEl = document.createElement('canvas');\n      this.webcamElContext = webcamEl.getContext('2d');\n\n      var webcamTexture = this.webcamTexture = new THREE.Texture(webcamEl);\n      webcamTexture.minFilter = webcamTexture.magFilter = THREE.NearestFilter;\n      webcamTexture.needsUpdate = true;\n\n      var webcamDiffEl = this.webcamDiffEl = document.createElement('canvas');\n      this.webcamDiffElContext = webcamDiffEl.getContext('2d');\n\n      var webcamDiffTexture = this.webcamDiffTexture = new THREE.Texture(webcamDiffEl);\n      webcamDiffTexture.minFilter = webcamDiffTexture.magFilter = THREE.NearestFilter;\n      webcamDiffTexture.needsUpdate = true;\n\n      this.positions = new Float32Array(this.numParticles * 3);\n\n      this.blackAndWhiteFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: this.webcamEl.width,\n        tHeight: this.webcamEl.height,\n        renderer: renderer.get(),\n        uniforms: {\n          tWebcam: { type: 't', value: webcamTexture }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_3__shaders_black_and_white_webcam__[\"b\" /* blackAndWhiteSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_3__shaders_black_and_white_webcam__[\"a\" /* blackAndWhiteSimulationFragmentShader */]\n      });\n\n      this.webcamDifferenceFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: this.webcamEl.width,\n        tHeight: this.webcamEl.height,\n        renderer: renderer.get(),\n        uniforms: {\n          webcamWidth: { type: 'f', value: this.webcamEl.width },\n          webcamHeight: { type: 'f', value: this.webcamEl.height },\n          tWebcam: { type: 't', value: 0 },\n          webcamOutlineStrength: { type: 'f', value: this.webcamOutlineStrength }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_4__shaders_difference_webcam__[\"b\" /* differenceSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_4__shaders_difference_webcam__[\"a\" /* differenceSimulationFragmentShader */]\n      });\n\n      this.webcamDifferenceFBO.setTextureUniform('tWebcam', this.blackAndWhiteFBO.getCurrentFrame());\n\n      this.sizeFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: tWidth,\n        tHeight: tHeight,\n        renderer: renderer.get(),\n        uniforms: {\n          radius: { type: 'f', value: this.radius },\n\n          tPosition: { type: 't', value: 0 },\n          tDefaultSize: { type: 't', value: 0 },\n          tWebcam: { type: 't', value: 0 },\n\n          sizeRange: { type: 'f', value: this.sizeRange },\n          sizeInc: { type: 'f', value: this.sizeInc },\n\n          webcamThreshold: { type: 'f', value: this.webcamThreshold },\n          webcamStarInc: { type: 'f', value: this.webcamStarInc },\n          webcamStarSize: { type: 'f', value: this.webcamStarSize },\n          webcamStarMultiplier: { type: 'f', value: this.webcamStarMultiplier },\n          webcamStarDecSpeed: { type: 'f', value: this.webcamStarDecSpeed },\n\n          mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n          hoverDist: { type: 'f', value: this.hoverDist },\n          hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n          hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__[\"b\" /* sizeSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__[\"a\" /* sizeSimulationFragmentShader */]\n      });\n\n      this.sizeFBO.setTextureUniform('tPosition', this.getPositions());\n      this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n\n      var uniforms = Object.assign({}, configUniforms, {\n        tPosition: { type: 't', value: this.sizeFBO.simulationShader.uniforms.tPosition.value },\n        tSize: { type: 't', value: this.sizeFBO.targets[0] },\n        tWebcam: { type: 't', value: 0 },\n\n        tColour: { type: 't', value: this.getColours() }\n      });\n\n      this.material = new THREE.ShaderMaterial({\n        blending: blending,\n        uniforms: uniforms,\n        vertexShader: __WEBPACK_IMPORTED_MODULE_5__shaders_shaders__[\"b\" /* vertexShader */],\n        fragmentShader: __WEBPACK_IMPORTED_MODULE_5__shaders_shaders__[\"a\" /* fragmentShader */],\n        depthTest: depthTest,\n        depthWrite: depthWrite,\n        transparent: transparent\n      });\n\n      // set uv coords of particles in texture as positions\n      var geometry = new THREE.Geometry();\n\n      for (var i = 0; i < this.numParticles; i++) {\n        var vertex = new THREE.Vector3();\n        vertex.x = i % tWidth / tWidth;\n        vertex.y = Math.floor(i / tWidth) / tHeight;\n        geometry.vertices.push(vertex);\n      }\n\n      this.particles = new THREE.Points(geometry, this.material);\n      this.particles.frustumCulled = false;\n\n      scene.add(this.get());\n\n      document.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n      this.ready = true;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      this.windowHalfX = window.innerWidth / 2;\n      this.windowHalfY = window.innerHeight / 2;\n    }\n  }, {\n    key: 'onMouseMove',\n    value: function onMouseMove(event) {\n      var xMultiplier = this.cameraZ / (this.windowHalfX * 2.7);\n      var yMultiplier = this.cameraZ / (this.windowHalfY * -2.7);\n      var mouseX = event.clientX - this.windowHalfX;\n      var mouseY = this.windowHalfY - event.clientY;\n\n      this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0);\n    }\n  }, {\n    key: 'getPositions',\n    value: function getPositions() {\n      var vertices = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n        var vertice = this.calcPosition();\n\n        this.positions[i3] = vertices[i4] = vertice[0];\n        this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1];\n        this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2];\n\n        vertices[i4 + 3] = 1.0;\n      }\n\n      return vertices;\n    }\n  }, {\n    key: 'calcPosition',\n    value: function calcPosition() {\n      var x = (Math.random() - 0.5) * this.radius;\n      var y = (Math.random() - 0.5) * this.radius;\n      var z = 0;\n\n      return [x, y, z];\n    }\n  }, {\n    key: 'getSizes',\n    value: function getSizes() {\n      var sizes = new Float32Array(this.numParticles * 4);\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        sizes[i4 + 3] = this.calcSize();\n      }\n      return sizes;\n    }\n  }, {\n    key: 'calcSize',\n    value: function calcSize() {\n      var sizeRange = this.maxSize - this.minSize;\n      var size = this.minSize + sizeRange * Math.pow(Math.random(), this.skew);\n\n      return size;\n    }\n  }, {\n    key: 'getColours',\n    value: function getColours() {\n      var colours = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        var colour = this.calcColour();\n\n        colours[i4] = colour[0];\n        colours[i4 + 1] = colour[1];\n        colours[i4 + 2] = colour[2];\n        colours[i4 + 3] = colour[3];\n      }\n\n      return Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* createDataTexture */])({\n        data: colours,\n        tWidth: this.tWidth,\n        tHeight: this.tHeight,\n        format: this.sizeFBO.format,\n        filterType: this.sizeFBO.filterType\n      });\n    }\n  }, {\n    key: 'calcColour',\n    value: function calcColour() {\n      var _this2 = this;\n\n      var randomVal = Math.ceil(Math.random() * 10);\n\n      var getColor = function getColor(r, g, b, a) {\n        return [_this2.brightness * r / 255, _this2.brightness * g / 255, _this2.brightness * b / 255, _this2.opacity];\n      };\n\n      switch (randomVal) {\n        case 1:\n          return getColor(155, 176, 255);\n\n        case 2:\n          return getColor(170, 191, 255);\n\n        case 3:\n          return getColor(202, 215, 255);\n\n        case 4:\n          return getColor(248, 247, 255);\n\n        case 5:\n          return getColor(255, 244, 234);\n\n        case 6:\n          return getColor(255, 210, 161);\n\n        case 7:\n          return getColor(255, 204, 111);\n\n        default:\n          return getColor(255, 255, 255);\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      if (this.ready) {\n        var videoEl = this.videoEl,\n            webcamElContext = this.webcamElContext,\n            _webcamEl = this.webcamEl,\n            videoWidth = _webcamEl.width,\n            videoHeight = _webcamEl.height,\n            webcamTexture = this.webcamTexture;\n\n        if (videoEl.readyState === videoEl.HAVE_ENOUGH_DATA) {\n          webcamElContext.drawImage(videoEl, 0, 0, videoWidth, videoHeight);\n          webcamTexture.needsUpdate = true;\n        }\n\n        this.blackAndWhiteFBO.simulate();\n        this.webcamDifferenceFBO.simulationShader.uniforms.tWebcam.value = this.blackAndWhiteFBO.getCurrentFrame();\n        this.webcamDifferenceFBO.simulate();\n        this.sizeFBO.simulationShader.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame();\n        this.material.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame();\n        this.sizeFBO.simulate();\n        this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame();\n      }\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.particles;\n    }\n  }, {\n    key: 'setCameraZ',\n    value: function setCameraZ(newCameraZ) {\n      this.cameraZ = newCameraZ;\n    }\n  }, {\n    key: 'updateColours',\n    value: function updateColours() {\n      this.material.uniforms.tColour.value = this.getColours();\n    }\n  }, {\n    key: 'updateSizes',\n    value: function updateSizes() {\n      this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange;\n      this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc;\n      this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n    }\n  }, {\n    key: 'updateParticleVars',\n    value: function updateParticleVars() {\n      if (this.minSize > this.maxSize) {\n        this.minSize = this.maxSize;\n      }\n\n      if (this.maxSize < this.minSize) {\n        this.maxSize = this.minSize;\n      }\n\n      this.webcamDifferenceFBO.simulationShader.uniforms.webcamOutlineStrength.value = this.webcamOutlineStrength;\n      this.sizeFBO.simulationShader.uniforms.webcamThreshold.value = this.webcamThreshold;\n      this.sizeFBO.simulationShader.uniforms.webcamStarInc.value = this.webcamStarInc;\n      this.sizeFBO.simulationShader.uniforms.webcamStarSize.value = this.webcamStarSize;\n      this.sizeFBO.simulationShader.uniforms.webcamStarMultiplier.value = this.webcamStarMultiplier;\n      this.sizeFBO.simulationShader.uniforms.webcamStarDecSpeed.value = this.webcamStarDecSpeed;\n\n      this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist;\n      this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc;\n      this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier;\n    }\n  }, {\n    key: 'bgColorTop',\n    get: function get() {\n      return this._bgColorTop;\n    },\n    set: function set(newVal) {\n      this._bgColorTop = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }, {\n    key: 'bgColorBottom',\n    get: function get() {\n      return this._bgColorBottom;\n    },\n    set: function set(newVal) {\n      this._bgColorBottom = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }]);\n\n  return Particles;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Particles);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 13 */,\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return sizeSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sizeSimulationVertexShader; });\n/* eslint-disable */\n\nvar sizeSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tDefaultSize;\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float webcamThreshold;\\n\\tuniform float webcamStarInc;\\n\\tuniform float webcamStarSize;\\n\\tuniform float webcamStarMultiplier;\\n\\tuniform float webcamStarDecSpeed;\\n\\n\\tuniform float sizeInc;\\n\\tuniform float sizeRange;\\n\\tuniform float radius;\\n\\n\\tuniform vec3 mouse;\\n\\tuniform float hoverDist;\\n\\tuniform float hoverSizeInc;\\n\\tuniform float hoverMaxSizeMultiplier;\\n\\n\\tfloat getSize(bool isWebcamParticle, float webcamParticleVal, vec3 currPosition) {\\n\\t\\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\\n\\t\\tfloat prevSize = texture2D(tPrev, vUv).w;\\n\\t\\tfloat size = texture2D(tCurr, vUv).w;\\n\\t\\tfloat _sizeInc = sizeInc;\\n\\t\\tfloat _defaultSize = defaultSize;\\n\\n\\t\\tif (isWebcamParticle) {\\n\\t\\t\\t_defaultSize += webcamStarSize + (webcamParticleVal * webcamStarMultiplier) * (_defaultSize / 2.0) * _defaultSize * _defaultSize;\\n\\t\\t\\t_sizeInc += webcamParticleVal * webcamStarInc;\\n\\t\\t}\\n\\n\\t\\tfloat minSize = _defaultSize - sizeRange;\\n\\t\\tfloat maxSize = _defaultSize + sizeRange;\\n\\t\\tbool wasWebcamParticle = maxSize - _sizeInc >= maxSize && !isWebcamParticle;\\n\\n\\t\\tif (size == 0.0) {\\n\\t\\t\\tsize = _defaultSize;\\n\\t\\t} else if (prevSize == 0.0 || size == prevSize) {\\n\\t\\t\\tsize += rand(vUv) >= 0.5 ? _sizeInc : -_sizeInc;\\n\\t\\t} else if (size < minSize) {\\n\\t\\t\\tsize += _sizeInc;\\n\\t\\t} else if (size > maxSize) {\\n\\t\\t\\tsize = wasWebcamParticle ? maxSize : size - _sizeInc;\\n\\t\\t} else {\\n\\t\\t\\tsize += size - prevSize > 0.0 ? _sizeInc : -_sizeInc;\\n\\t\\t}\\n\\n\\t\\tfloat dist = length(currPosition.xy - mouse.xy);\\n\\n\\t\\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\\n\\t\\t\\tsize += hoverSizeInc;\\n\\t\\t}\\n\\n\\t\\treturn size;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat webcamParticleVal = texture2D(tWebcam, vec2((currPosition.x + (radius / 2.0)) / radius, (currPosition.y + (radius / 2.0)) / radius)).r;\\n\\t\\tbool isWebcamParticle = webcamParticleVal > webcamThreshold;\\n\\n\\t\\tgl_FragColor = vec4(0.0, 0.0, isWebcamParticle ? 1.0: 0.0, getSize(isWebcamParticle, webcamParticleVal, currPosition));\\n\\t}\\n\";\n\nvar sizeSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return blackAndWhiteSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return blackAndWhiteSimulationVertexShader; });\n/* eslint-disable */\n\nvar blackAndWhiteSimulationFragmentShader = \"\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeInc;\\n\\tuniform float sizeRange;\\n\\n\\tvoid main() {\\n\\t\\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\\n    float avg = (webcamParticle.x + webcamParticle.y + webcamParticle.z) / 3.0;\\n\\n\\t\\tgl_FragColor = vec4(avg, avg, avg, 1.0);\\n\\t}\\n\";\n\nvar blackAndWhiteSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return differenceSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return differenceSimulationVertexShader; });\n/* eslint-disable */\n\nvar differenceSimulationFragmentShader = \"\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeInc;\\n  uniform float sizeRange;\\n  uniform float webcamWidth;\\n\\tuniform float webcamHeight;\\n\\tuniform float webcamOutlineStrength;\\n\\n\\tvoid main() {\\n\\t\\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\\n\\t\\tvec3 webcamParticleAbove = texture2D(tWebcam, vec2(vUv.x, vUv.y - (1.0 / webcamWidth))).xyz;\\n\\t\\tvec3 webcamParticleBelow = texture2D(tWebcam, vec2(vUv.x, vUv.y + (1.0 / webcamWidth))).xyz;\\n\\t\\tvec3 webcamParticleLeft = texture2D(tWebcam, vec2(vUv.x - (1.0 / webcamHeight), vUv.y)).xyz;\\n\\t\\tvec3 webcamParticleRight = texture2D(tWebcam, vec2(vUv.x + (1.0 / webcamHeight), vUv.y)).xyz;\\n\\n    float average = (\\n\\t\\t\\twebcamParticleAbove.x +\\n      webcamParticleBelow.x +\\n      webcamParticleLeft.x +\\n\\t\\t\\twebcamParticleRight.x\\n\\t\\t) / 4.0;\\n\\n    webcamParticle.x -= average;\\n    webcamParticle.y -= average;\\n    webcamParticle.z -= average;\\n\\n    webcamParticle.x *= webcamOutlineStrength;\\n    webcamParticle.y *= webcamOutlineStrength;\\n    webcamParticle.z *= webcamOutlineStrength;\\n\\n\\t\\tgl_FragColor = vec4(webcamParticle, 1.0);\\n\\t}\\n\";\n\nvar differenceSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return vertexShader; });\n/* eslint-disable */\n\nvar fragmentShader = \"\\n\\tuniform sampler2D tColour;\\n\\tuniform sampler2D starImg;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvec4 colour = texture2D(tColour, vUv).rgba;\\n\\n\\t\\tgl_FragColor = colour;\\n\\t\\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\\n\\t}\\n\";\n\nvar vertexShader = \"\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tSize;\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeMultiplierForScreen;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvUv = position.xy;\\n\\t\\tvec4 webcamParticle = texture2D(tWebcam, vUv).rgba;\\n\\t\\tvec4 position = texture2D(tPosition, vUv).xyzw;\\n\\t\\tfloat size = texture2D(tSize, vUv).w;\\n\\n\\t\\tvec4 mvPosition = modelViewMatrix * position;\\n\\t\\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\\n\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t}\\n\";\n\n\n\n/***/ })\n],[6]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js","export function getParameterByName (name, url) {\n  if (!url) {\n    url = window.location.href\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`)\n  const results = regex.exec(url)\n\n  if (!results) return null\n  if (!results[2]) return ''\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport function getZRatio () {\n  if (window.innerWidth > 1100) {\n    return 170\n  } else if (window.innerWidth > 700) {\n    return 100\n  } else if (window.innerWidth > 500) {\n    return 85\n  } else {\n    return 50\n  }\n}\n\nexport function createDataTexture ({\n  data,\n  tWidth,\n  tHeight,\n  format,\n  filterType\n}) {\n  const dataTexture = new THREE.DataTexture(\n    data,\n    tWidth,\n    tHeight,\n    format,\n    THREE.FloatType\n  )\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType\n  dataTexture.needsUpdate = true\n  dataTexture.flipY = false\n\n  return dataTexture\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","import DatGUI from 'dat-gui'\n\nexport default class Controls {\n  constructor ({\n    particles,\n    scene\n  } = {}) {\n    this.gui = new DatGUI.GUI()\n\n    this.addBgControls(particles)\n    this.addSizeControls(particles)\n    this.addWebcamControls(particles)\n    this.addMouseControls(particles)\n    this.addColourStrengthControls(particles)\n    this.addOpacityControls(particles)\n  }\n\n  addBgControls (particles) {\n    this.gui\n      .addColor(particles, 'bgColorTop')\n\n    this.gui\n      .addColor(particles, 'bgColorBottom')\n  }\n\n  addSizeControls (particles) {\n    this.gui\n      .add(particles, 'minSize')\n      .min(0.0001)\n      .max(0.06)\n      .step(0.0001)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'maxSize')\n      .min(0.01)\n      .max(0.1)\n      .step(0.001)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeInc')\n      .min(0.00001)\n      .max(0.0002)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeRange')\n      .min(0)\n      .max(0.02)\n      .step(0.0005)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'skew')\n      .min(1)\n      .max(1000)\n      .step(10)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n  }\n\n  addWebcamControls (particles) {\n    this.gui\n      .add(particles, 'webcamOutlineStrength')\n      .min(10)\n      .max(300)\n      .step(1)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'webcamThreshold')\n      .min(0)\n      .max(1)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'webcamStarInc')\n      .min(0.000001)\n      .max(0.001)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'webcamStarSize')\n      .min(0.001)\n      .max(0.05)\n      .step(0.001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'webcamStarMultiplier')\n      .min(1000)\n      .max(10000)\n      .step(100)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    // this.gui\n    //   .add(particles, 'webcamStarDecSpeed')\n    //   .min(1)\n    //   .max(50)\n    //   .step(0.5)\n    //   .onFinishChange(() => {\n    //     particles.updateParticleVars()\n    //   })\n  }\n\n  addMouseControls (particles) {\n    this.gui\n      .add(particles, 'hoverDist')\n      .min(0)\n      .max(0.5)\n      .step(0.01)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverSizeInc')\n      .min(0)\n      .max(0.03)\n      .step(0.001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverMaxSizeMultiplier')\n      .min(1)\n      .max(5)\n      .step(0.2)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addColourStrengthControls (particles) {\n    this.gui\n      .add(particles, 'brightness')\n      .min(0.1)\n      .max(3)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n\n  addOpacityControls (particles) {\n    this.gui\n      .add(particles, 'opacity')\n      .min(0.1)\n      .max(2)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/controls.js","import isWebglEnabled from 'detector-webgl'\nimport Stats from 'stats.js'\nimport Camera from './io/camera'\nimport Controls from './io/controls'\nimport Renderer from './io/renderer'\nimport Scene from './objects/scene'\nimport Particles from './objects/particles'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (isWebglEnabled) {\n    const container = document.getElementById('stars-simulation-container')\n    const renderer = new Renderer({ container })\n    const scene = new Scene()\n    const particles = new Particles({\n      scene,\n      renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 4000 : 100000,\n      radius: 3,\n      minSize: 0.013,\n      maxSize: 0.04,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 75,\n      brightness: 0.9,\n      opacity: 1,\n      webcamOutlineStrength: 70,\n      webcamThreshold: 0.2,\n      webcamStarInc: 0.0001,\n      webcamStarSize: 0.01,\n      webcamStarMultiplier: 5000,\n      webcamStarDecSpeed: 5.5,\n      hoverDist: 0.04,\n      hoverSizeInc: 0.002,\n      hoverMaxSizeMultiplier: 3\n    })\n    const camera = new Camera({\n      aspectRatio: 1.0,\n      particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -3.9\n      }\n    })\n    const stats = new Stats()\n\n    const init = () => {\n      new Controls({ particles }) // eslint-disable-line\n\n      stats.showPanel(0)\n      document.body.appendChild(stats.dom)\n    }\n\n    const animate = () => {\n      requestAnimationFrame(animate) // eslint-disable-line\n      render()\n    }\n\n    const render = () => {\n      stats.begin()\n\n      particles.update()\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      })\n\n      stats.end()\n    }\n\n    init()\n    animate()\n  } else {\n    const info = document.getElementById('info')\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.'\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { getZRatio } from '../utils'\n\nexport default class Camera {\n  constructor ({\n    particles,\n    fov = 400,\n    aspectRatio = window.innerWidth / window.innerHeight,\n    near = 0.1,\n    far = 2000,\n    position = {\n      x: 0, y: 0, z: 0\n    },\n    up = [0, 0, 1]\n  }) {\n    this.particles = particles\n    this.particles.setCameraZ(position.z)\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far)\n    this.up = up\n\n    this.setPosition(position)\n    this.setUp(...this.up)\n    this.setLookAt()\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.camera.aspect = WIDTH / HEIGHT\n    this.setZ(window.innerHeight / getZRatio())\n    this.camera.updateProjectionMatrix()\n  }\n\n  setUp (x, y, z) {\n    this.camera.up.set(x, y, z)\n  }\n\n  setPosition ({\n    x = this.camera.position.x,\n    y = this.camera.position.y,\n    z = this.camera.position.z\n  }) {\n    this.setX(x)\n    this.setY(y)\n    this.setZ(z)\n  }\n\n  setX (x) {\n    this.camera.position.x = x\n    this.setLookAt()\n  }\n\n  setY (y) {\n    this.camera.position.y = y\n    this.setLookAt()\n  }\n\n  setZ (z) {\n    this.camera.position.z = z\n    this.setLookAt()\n    this.setUp(0, 0, 1)\n    this.particles.setCameraZ(z)\n  }\n\n  setLookAt () {\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0))\n  }\n\n  get () {\n    return this.camera\n  }\n\n  getPosition () {\n    return this.camera.position\n  }\n\n  getZ () {\n    return this.camera.position.z\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/camera.js","export default class Renderer {\n  constructor ({\n    alpha = true,\n    pixelRatio = window.devicePixelRatio,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    container\n  }) {\n    this.renderer = new THREE.WebGLRenderer({ alpha })\n    const gl = this.renderer.context\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.setPixelRatio(pixelRatio)\n\n    this.setSize(width, height)\n\n    container.appendChild(this.getDomElement())\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  getDomElement () {\n    return this.renderer.domElement\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.renderer.setSize(WIDTH, HEIGHT)\n  }\n\n  setPixelRatio (pixelRatio) {\n    this.renderer.setPixelRatio(pixelRatio)\n  }\n\n  setSize (w, h) {\n    this.renderer.setSize(w, h)\n  }\n\n  render ({\n    scene,\n    camera,\n    renderTarget = null,\n    force = false\n  } = {}) {\n    this.renderer.render(scene, camera, renderTarget, force)\n  }\n\n  get () {\n    return this.renderer\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/renderer.js","export default class Canvas {\n  constructor () {\n    this.scene = new THREE.Scene()\n  }\n\n  add (obj) {\n    this.scene.add(obj)\n  }\n\n  remove (obj) {\n    this.scene.remove(obj)\n  }\n\n  get () {\n    return this.scene\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/scene.js","import FBO from 'three.js-fbo'\nimport { createDataTexture } from '../utils'\nimport { sizeSimulationVertexShader, sizeSimulationFragmentShader } from '../shaders/size-simulation-shaders'\nimport { blackAndWhiteSimulationVertexShader, blackAndWhiteSimulationFragmentShader } from '../shaders/black-and-white-webcam'\nimport { differenceSimulationVertexShader, differenceSimulationFragmentShader } from '../shaders/difference-webcam'\nimport { vertexShader, fragmentShader } from '../shaders/shaders'\n\nexport default class Particles {\n  constructor ({\n    scene,\n    configUniforms = {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: (window.innerHeight * window.devicePixelRatio) / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    },\n    blending = THREE.AdditiveBlending,\n    transparent = true,\n    depthTest = true,\n    depthWrite = false,\n\n    renderer,\n\n    // background colors\n    bgColorTop = '#000f23',\n    bgColorBottom = '#00071b',\n\n    numParticles = 10000,\n    radius = 100, // radius of outer particle\n\n    // used to define and animate sizes\n    minSize = 1,\n    maxSize = 3,\n    sizeRange = 0.5, // the amount the size is allowed to fluxuate in animation\n    sizeInc = 0.01, // the amount the size is increased / decreased per frame\n    skew = 1,\n\n    // particle colours\n    brightness = 1,\n    opacity = 1,\n\n    // webcam particle values\n    webcamOutlineStrength = 50,\n    webcamThreshold = 0.5,\n    webcamStarInc = 0.0001,\n    webcamStarSize = 0.3,\n    webcamStarMultiplier = 5000,\n    webcamStarDecSpeed = 5,\n\n    // used to define raycasting boundries\n    hoverDist = 10,\n    hoverSizeInc = 0.05,\n    hoverMaxSizeMultiplier = 5\n  }) {\n    this.renderer = renderer\n\n    this.bgColorTop = bgColorTop\n    this.bgColorBottom = bgColorBottom\n\n    this.numParticles = numParticles\n    this.radius = radius\n\n    // used to define star glinting\n    this.minSize = minSize\n    this.maxSize = maxSize\n    this.sizeRange = sizeRange\n    this.sizeInc = sizeInc\n    this.skew = skew // skews the median size\n\n    // use to define particle colours\n    this.brightness = brightness\n    this.opacity = opacity\n\n    // webcm particle controls\n    this.webcamOutlineStrength = webcamOutlineStrength\n    this.webcamThreshold = webcamThreshold\n    this.webcamStarInc = webcamStarInc\n    this.webcamStarSize = webcamStarSize\n    this.webcamStarMultiplier = webcamStarMultiplier\n    this.webcamStarDecSpeed = webcamStarDecSpeed\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n\n    // used to define mouse interaction animation\n    this.hoverDist = hoverDist\n    this.hoverSizeInc = hoverSizeInc\n    this.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier\n\n    this.videoEl = document.createElement('video')\n    this.videoWidth = 1280\n    this.videoHeight = 720\n\n    const noSupport = document.createElement('h1')\n    noSupport.innerHTML = 'Your browser is not supported. Please use Google Chrome (v21 or above).'\n\n    navigator.getUserMedia\n      ? navigator.getUserMedia({ video: { width: this.videoWidth, height: this.videoHeight } }, stream => {\n        const videoEl = this.videoEl\n        videoEl.srcObject = stream\n        videoEl.autoplay = true\n\n        this.addStars({\n          scene,\n          renderer,\n          configUniforms,\n          blending,\n          transparent,\n          depthTest,\n          depthWrite\n        })\n      }, () => console.error('video failed to load'))\n      : document.getElementsByTagName('body')[0].append(noSupport)\n\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  addStars ({\n    scene,\n    renderer,\n    configUniforms,\n    blending,\n    transparent,\n    depthTest,\n    depthWrite\n  }) {\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    const tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles))\n    const tWidth = this.tWidth = tHeight\n    this.numParticles = tWidth * tHeight\n\n    const webcamEl = this.webcamEl = document.createElement('canvas')\n    this.webcamElContext = webcamEl.getContext('2d')\n\n    const webcamTexture = this.webcamTexture = new THREE.Texture(webcamEl)\n    webcamTexture.minFilter = webcamTexture.magFilter = THREE.NearestFilter\n    webcamTexture.needsUpdate = true\n\n    const webcamDiffEl = this.webcamDiffEl = document.createElement('canvas')\n    this.webcamDiffElContext = webcamDiffEl.getContext('2d')\n\n    const webcamDiffTexture = this.webcamDiffTexture = new THREE.Texture(webcamDiffEl)\n    webcamDiffTexture.minFilter = webcamDiffTexture.magFilter = THREE.NearestFilter\n    webcamDiffTexture.needsUpdate = true\n\n    this.positions = new Float32Array(this.numParticles * 3)\n\n    this.blackAndWhiteFBO = new FBO({\n      tWidth: this.webcamEl.width,\n      tHeight: this.webcamEl.height,\n      renderer: renderer.get(),\n      uniforms: {\n        tWebcam: { type: 't', value: webcamTexture }\n      },\n      simulationVertexShader: blackAndWhiteSimulationVertexShader,\n      simulationFragmentShader: blackAndWhiteSimulationFragmentShader\n    })\n\n    this.webcamDifferenceFBO = new FBO({\n      tWidth: this.webcamEl.width,\n      tHeight: this.webcamEl.height,\n      renderer: renderer.get(),\n      uniforms: {\n        webcamWidth: { type: 'f', value: this.webcamEl.width },\n        webcamHeight: { type: 'f', value: this.webcamEl.height },\n        tWebcam: { type: 't', value: 0 },\n        webcamOutlineStrength: { type: 'f', value: this.webcamOutlineStrength }\n      },\n      simulationVertexShader: differenceSimulationVertexShader,\n      simulationFragmentShader: differenceSimulationFragmentShader\n    })\n\n    this.webcamDifferenceFBO.setTextureUniform('tWebcam', this.blackAndWhiteFBO.getCurrentFrame())\n\n    this.sizeFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        radius: { type: 'f', value: this.radius },\n\n        tPosition: { type: 't', value: 0 },\n        tDefaultSize: { type: 't', value: 0 },\n        tWebcam: { type: 't', value: 0 },\n\n        sizeRange: { type: 'f', value: this.sizeRange },\n        sizeInc: { type: 'f', value: this.sizeInc },\n\n        webcamThreshold: { type: 'f', value: this.webcamThreshold },\n        webcamStarInc: { type: 'f', value: this.webcamStarInc },\n        webcamStarSize: { type: 'f', value: this.webcamStarSize },\n        webcamStarMultiplier: { type: 'f', value: this.webcamStarMultiplier },\n        webcamStarDecSpeed: { type: 'f', value: this.webcamStarDecSpeed },\n\n        mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n        hoverDist: { type: 'f', value: this.hoverDist },\n        hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n        hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n      },\n      simulationVertexShader: sizeSimulationVertexShader,\n      simulationFragmentShader: sizeSimulationFragmentShader\n    })\n\n    this.sizeFBO.setTextureUniform('tPosition', this.getPositions())\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n\n    const uniforms = Object.assign({}, configUniforms, {\n      tPosition: { type: 't', value: this.sizeFBO.simulationShader.uniforms.tPosition.value },\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      tWebcam: { type: 't', value: 0 },\n\n      tColour: { type: 't', value: this.getColours() }\n    })\n\n    this.material = new THREE.ShaderMaterial({\n      blending,\n      uniforms,\n      vertexShader,\n      fragmentShader,\n      depthTest,\n      depthWrite,\n      transparent\n    })\n\n    // set uv coords of particles in texture as positions\n    const geometry = new THREE.Geometry()\n\n    for (let i = 0; i < this.numParticles; i++) {\n      const vertex = new THREE.Vector3()\n      vertex.x = (i % tWidth) / tWidth\n      vertex.y = Math.floor(i / tWidth) / tHeight\n      geometry.vertices.push(vertex)\n    }\n\n    this.particles = new THREE.Points(geometry, this.material)\n    this.particles.frustumCulled = false\n\n    scene.add(this.get())\n\n    document.addEventListener('mousemove', this.onMouseMove.bind(this), false)\n    this.ready = true\n  }\n\n  get bgColorTop () {\n    return this._bgColorTop\n  }\n\n  set bgColorTop (newVal) {\n    this._bgColorTop = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  get bgColorBottom () {\n    return this._bgColorBottom\n  }\n\n  set bgColorBottom (newVal) {\n    this._bgColorBottom = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  onWindowResize () {\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n  }\n\n  onMouseMove (event) {\n    const xMultiplier = this.cameraZ / (this.windowHalfX * 2.7)\n    const yMultiplier = this.cameraZ / (this.windowHalfY * -2.7)\n    const mouseX = event.clientX - this.windowHalfX\n    const mouseY = this.windowHalfY - event.clientY\n\n    this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0)\n  }\n\n  getPositions () {\n    const vertices = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n      const vertice = this.calcPosition()\n\n      this.positions[i3] = vertices[i4] = vertice[0]\n      this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1]\n      this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2]\n\n      vertices[i4 + 3] = 1.0\n    }\n\n    return vertices\n  }\n\n  calcPosition () {\n    const x = (Math.random() - 0.5) * this.radius\n    const y = (Math.random() - 0.5) * this.radius\n    const z = 0\n\n    return [x, y, z]\n  }\n\n  getSizes () {\n    const sizes = new Float32Array(this.numParticles * 4)\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      sizes[i4 + 3] = this.calcSize()\n    }\n    return sizes\n  }\n\n  calcSize () {\n    const sizeRange = this.maxSize - this.minSize\n    const size = this.minSize + (sizeRange * Math.pow(Math.random(), this.skew))\n\n    return size\n  }\n\n  getColours () {\n    const colours = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      const colour = this.calcColour()\n\n      colours[i4] = colour[0]\n      colours[i4 + 1] = colour[1]\n      colours[i4 + 2] = colour[2]\n      colours[i4 + 3] = colour[3]\n    }\n\n    return createDataTexture({\n      data: colours,\n      tWidth: this.tWidth,\n      tHeight: this.tHeight,\n      format: this.sizeFBO.format,\n      filterType: this.sizeFBO.filterType\n    })\n  }\n\n  calcColour () {\n    const randomVal = Math.ceil(Math.random() * 10)\n\n    const getColor = (r, g, b, a) => [\n      this.brightness * r / 255,\n      this.brightness * g / 255,\n      this.brightness * b / 255,\n      this.opacity\n    ]\n\n    switch (randomVal) {\n      case 1:\n        return getColor(155, 176, 255)\n\n      case 2:\n        return getColor(170, 191, 255)\n\n      case 3:\n        return getColor(202, 215, 255)\n\n      case 4:\n        return getColor(248, 247, 255)\n\n      case 5:\n        return getColor(255, 244, 234)\n\n      case 6:\n        return getColor(255, 210, 161)\n\n      case 7:\n        return getColor(255, 204, 111)\n\n      default:\n        return getColor(255, 255, 255)\n    }\n  }\n\n  update () {\n    if (this.ready) {\n      const { videoEl, webcamElContext, webcamEl: { width: videoWidth, height: videoHeight }, webcamTexture } = this\n      if (videoEl.readyState === videoEl.HAVE_ENOUGH_DATA) {\n        webcamElContext.drawImage(videoEl, 0, 0, videoWidth, videoHeight)\n        webcamTexture.needsUpdate = true\n      }\n\n      this.blackAndWhiteFBO.simulate()\n      this.webcamDifferenceFBO.simulationShader.uniforms.tWebcam.value = this.blackAndWhiteFBO.getCurrentFrame()\n      this.webcamDifferenceFBO.simulate()\n      this.sizeFBO.simulationShader.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame()\n      this.material.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame()\n      this.sizeFBO.simulate()\n      this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame()\n    }\n  }\n\n  get () {\n    return this.particles\n  }\n\n  setCameraZ (newCameraZ) {\n    this.cameraZ = newCameraZ\n  }\n\n  updateColours () {\n    this.material.uniforms.tColour.value = this.getColours()\n  }\n\n  updateSizes () {\n    this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange\n    this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n  }\n\n  updateParticleVars () {\n    if (this.minSize > this.maxSize) {\n      this.minSize = this.maxSize\n    }\n\n    if (this.maxSize < this.minSize) {\n      this.maxSize = this.minSize\n    }\n\n    this.webcamDifferenceFBO.simulationShader.uniforms.webcamOutlineStrength.value = this.webcamOutlineStrength\n    this.sizeFBO.simulationShader.uniforms.webcamThreshold.value = this.webcamThreshold\n    this.sizeFBO.simulationShader.uniforms.webcamStarInc.value = this.webcamStarInc\n    this.sizeFBO.simulationShader.uniforms.webcamStarSize.value = this.webcamStarSize\n    this.sizeFBO.simulationShader.uniforms.webcamStarMultiplier.value = this.webcamStarMultiplier\n    this.sizeFBO.simulationShader.uniforms.webcamStarDecSpeed.value = this.webcamStarDecSpeed\n\n    this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist\n    this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc\n    this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/particles.js","/* eslint-disable */\n\nconst sizeSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tDefaultSize;\n\tuniform sampler2D tWebcam;\n\n\tuniform float webcamThreshold;\n\tuniform float webcamStarInc;\n\tuniform float webcamStarSize;\n\tuniform float webcamStarMultiplier;\n\tuniform float webcamStarDecSpeed;\n\n\tuniform float sizeInc;\n\tuniform float sizeRange;\n\tuniform float radius;\n\n\tuniform vec3 mouse;\n\tuniform float hoverDist;\n\tuniform float hoverSizeInc;\n\tuniform float hoverMaxSizeMultiplier;\n\n\tfloat getSize(bool isWebcamParticle, float webcamParticleVal, vec3 currPosition) {\n\t\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\n\t\tfloat prevSize = texture2D(tPrev, vUv).w;\n\t\tfloat size = texture2D(tCurr, vUv).w;\n\t\tfloat _sizeInc = sizeInc;\n\t\tfloat _defaultSize = defaultSize;\n\n\t\tif (isWebcamParticle) {\n\t\t\t_defaultSize += webcamStarSize + (webcamParticleVal * webcamStarMultiplier) * (_defaultSize / 2.0) * _defaultSize * _defaultSize;\n\t\t\t_sizeInc += webcamParticleVal * webcamStarInc;\n\t\t}\n\n\t\tfloat minSize = _defaultSize - sizeRange;\n\t\tfloat maxSize = _defaultSize + sizeRange;\n\t\tbool wasWebcamParticle = maxSize - _sizeInc >= maxSize && !isWebcamParticle;\n\n\t\tif (size == 0.0) {\n\t\t\tsize = _defaultSize;\n\t\t} else if (prevSize == 0.0 || size == prevSize) {\n\t\t\tsize += rand(vUv) >= 0.5 ? _sizeInc : -_sizeInc;\n\t\t} else if (size < minSize) {\n\t\t\tsize += _sizeInc;\n\t\t} else if (size > maxSize) {\n\t\t\tsize = wasWebcamParticle ? maxSize : size - _sizeInc;\n\t\t} else {\n\t\t\tsize += size - prevSize > 0.0 ? _sizeInc : -_sizeInc;\n\t\t}\n\n\t\tfloat dist = length(currPosition.xy - mouse.xy);\n\n\t\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\n\t\t\tsize += hoverSizeInc;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\tvoid main() {\n\t\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\n\t\tfloat webcamParticleVal = texture2D(tWebcam, vec2((currPosition.x + (radius / 2.0)) / radius, (currPosition.y + (radius / 2.0)) / radius)).r;\n\t\tbool isWebcamParticle = webcamParticleVal > webcamThreshold;\n\n\t\tgl_FragColor = vec4(0.0, 0.0, isWebcamParticle ? 1.0: 0.0, getSize(isWebcamParticle, webcamParticleVal, currPosition));\n\t}\n`\n\nconst sizeSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  sizeSimulationFragmentShader,\n  sizeSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/size-simulation-shaders.js","/* eslint-disable */\n\nconst blackAndWhiteSimulationFragmentShader = `\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeInc;\n\tuniform float sizeRange;\n\n\tvoid main() {\n\t\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\n    float avg = (webcamParticle.x + webcamParticle.y + webcamParticle.z) / 3.0;\n\n\t\tgl_FragColor = vec4(avg, avg, avg, 1.0);\n\t}\n`\n\nconst blackAndWhiteSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  blackAndWhiteSimulationFragmentShader,\n  blackAndWhiteSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/black-and-white-webcam.js","/* eslint-disable */\n\nconst differenceSimulationFragmentShader = `\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeInc;\n  uniform float sizeRange;\n  uniform float webcamWidth;\n\tuniform float webcamHeight;\n\tuniform float webcamOutlineStrength;\n\n\tvoid main() {\n\t\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\n\t\tvec3 webcamParticleAbove = texture2D(tWebcam, vec2(vUv.x, vUv.y - (1.0 / webcamWidth))).xyz;\n\t\tvec3 webcamParticleBelow = texture2D(tWebcam, vec2(vUv.x, vUv.y + (1.0 / webcamWidth))).xyz;\n\t\tvec3 webcamParticleLeft = texture2D(tWebcam, vec2(vUv.x - (1.0 / webcamHeight), vUv.y)).xyz;\n\t\tvec3 webcamParticleRight = texture2D(tWebcam, vec2(vUv.x + (1.0 / webcamHeight), vUv.y)).xyz;\n\n    float average = (\n\t\t\twebcamParticleAbove.x +\n      webcamParticleBelow.x +\n      webcamParticleLeft.x +\n\t\t\twebcamParticleRight.x\n\t\t) / 4.0;\n\n    webcamParticle.x -= average;\n    webcamParticle.y -= average;\n    webcamParticle.z -= average;\n\n    webcamParticle.x *= webcamOutlineStrength;\n    webcamParticle.y *= webcamOutlineStrength;\n    webcamParticle.z *= webcamOutlineStrength;\n\n\t\tgl_FragColor = vec4(webcamParticle, 1.0);\n\t}\n`\n\nconst differenceSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  differenceSimulationFragmentShader,\n  differenceSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/difference-webcam.js","/* eslint-disable */\n\nconst fragmentShader = `\n\tuniform sampler2D tColour;\n\tuniform sampler2D starImg;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvec4 colour = texture2D(tColour, vUv).rgba;\n\n\t\tgl_FragColor = colour;\n\t\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\n\t}\n`\n\nconst vertexShader = `\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tSize;\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeMultiplierForScreen;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvUv = position.xy;\n\t\tvec4 webcamParticle = texture2D(tWebcam, vUv).rgba;\n\t\tvec4 position = texture2D(tPosition, vUv).xyzw;\n\t\tfloat size = texture2D(tSize, vUv).w;\n\n\t\tvec4 mvPosition = modelViewMatrix * position;\n\t\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t}\n`\n\nexport {\n  fragmentShader,\n  vertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/shaders.js"],"sourceRoot":""}