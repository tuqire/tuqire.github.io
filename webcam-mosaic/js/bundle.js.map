{"version":3,"sources":["webpack:///js/bundle.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/io/gui.js","webpack:///./src/js/main.js","webpack:///./src/js/io/camera.js","webpack:///./src/js/io/renderer.js","webpack:///./src/js/objects/scene.js","webpack:///./src/js/objects/particles.js","webpack:///./src/js/shaders/size-simulation-shaders.js","webpack:///./src/js/shaders/shaders.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","THREE","getZRatio","window","innerWidth","createDataTexture","_ref","data","tWidth","tHeight","format","filterType","dataTexture","DataTexture","FloatType","minFilter","magFilter","needsUpdate","flipY","call","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","detector_webgl","detector_webgl_default","n","io_camera","dat_gui","dat_gui_default","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","gui_GUI","GUI","arguments","undefined","particles","scene","this","gui","a","addColor","add","keys","fonts","onFinishChange","updateTextTexture","min","max","step","updateParticleVars","minSize","maxSize","updateSizes","updateColours","io_gui","io_renderer","objects_scene","objects_particles","document","addEventListener","container","getElementById","renderer","numParticles","matchMedia","matches","radius","sizeRange","sizeInc","skew","brightness","opacity","camera","aspectRatio","position","x","y","z","render","update","get","animate","requestAnimationFrame","innerHTML","_toConsumableArray","arr","Array","isArray","arr2","from","__WEBPACK_IMPORTED_MODULE_0__utils__","Camera","_ref$fov","fov","_ref$aspectRatio","innerHeight","_ref$near","near","_ref$far","far","_ref$position","_ref$up","up","setCameraZ","PerspectiveCamera","setPosition","setUp","apply","setLookAt","WIDTH","HEIGHT","aspect","setZ","updateProjectionMatrix","set","_ref2","_ref2$x","_ref2$y","_ref2$z","setX","setY","lookAt","Vector3","Renderer","_ref$alpha","alpha","_ref$pixelRatio","pixelRatio","devicePixelRatio","_ref$width","width","_ref$height","height","WebGLRenderer","gl","context","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setPixelRatio","setSize","appendChild","getDomElement","onWindowResize","bind","domElement","w","h","_ref2$renderTarget","renderTarget","_ref2$force","force","Canvas","Scene","obj","remove","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__","__WEBPACK_IMPORTED_MODULE_3__shaders_shaders__","Particles","_this","_ref$configUniforms","configUniforms","color","Color","sizeMultiplierForScreen","starImg","TextureLoader","load","_ref$blending","blending","AdditiveBlending","_ref$transparent","transparent","_ref$depthTest","depthTest","_ref$depthWrite","depthWrite","_ref$bgColorTop","bgColorTop","_ref$bgColorBottom","bgColorBottom","_ref$numParticles","_ref$radius","_ref$minSize","_ref$maxSize","_ref$sizeRange","_ref$sizeInc","_ref$skew","_ref$brightness","_ref$opacity","windowHalfX","windowHalfY","video","createElement","noSupport","navigator","getUserMedia","stream","src","URL","createObjectURL","autoplay","addStars","console","error","getElementsByTagName","append","Math","ceil","sqrt","videoImage","videoImageContext","getContext","videoTexture","Texture","NearestFilter","videoDiffImage","videoDiffImageContext","videoDiffTexture","querySelector","positions","Float32Array","sizeFBO","uniforms","tPosition","type","tDefaultSize","tWebcam","hoverDist","hoverSizeInc","hoverMaxSizeMultiplier","simulationVertexShader","simulationFragmentShader","setTextureUniform","getPositions","getSizes","assign","simulationShader","tSize","targets","tColour","material","ShaderMaterial","vertexShader","fragmentShader","geometry","Geometry","vertex","floor","vertices","push","Points","frustumCulled","ready","event","xMultiplier","cameraZ","yMultiplier","mouseX","clientX","mouseY","clientY","mouse","i3","i4","vertice","calcPosition","random","d","pow","sizes","calcSize","colours","colour","calcColour","_this2","randomVal","getColor","r","g","b","_videoImage","videoWidth","videoHeight","readyState","HAVE_ENOUGH_DATA","drawImage","imgPixels","getImageData","avg","average","putImageData","simulate","getCurrentFrame","newCameraZ","getColours","_bgColorTop","newVal","style","background","_bgColorBottom","sizeSimulationFragmentShader","sizeSimulationVertexShader"],"mappings":"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","file":"js/bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* unused harmony export getParameterByName */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getZRatio;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createDataTexture;\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(url);\n\n  if (!results) return null;\n  if (!results[2]) return '';\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getZRatio() {\n  if (window.innerWidth > 1100) {\n    return 170;\n  } else if (window.innerWidth > 700) {\n    return 100;\n  } else if (window.innerWidth > 500) {\n    return 85;\n  } else {\n    return 50;\n  }\n}\n\nfunction createDataTexture(_ref) {\n  var data = _ref.data,\n      tWidth = _ref.tWidth,\n      tHeight = _ref.tHeight,\n      format = _ref.format,\n      filterType = _ref.filterType;\n\n  var dataTexture = new THREE.DataTexture(data, tWidth, tHeight, format, THREE.FloatType);\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType;\n  dataTexture.needsUpdate = true;\n  dataTexture.flipY = false;\n\n  return dataTexture;\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/detector-webgl/index.js\nvar detector_webgl = __webpack_require__(1);\nvar detector_webgl_default = /*#__PURE__*/__webpack_require__.n(detector_webgl);\n\n// EXTERNAL MODULE: ./src/js/io/camera.js\nvar io_camera = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./node_modules/dat-gui/index.js\nvar dat_gui = __webpack_require__(3);\nvar dat_gui_default = /*#__PURE__*/__webpack_require__.n(dat_gui);\n\n// CONCATENATED MODULE: ./src/js/io/gui.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar gui_GUI = function () {\n  function GUI() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        particles = _ref.particles,\n        scene = _ref.scene;\n\n    _classCallCheck(this, GUI);\n\n    this.gui = new dat_gui_default.a.GUI();\n\n    // this.addBgControls(particles)\n    // this.addTextControls(particles)\n    // this.addMouseControls(particles)\n    // this.addSizeControls(particles)\n    // this.addColourStrengthControls(particles)\n    // this.addOpacityControls(particles)\n  }\n\n  _createClass(GUI, [{\n    key: 'addBgControls',\n    value: function addBgControls(particles) {\n      this.gui.addColor(particles, 'bgColorTop');\n\n      this.gui.addColor(particles, 'bgColorBottom');\n    }\n  }, {\n    key: 'addTextControls',\n    value: function addTextControls(particles) {\n      this.gui.add(particles, 'font', Object.keys(fonts)).onFinishChange(function () {\n        particles.updateTextTexture();\n      });\n\n      this.gui.add(particles, 'fontSize').min(10).max(200).step(5).onFinishChange(function () {\n        particles.updateTextTexture();\n      });\n\n      this.gui.add(particles, 'textAlign', ['left', 'center']).onFinishChange(function () {\n        particles.updateTextTexture();\n      });\n\n      this.gui.add(particles, 'textSizeMultiplier').min(1).max(1000).step(10).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'topSpeed').min(0.1).max(10).step(0.1).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'acceleration').min(0.00001).max(0.01).step(0.00001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addMouseControls',\n    value: function addMouseControls(particles) {\n      this.gui.add(particles, 'hoverDist').min(0).max(0.5).step(0.01).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverSizeInc').min(0).max(0.03).step(0.001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverMaxSizeMultiplier').min(1).max(3).step(0.05).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addSizeControls',\n    value: function addSizeControls(particles) {\n      this.gui.add(particles, 'minSize').min(0.01).max(0.04).step(0.001).onFinishChange(function () {\n        if (particles.minSize > particles.maxSize) {\n          particles.minSize = particles.maxSize;\n        }\n\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'maxSize').min(0.01).max(0.04).step(0.001).onFinishChange(function () {\n        if (particles.maxSize < particles.minSize) {\n          particles.maxSize = particles.minSize;\n        }\n\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeInc').min(0.00001).max(0.0002).step(0.00001).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeRange').min(0).max(0.02).step(0.0005).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'skew').min(1).max(100).step(1).onFinishChange(function () {\n        particles.updateSizes();\n      });\n    }\n  }, {\n    key: 'addColourStrengthControls',\n    value: function addColourStrengthControls(particles) {\n      this.gui.add(particles, 'brightness').min(0.1).max(3).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }, {\n    key: 'addOpacityControls',\n    value: function addOpacityControls(particles) {\n      this.gui.add(particles, 'opacity').min(0.1).max(1.5).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }]);\n\n  return GUI;\n}();\n\n/* harmony default export */ var io_gui = (gui_GUI);\n// EXTERNAL MODULE: ./src/js/io/renderer.js\nvar io_renderer = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./src/js/objects/scene.js\nvar objects_scene = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./src/js/objects/particles.js\nvar objects_particles = __webpack_require__(11);\n\n// CONCATENATED MODULE: ./src/js/main.js\n\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (detector_webgl_default.a) {\n    var container = document.getElementById('stars-simulation-container');\n    var renderer = new io_renderer[\"a\" /* default */]({ container: container });\n    var scene = new objects_scene[\"a\" /* default */]();\n    var particles = new objects_particles[\"a\" /* default */]({\n      scene: scene,\n      renderer: renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 4000 : 200000,\n      radius: 3,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 35,\n      brightness: 0.9,\n      opacity: 1\n    });\n    var camera = new io_camera[\"a\" /* default */]({\n      aspectRatio: 1,\n      particles: particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -1.37\n      }\n    });\n\n    var gui = new io_gui({ particles: particles }); // eslint-disable-line\n\n    var animate = function animate() {\n      requestAnimationFrame(animate); // eslint-disable-line\n      render();\n    };\n\n    var render = function render() {\n      particles.update();\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      });\n    };\n\n    // init()\n    animate();\n  } else {\n    var info = document.getElementById('info');\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.';\n  }\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(2);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar Camera = function () {\n  function Camera(_ref) {\n    var particles = _ref.particles,\n        _ref$fov = _ref.fov,\n        fov = _ref$fov === undefined ? 400 : _ref$fov,\n        _ref$aspectRatio = _ref.aspectRatio,\n        aspectRatio = _ref$aspectRatio === undefined ? window.innerWidth / window.innerHeight : _ref$aspectRatio,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 0.1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 2000 : _ref$far,\n        _ref$position = _ref.position,\n        position = _ref$position === undefined ? {\n      x: 0, y: 0, z: 0\n    } : _ref$position,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 0, 1] : _ref$up;\n\n    _classCallCheck(this, Camera);\n\n    this.particles = particles;\n    this.particles.setCameraZ(position.z);\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n    this.up = up;\n\n    this.setPosition(position);\n    this.setUp.apply(this, _toConsumableArray(this.up));\n    this.setLookAt();\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Camera, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.camera.aspect = WIDTH / HEIGHT;\n      this.setZ(window.innerHeight / Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* getZRatio */])());\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: 'setUp',\n    value: function setUp(x, y, z) {\n      this.camera.up.set(x, y, z);\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(_ref2) {\n      var _ref2$x = _ref2.x,\n          x = _ref2$x === undefined ? this.camera.position.x : _ref2$x,\n          _ref2$y = _ref2.y,\n          y = _ref2$y === undefined ? this.camera.position.y : _ref2$y,\n          _ref2$z = _ref2.z,\n          z = _ref2$z === undefined ? this.camera.position.z : _ref2$z;\n\n      this.setX(x);\n      this.setY(y);\n      this.setZ(z);\n    }\n  }, {\n    key: 'setX',\n    value: function setX(x) {\n      this.camera.position.x = x;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setY',\n    value: function setY(y) {\n      this.camera.position.y = y;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setZ',\n    value: function setZ(z) {\n      this.camera.position.z = z;\n      this.setLookAt();\n      this.setUp(0, 0, 1);\n      this.particles.setCameraZ(z);\n    }\n  }, {\n    key: 'setLookAt',\n    value: function setLookAt() {\n      this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.camera;\n    }\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return this.camera.position;\n    }\n  }, {\n    key: 'getZ',\n    value: function getZ() {\n      return this.camera.position.z;\n    }\n  }]);\n\n  return Camera;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n  function Renderer(_ref) {\n    var _ref$alpha = _ref.alpha,\n        alpha = _ref$alpha === undefined ? true : _ref$alpha,\n        _ref$pixelRatio = _ref.pixelRatio,\n        pixelRatio = _ref$pixelRatio === undefined ? window.devicePixelRatio : _ref$pixelRatio,\n        _ref$width = _ref.width,\n        width = _ref$width === undefined ? window.innerWidth : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === undefined ? window.innerHeight : _ref$height,\n        container = _ref.container;\n\n    _classCallCheck(this, Renderer);\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: alpha });\n    var gl = this.renderer.context;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    this.setPixelRatio(pixelRatio);\n\n    this.setSize(width, height);\n\n    container.appendChild(this.getDomElement());\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Renderer, [{\n    key: 'getDomElement',\n    value: function getDomElement() {\n      return this.renderer.domElement;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.renderer.setSize(WIDTH, HEIGHT);\n    }\n  }, {\n    key: 'setPixelRatio',\n    value: function setPixelRatio(pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio);\n    }\n  }, {\n    key: 'setSize',\n    value: function setSize(w, h) {\n      this.renderer.setSize(w, h);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          scene = _ref2.scene,\n          camera = _ref2.camera,\n          _ref2$renderTarget = _ref2.renderTarget,\n          renderTarget = _ref2$renderTarget === undefined ? null : _ref2$renderTarget,\n          _ref2$force = _ref2.force,\n          force = _ref2$force === undefined ? false : _ref2$force;\n\n      this.renderer.render(scene, camera, renderTarget, force);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.renderer;\n    }\n  }]);\n\n  return Renderer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderer);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Canvas = function () {\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    this.scene = new THREE.Scene();\n  }\n\n  _createClass(Canvas, [{\n    key: \"add\",\n    value: function add(obj) {\n      this.scene.add(obj);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(obj) {\n      this.scene.remove(obj);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.scene;\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Canvas);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaders_shaders__ = __webpack_require__(14);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\nvar Particles = function () {\n  function Particles(_ref) {\n    var _this = this;\n\n    var scene = _ref.scene,\n        _ref$configUniforms = _ref.configUniforms,\n        configUniforms = _ref$configUniforms === undefined ? {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: window.innerHeight * window.devicePixelRatio / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    } : _ref$configUniforms,\n        _ref$blending = _ref.blending,\n        blending = _ref$blending === undefined ? THREE.AdditiveBlending : _ref$blending,\n        _ref$transparent = _ref.transparent,\n        transparent = _ref$transparent === undefined ? true : _ref$transparent,\n        _ref$depthTest = _ref.depthTest,\n        depthTest = _ref$depthTest === undefined ? true : _ref$depthTest,\n        _ref$depthWrite = _ref.depthWrite,\n        depthWrite = _ref$depthWrite === undefined ? false : _ref$depthWrite,\n        renderer = _ref.renderer,\n        _ref$bgColorTop = _ref.bgColorTop,\n        bgColorTop = _ref$bgColorTop === undefined ? '#000000' : _ref$bgColorTop,\n        _ref$bgColorBottom = _ref.bgColorBottom,\n        bgColorBottom = _ref$bgColorBottom === undefined ? '#000000' : _ref$bgColorBottom,\n        _ref$numParticles = _ref.numParticles,\n        numParticles = _ref$numParticles === undefined ? 10000 : _ref$numParticles,\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? 100 : _ref$radius,\n        _ref$minSize = _ref.minSize,\n        minSize = _ref$minSize === undefined ? 1 : _ref$minSize,\n        _ref$maxSize = _ref.maxSize,\n        maxSize = _ref$maxSize === undefined ? 3 : _ref$maxSize,\n        _ref$sizeRange = _ref.sizeRange,\n        sizeRange = _ref$sizeRange === undefined ? 0.5 : _ref$sizeRange,\n        _ref$sizeInc = _ref.sizeInc,\n        sizeInc = _ref$sizeInc === undefined ? 0.01 : _ref$sizeInc,\n        _ref$skew = _ref.skew,\n        skew = _ref$skew === undefined ? 1 : _ref$skew,\n        _ref$brightness = _ref.brightness,\n        brightness = _ref$brightness === undefined ? 1 : _ref$brightness,\n        _ref$opacity = _ref.opacity,\n        opacity = _ref$opacity === undefined ? 1 : _ref$opacity;\n\n    _classCallCheck(this, Particles);\n\n    this.renderer = renderer;\n\n    this.bgColorTop = bgColorTop;\n    this.bgColorBottom = bgColorBottom;\n\n    this.numParticles = numParticles;\n    this.radius = radius;\n\n    // used to define star glinting\n    this.minSize = minSize;\n    this.maxSize = maxSize;\n    this.sizeRange = sizeRange;\n    this.sizeInc = sizeInc;\n    this.skew = skew; // skews the median size\n\n    // use to define particle colours\n    this.brightness = brightness;\n    this.opacity = opacity;\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2;\n    this.windowHalfY = window.innerHeight / 2;\n\n    this.video = document.createElement('video');\n\n    var noSupport = document.createElement('h1');\n    noSupport.innerHTML = 'Your browser is not supported. Please use Google Chrome (v21 or above).';\n\n    navigator.getUserMedia ? navigator.getUserMedia({ video: { width: 1280, height: 720 } }, function (stream) {\n      var video = _this.video;\n      video.src = URL.createObjectURL(stream); // eslint-disable-line\n      video.width = 480;\n      video.height = 480;\n      video.autoplay = true;\n\n      _this.addStars({\n        scene: scene,\n        renderer: renderer,\n        configUniforms: configUniforms,\n        blending: blending,\n        transparent: transparent,\n        depthTest: depthTest,\n        depthWrite: depthWrite\n      });\n    }, function () {\n      return console.error('video failed to load');\n    }) : document.getElementsByTagName('body')[0].append(noSupport);\n\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Particles, [{\n    key: 'addStars',\n    value: function addStars(_ref2) {\n      var scene = _ref2.scene,\n          renderer = _ref2.renderer,\n          configUniforms = _ref2.configUniforms,\n          blending = _ref2.blending,\n          transparent = _ref2.transparent,\n          depthTest = _ref2.depthTest,\n          depthWrite = _ref2.depthWrite;\n\n      // height and width that set up a texture in memory\n      // this texture is used to store particle position values\n      var tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles));\n      var tWidth = this.tWidth = tHeight;\n      this.numParticles = tWidth * tHeight;\n\n      var videoImage = this.videoImage = document.createElement('canvas');\n      this.videoImageContext = videoImage.getContext('2d');\n\n      // TODO: remove when moved into simulation shaders\n      // videoImage.width = videoImage.width / 2\n      // videoImage.height = videoImage.height / 2\n\n      var videoTexture = this.videoTexture = new THREE.Texture(videoImage);\n      videoTexture.minFilter = videoTexture.magFilter = THREE.NearestFilter;\n      videoTexture.needsUpdate = true;\n\n      var videoDiffImage = this.videoDiffImage = document.createElement('canvas');\n      this.videoDiffImageContext = videoDiffImage.getContext('2d');\n\n      var videoDiffTexture = this.videoDiffTexture = new THREE.Texture(videoDiffImage);\n      videoDiffTexture.minFilter = videoDiffTexture.magFilter = THREE.NearestFilter;\n      videoDiffTexture.needsUpdate = true;\n\n      document.querySelector('body').appendChild(videoImage);\n      document.querySelector('body').appendChild(videoDiffImage);\n\n      this.positions = new Float32Array(this.numParticles * 3);\n\n      this.sizeFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: tWidth,\n        tHeight: tHeight,\n        renderer: renderer.get(),\n        uniforms: {\n          tPosition: { type: 't', value: 0 },\n          tDefaultSize: { type: 't', value: 0 },\n          tWebcam: { type: 't', value: videoDiffTexture },\n\n          sizeRange: { type: 'f', value: this.sizeRange },\n          sizeInc: { type: 'f', value: this.sizeInc },\n\n          hoverDist: { type: 'f', value: this.hoverDist },\n          hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n          hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__[\"b\" /* sizeSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__[\"a\" /* sizeSimulationFragmentShader */]\n      });\n\n      this.sizeFBO.setTextureUniform('tPosition', this.getPositions());\n      this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n\n      var uniforms = Object.assign({}, configUniforms, {\n        tPosition: { type: 't', value: this.sizeFBO.simulationShader.uniforms.tPosition.value },\n        tSize: { type: 't', value: this.sizeFBO.targets[0] },\n        tWebcam: { type: 't', value: videoDiffTexture },\n\n        // tColour: { type: 't', value: this.getColours() }\n        tColour: { type: 't', value: videoTexture }\n      });\n\n      this.material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: __WEBPACK_IMPORTED_MODULE_3__shaders_shaders__[\"b\" /* vertexShader */],\n        fragmentShader: __WEBPACK_IMPORTED_MODULE_3__shaders_shaders__[\"a\" /* fragmentShader */],\n        blending: blending,\n        depthTest: depthTest,\n        depthWrite: depthWrite,\n        transparent: transparent\n      });\n\n      // set uv coords of particles in texture as positions\n      var geometry = new THREE.Geometry();\n\n      for (var i = 0; i < this.numParticles; i++) {\n        var vertex = new THREE.Vector3();\n        vertex.x = i % tWidth / tWidth;\n        vertex.y = Math.floor(i / tWidth) / tHeight;\n        geometry.vertices.push(vertex);\n      }\n\n      this.particles = new THREE.Points(geometry, this.material);\n      this.particles.frustumCulled = false;\n\n      scene.add(this.get());\n\n      this.ready = true;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      this.windowHalfX = window.innerWidth / 2;\n      this.windowHalfY = window.innerHeight / 2;\n    }\n  }, {\n    key: 'onMouseMove',\n    value: function onMouseMove(event) {\n      var xMultiplier = this.cameraZ / (this.windowHalfY * 2.8);\n      var yMultiplier = this.cameraZ / (this.windowHalfY * 2.65);\n      var mouseX = event.clientX - this.windowHalfX;\n      var mouseY = this.windowHalfY - event.clientY;\n\n      this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0);\n    }\n  }, {\n    key: 'getPositions',\n    value: function getPositions() {\n      var vertices = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n        var vertice = this.calcPosition();\n\n        this.positions[i3] = vertices[i4] = vertice[0];\n        this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1];\n        this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2];\n\n        vertices[i4 + 3] = 1.0;\n      }\n\n      return vertices;\n    }\n  }, {\n    key: 'calcPosition',\n    value: function calcPosition() {\n      var radius = this.radius;\n      var x = Math.random() - 0.5;\n      var y = Math.random() - 0.5;\n      var z = 0;\n      var d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n\n      return [x * d, y * d, z];\n    }\n  }, {\n    key: 'getSizes',\n    value: function getSizes() {\n      var sizes = new Float32Array(this.numParticles * 4);\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        sizes[i4 + 3] = this.calcSize();\n      }\n      return sizes;\n    }\n  }, {\n    key: 'calcSize',\n    value: function calcSize() {\n      var sizeRange = this.maxSize - this.minSize;\n      var size = this.minSize + sizeRange * Math.pow(Math.random(), this.skew);\n\n      return size;\n    }\n  }, {\n    key: 'getColours',\n    value: function getColours() {\n      var colours = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        var colour = this.calcColour();\n\n        colours[i4] = colour[0];\n        colours[i4 + 1] = colour[1];\n        colours[i4 + 2] = colour[2];\n        colours[i4 + 3] = colour[3];\n      }\n\n      return Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* createDataTexture */])({\n        data: colours,\n        tWidth: this.tWidth,\n        tHeight: this.tHeight,\n        format: this.sizeFBO.format,\n        filterType: this.sizeFBO.filterType\n      });\n    }\n  }, {\n    key: 'calcColour',\n    value: function calcColour() {\n      var _this2 = this;\n\n      var randomVal = Math.ceil(Math.random() * 10);\n\n      var getColor = function getColor(r, g, b, a) {\n        return [_this2.brightness * r / 255, _this2.brightness * g / 255, _this2.brightness * b / 255, _this2.opacity];\n      };\n\n      switch (randomVal) {\n        case 1:\n          return getColor(155, 176, 255);\n\n        case 2:\n          return getColor(170, 191, 255);\n\n        case 3:\n          return getColor(202, 215, 255);\n\n        case 4:\n          return getColor(248, 247, 255);\n\n        case 5:\n          return getColor(255, 244, 234);\n\n        case 6:\n          return getColor(255, 210, 161);\n\n        case 7:\n          return getColor(255, 204, 111);\n\n        default:\n          return getColor(255, 255, 255);\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      if (this.ready) {\n        // update video texture with webcam difference feed\n        var video = this.video,\n            videoImageContext = this.videoImageContext,\n            videoDiffImageContext = this.videoDiffImageContext,\n            _videoImage = this.videoImage,\n            videoWidth = _videoImage.width,\n            videoHeight = _videoImage.height,\n            videoTexture = this.videoTexture,\n            videoDiffTexture = this.videoDiffTexture;\n\n        if (video.readyState === video.HAVE_ENOUGH_DATA) {\n          videoImageContext.drawImage(video, 0, 0, videoWidth, videoHeight);\n\n          videoTexture.needsUpdate = true;\n\n          var imgPixels = videoImageContext.getImageData(0, 0, videoWidth, videoHeight);\n\n          for (var y = 0; y < imgPixels.height; y++) {\n            for (var x = 0; x < imgPixels.width; x++) {\n              var i = y * 4 * imgPixels.width + x * 4;\n              var avg = (imgPixels.data[i] + imgPixels.data[i + 1] + imgPixels.data[i + 2]) / 3;\n\n              imgPixels.data[i] = avg;\n              imgPixels.data[i + 1] = avg;\n              imgPixels.data[i + 2] = avg;\n            }\n          }\n\n          for (var _y = 0; _y < imgPixels.height; _y += 1) {\n            for (var _x = 0; _x < imgPixels.width; _x += 1) {\n              var _i = _y * 4 * imgPixels.width + _x * 4;\n\n              var average = (imgPixels.data[_i - 3] + imgPixels.data[_i + 5] + imgPixels.data[_i - imgPixels.width * 4 + 1] + imgPixels.data[_i + imgPixels.width * 4 + 1] + imgPixels.data[_i - imgPixels.width * 4 - 3] + imgPixels.data[_i + imgPixels.width * 4 - 3] + imgPixels.data[_i - imgPixels.width * 4 + 5] + imgPixels.data[_i + imgPixels.width * 4 + 5]) / 4;\n\n              imgPixels.data[_i] -= average;\n              imgPixels.data[_i + 1] -= average;\n              imgPixels.data[_i + 2] -= average;\n\n              imgPixels.data[_i] *= 1000;\n              imgPixels.data[_i + 1] *= 1000;\n              imgPixels.data[_i + 2] *= 1000;\n            }\n          }\n\n          videoDiffImageContext.putImageData(imgPixels, 0, 0, 0, 0, imgPixels.width, imgPixels.height);\n\n          videoDiffTexture.needsUpdate = true;\n        }\n\n        this.sizeFBO.simulate();\n        this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame();\n      }\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.particles;\n    }\n  }, {\n    key: 'setCameraZ',\n    value: function setCameraZ(newCameraZ) {\n      this.cameraZ = newCameraZ;\n    }\n  }, {\n    key: 'updateColours',\n    value: function updateColours() {\n      this.material.uniforms.tColour.value = this.getColours();\n    }\n  }, {\n    key: 'updateSizes',\n    value: function updateSizes() {\n      this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange;\n      this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc;\n      this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n    }\n  }, {\n    key: 'updateParticleVars',\n    value: function updateParticleVars() {\n      this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist;\n      this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc;\n      this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier;\n    }\n  }, {\n    key: 'bgColorTop',\n    get: function get() {\n      return this._bgColorTop;\n    },\n    set: function set(newVal) {\n      this._bgColorTop = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }, {\n    key: 'bgColorBottom',\n    get: function get() {\n      return this._bgColorBottom;\n    },\n    set: function set(newVal) {\n      this._bgColorBottom = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }]);\n\n  return Particles;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Particles);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 12 */,\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return sizeSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sizeSimulationVertexShader; });\n/* eslint-disable */\n\nvar sizeSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tDefaultSize;\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeInc;\\n\\tuniform float sizeRange;\\n\\n\\tfloat getSize() {\\n\\t\\tvec4 currPosition = vec4((vUv.x * 1.0), (vUv.y * 1.0), 0.0, 1.0);\\n\\t\\tfloat webcamParticleVal = texture2D(tWebcam, vec2(currPosition.x, currPosition.y)).r;\\n\\t\\tfloat size = 0.025 * webcamParticleVal;\\n\\n\\t\\treturn size;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\\n\\t}\\n\";\n\nvar sizeSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = vec2(uv);\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return vertexShader; });\n/* eslint-disable */\n\nvar fragmentShader = \"\\n\\tuniform sampler2D tColour;\\n\\tuniform sampler2D starImg;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvec4 colour = texture2D(tColour, vUv).rgba;\\n\\n\\t\\tgl_FragColor = colour;\\n\\t\\t// gl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\\n\\t}\\n\";\n\nvar vertexShader = \"\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tSize;\\n\\n\\tuniform float sizeMultiplierForScreen;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvUv = position.xy;\\n\\n\\t\\tvec4 position = vec4((vUv.x * 1.0) - 0.5, (vUv.y * 1.0) - 0.5, 0.0, 1.0);\\n\\t\\tfloat size = texture2D(tSize, vUv).w;\\n\\n\\t\\tvec4 mvPosition = modelViewMatrix * position;\\n\\t\\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\\n\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t}\\n\";\n\n\n\n/***/ })\n],[5]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js","export function getParameterByName (name, url) {\n  if (!url) {\n    url = window.location.href\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`)\n  const results = regex.exec(url)\n\n  if (!results) return null\n  if (!results[2]) return ''\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport function getZRatio () {\n  if (window.innerWidth > 1100) {\n    return 170\n  } else if (window.innerWidth > 700) {\n    return 100\n  } else if (window.innerWidth > 500) {\n    return 85\n  } else {\n    return 50\n  }\n}\n\nexport function createDataTexture ({\n  data,\n  tWidth,\n  tHeight,\n  format,\n  filterType\n}) {\n  const dataTexture = new THREE.DataTexture(\n    data,\n    tWidth,\n    tHeight,\n    format,\n    THREE.FloatType\n  )\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType\n  dataTexture.needsUpdate = true\n  dataTexture.flipY = false\n\n  return dataTexture\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","import DatGUI from 'dat-gui'\n\nexport default class GUI {\n  constructor ({\n    particles,\n    scene\n  } = {}) {\n    this.gui = new DatGUI.GUI()\n\n    // this.addBgControls(particles)\n    // this.addTextControls(particles)\n    // this.addMouseControls(particles)\n    // this.addSizeControls(particles)\n    // this.addColourStrengthControls(particles)\n    // this.addOpacityControls(particles)\n  }\n\n  addBgControls (particles) {\n    this.gui\n      .addColor(particles, 'bgColorTop')\n\n    this.gui\n      .addColor(particles, 'bgColorBottom')\n  }\n\n  addTextControls (particles) {\n    this.gui\n      .add(particles, 'font', Object.keys(fonts))\n      .onFinishChange(() => {\n        particles.updateTextTexture()\n      })\n\n    this.gui\n      .add(particles, 'fontSize')\n      .min(10)\n      .max(200)\n      .step(5)\n      .onFinishChange(() => {\n        particles.updateTextTexture()\n      })\n\n    this.gui\n      .add(particles, 'textAlign', ['left', 'center'])\n      .onFinishChange(() => {\n        particles.updateTextTexture()\n      })\n\n    this.gui\n      .add(particles, 'textSizeMultiplier')\n      .min(1)\n      .max(1000)\n      .step(10)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'topSpeed')\n      .min(0.1)\n      .max(10)\n      .step(0.1)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'acceleration')\n      .min(0.00001)\n      .max(0.01)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addMouseControls (particles) {\n    this.gui\n      .add(particles, 'hoverDist')\n      .min(0)\n      .max(0.5)\n      .step(0.01)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverSizeInc')\n      .min(0)\n      .max(0.03)\n      .step(0.001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverMaxSizeMultiplier')\n      .min(1)\n      .max(3)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addSizeControls (particles) {\n    this.gui\n      .add(particles, 'minSize')\n      .min(0.01)\n      .max(0.04)\n      .step(0.001)\n      .onFinishChange(() => {\n        if (particles.minSize > particles.maxSize) {\n          particles.minSize = particles.maxSize\n        }\n\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'maxSize')\n      .min(0.01)\n      .max(0.04)\n      .step(0.001)\n      .onFinishChange(() => {\n        if (particles.maxSize < particles.minSize) {\n          particles.maxSize = particles.minSize\n        }\n\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeInc')\n      .min(0.00001)\n      .max(0.0002)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeRange')\n      .min(0)\n      .max(0.02)\n      .step(0.0005)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'skew')\n      .min(1)\n      .max(100)\n      .step(1)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n  }\n\n  addColourStrengthControls (particles) {\n    this.gui\n      .add(particles, 'brightness')\n      .min(0.1)\n      .max(3)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n\n  addOpacityControls (particles) {\n    this.gui\n      .add(particles, 'opacity')\n      .min(0.1)\n      .max(1.5)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/gui.js","import isWebglEnabled from 'detector-webgl'\n\nimport Camera from './io/camera'\nimport GUI from './io/gui'\nimport Renderer from './io/renderer'\nimport Scene from './objects/scene'\nimport Particles from './objects/particles'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (isWebglEnabled) {\n    const container = document.getElementById('stars-simulation-container')\n    const renderer = new Renderer({ container })\n    const scene = new Scene()\n    const particles = new Particles({\n      scene,\n      renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 4000 : 200000,\n      radius: 3,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 35,\n      brightness: 0.9,\n      opacity: 1\n    })\n    const camera = new Camera({\n      aspectRatio: 1,\n      particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -1.37\n      }\n    })\n\n    const gui = new GUI({ particles }) // eslint-disable-line\n\n    const animate = () => {\n      requestAnimationFrame(animate) // eslint-disable-line\n      render()\n    }\n\n    const render = () => {\n      particles.update()\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      })\n    }\n\n    // init()\n    animate()\n  } else {\n    const info = document.getElementById('info')\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.'\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { getZRatio } from '../utils'\n\nexport default class Camera {\n  constructor ({\n    particles,\n    fov = 400,\n    aspectRatio = window.innerWidth / window.innerHeight,\n    near = 0.1,\n    far = 2000,\n    position = {\n      x: 0, y: 0, z: 0\n    },\n    up = [0, 0, 1]\n  }) {\n    this.particles = particles\n    this.particles.setCameraZ(position.z)\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far)\n    this.up = up\n\n    this.setPosition(position)\n    this.setUp(...this.up)\n    this.setLookAt()\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.camera.aspect = WIDTH / HEIGHT\n    this.setZ(window.innerHeight / getZRatio())\n    this.camera.updateProjectionMatrix()\n  }\n\n  setUp (x, y, z) {\n    this.camera.up.set(x, y, z)\n  }\n\n  setPosition ({\n    x = this.camera.position.x,\n    y = this.camera.position.y,\n    z = this.camera.position.z\n  }) {\n    this.setX(x)\n    this.setY(y)\n    this.setZ(z)\n  }\n\n  setX (x) {\n    this.camera.position.x = x\n    this.setLookAt()\n  }\n\n  setY (y) {\n    this.camera.position.y = y\n    this.setLookAt()\n  }\n\n  setZ (z) {\n    this.camera.position.z = z\n    this.setLookAt()\n    this.setUp(0, 0, 1)\n    this.particles.setCameraZ(z)\n  }\n\n  setLookAt () {\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0))\n  }\n\n  get () {\n    return this.camera\n  }\n\n  getPosition () {\n    return this.camera.position\n  }\n\n  getZ () {\n    return this.camera.position.z\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/camera.js","export default class Renderer {\n  constructor ({\n    alpha = true,\n    pixelRatio = window.devicePixelRatio,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    container\n  }) {\n    this.renderer = new THREE.WebGLRenderer({ alpha })\n    const gl = this.renderer.context\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.setPixelRatio(pixelRatio)\n\n    this.setSize(width, height)\n\n    container.appendChild(this.getDomElement())\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  getDomElement () {\n    return this.renderer.domElement\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.renderer.setSize(WIDTH, HEIGHT)\n  }\n\n  setPixelRatio (pixelRatio) {\n    this.renderer.setPixelRatio(pixelRatio)\n  }\n\n  setSize (w, h) {\n    this.renderer.setSize(w, h)\n  }\n\n  render ({\n    scene,\n    camera,\n    renderTarget = null,\n    force = false\n  } = {}) {\n    this.renderer.render(scene, camera, renderTarget, force)\n  }\n\n  get () {\n    return this.renderer\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/renderer.js","export default class Canvas {\n  constructor () {\n    this.scene = new THREE.Scene()\n  }\n\n  add (obj) {\n    this.scene.add(obj)\n  }\n\n  remove (obj) {\n    this.scene.remove(obj)\n  }\n\n  get () {\n    return this.scene\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/scene.js","import FBO from 'three.js-fbo'\nimport { createDataTexture } from '../utils'\nimport { sizeSimulationVertexShader, sizeSimulationFragmentShader } from '../shaders/size-simulation-shaders'\nimport { vertexShader, fragmentShader } from '../shaders/shaders'\n\nexport default class Particles {\n  constructor ({\n    scene,\n    configUniforms = {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: (window.innerHeight * window.devicePixelRatio) / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    },\n    blending = THREE.AdditiveBlending,\n    transparent = true,\n    depthTest = true,\n    depthWrite = false,\n\n    renderer,\n\n    // background colors\n    bgColorTop = '#000000',\n    bgColorBottom = '#000000',\n\n    numParticles = 10000,\n    radius = 100, // radius of outer particle\n\n    // used to define and animate sizes\n    minSize = 1,\n    maxSize = 3,\n    sizeRange = 0.5, // the amount the size is allowed to fluxuate in animation\n    sizeInc = 0.01, // the amount the size is increased / decreased per frame\n    skew = 1,\n\n    // particle colours\n    brightness = 1,\n    opacity = 1\n  }) {\n    this.renderer = renderer\n\n    this.bgColorTop = bgColorTop\n    this.bgColorBottom = bgColorBottom\n\n    this.numParticles = numParticles\n    this.radius = radius\n\n    // used to define star glinting\n    this.minSize = minSize\n    this.maxSize = maxSize\n    this.sizeRange = sizeRange\n    this.sizeInc = sizeInc\n    this.skew = skew // skews the median size\n\n    // use to define particle colours\n    this.brightness = brightness\n    this.opacity = opacity\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n\n    this.video = document.createElement('video')\n\n    const noSupport = document.createElement('h1')\n    noSupport.innerHTML = 'Your browser is not supported. Please use Google Chrome (v21 or above).'\n\n    navigator.getUserMedia\n      ? navigator.getUserMedia({ video: { width: 1280, height: 720 } }, stream => {\n        const video = this.video\n        video.src = URL.createObjectURL(stream) // eslint-disable-line\n        video.width = 480\n        video.height = 480\n        video.autoplay = true\n\n        this.addStars({\n          scene,\n          renderer,\n          configUniforms,\n          blending,\n          transparent,\n          depthTest,\n          depthWrite\n        })\n      }, () => console.error('video failed to load'))\n      : document.getElementsByTagName('body')[0].append(noSupport)\n\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  addStars ({\n    scene,\n    renderer,\n    configUniforms,\n    blending,\n    transparent,\n    depthTest,\n    depthWrite\n  }) {\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    const tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles))\n    const tWidth = this.tWidth = tHeight\n    this.numParticles = tWidth * tHeight\n\n    const videoImage = this.videoImage = document.createElement('canvas')\n    this.videoImageContext = videoImage.getContext('2d')\n\n    // TODO: remove when moved into simulation shaders\n    // videoImage.width = videoImage.width / 2\n    // videoImage.height = videoImage.height / 2\n\n    const videoTexture = this.videoTexture = new THREE.Texture(videoImage)\n    videoTexture.minFilter = videoTexture.magFilter = THREE.NearestFilter\n    videoTexture.needsUpdate = true\n\n    const videoDiffImage = this.videoDiffImage = document.createElement('canvas')\n    this.videoDiffImageContext = videoDiffImage.getContext('2d')\n\n    const videoDiffTexture = this.videoDiffTexture = new THREE.Texture(videoDiffImage)\n    videoDiffTexture.minFilter = videoDiffTexture.magFilter = THREE.NearestFilter\n    videoDiffTexture.needsUpdate = true\n\n    document.querySelector('body').appendChild(videoImage)\n    document.querySelector('body').appendChild(videoDiffImage)\n\n    this.positions = new Float32Array(this.numParticles * 3)\n\n    this.sizeFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tPosition: { type: 't', value: 0 },\n        tDefaultSize: { type: 't', value: 0 },\n        tWebcam: { type: 't', value: videoDiffTexture },\n\n        sizeRange: { type: 'f', value: this.sizeRange },\n        sizeInc: { type: 'f', value: this.sizeInc },\n\n        hoverDist: { type: 'f', value: this.hoverDist },\n        hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n        hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n      },\n      simulationVertexShader: sizeSimulationVertexShader,\n      simulationFragmentShader: sizeSimulationFragmentShader\n    })\n\n    this.sizeFBO.setTextureUniform('tPosition', this.getPositions())\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n\n    const uniforms = Object.assign({}, configUniforms, {\n      tPosition: { type: 't', value: this.sizeFBO.simulationShader.uniforms.tPosition.value },\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      tWebcam: { type: 't', value: videoDiffTexture },\n\n      // tColour: { type: 't', value: this.getColours() }\n      tColour: { type: 't', value: videoTexture }\n    })\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader,\n      fragmentShader,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent\n    })\n\n    // set uv coords of particles in texture as positions\n    const geometry = new THREE.Geometry()\n\n    for (let i = 0; i < this.numParticles; i++) {\n      const vertex = new THREE.Vector3()\n      vertex.x = (i % tWidth) / tWidth\n      vertex.y = Math.floor(i / tWidth) / tHeight\n      geometry.vertices.push(vertex)\n    }\n\n    this.particles = new THREE.Points(geometry, this.material)\n    this.particles.frustumCulled = false\n\n    scene.add(this.get())\n\n    this.ready = true\n  }\n\n  get bgColorTop () {\n    return this._bgColorTop\n  }\n\n  set bgColorTop (newVal) {\n    this._bgColorTop = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  get bgColorBottom () {\n    return this._bgColorBottom\n  }\n\n  set bgColorBottom (newVal) {\n    this._bgColorBottom = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  onWindowResize () {\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n  }\n\n  onMouseMove (event) {\n    const xMultiplier = this.cameraZ / (this.windowHalfY * 2.8)\n    const yMultiplier = this.cameraZ / (this.windowHalfY * 2.65)\n    const mouseX = event.clientX - this.windowHalfX\n    const mouseY = this.windowHalfY - event.clientY\n\n    this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0)\n  }\n\n  getPositions () {\n    const vertices = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n      const vertice = this.calcPosition()\n\n      this.positions[i3] = vertices[i4] = vertice[0]\n      this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1]\n      this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2]\n\n      vertices[i4 + 3] = 1.0\n    }\n\n    return vertices\n  }\n\n  calcPosition () {\n    const radius = this.radius\n    const x = Math.random() - 0.5\n    const y = Math.random() - 0.5\n    const z = 0\n    const d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)))\n\n    return [\n      x * d,\n      y * d,\n      z\n    ]\n  }\n\n  getSizes () {\n    const sizes = new Float32Array(this.numParticles * 4)\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      sizes[i4 + 3] = this.calcSize()\n    }\n    return sizes\n  }\n\n  calcSize () {\n    const sizeRange = this.maxSize - this.minSize\n    const size = this.minSize + (sizeRange * Math.pow(Math.random(), this.skew))\n\n    return size\n  }\n\n  getColours () {\n    const colours = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      const colour = this.calcColour()\n\n      colours[i4] = colour[0]\n      colours[i4 + 1] = colour[1]\n      colours[i4 + 2] = colour[2]\n      colours[i4 + 3] = colour[3]\n    }\n\n    return createDataTexture({\n      data: colours,\n      tWidth: this.tWidth,\n      tHeight: this.tHeight,\n      format: this.sizeFBO.format,\n      filterType: this.sizeFBO.filterType\n    })\n  }\n\n  calcColour () {\n    const randomVal = Math.ceil(Math.random() * 10)\n\n    const getColor = (r, g, b, a) => [\n      this.brightness * r / 255,\n      this.brightness * g / 255,\n      this.brightness * b / 255,\n      this.opacity\n    ]\n\n    switch (randomVal) {\n      case 1:\n        return getColor(155, 176, 255)\n\n      case 2:\n        return getColor(170, 191, 255)\n\n      case 3:\n        return getColor(202, 215, 255)\n\n      case 4:\n        return getColor(248, 247, 255)\n\n      case 5:\n        return getColor(255, 244, 234)\n\n      case 6:\n        return getColor(255, 210, 161)\n\n      case 7:\n        return getColor(255, 204, 111)\n\n      default:\n        return getColor(255, 255, 255)\n    }\n  }\n\n  update () {\n    if (this.ready) {\n      // update video texture with webcam difference feed\n      const { video, videoImageContext, videoDiffImageContext, videoImage: { width: videoWidth, height: videoHeight }, videoTexture, videoDiffTexture } = this\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        videoImageContext.drawImage(video, 0, 0, videoWidth, videoHeight)\n\n        videoTexture.needsUpdate = true\n\n        const imgPixels = videoImageContext.getImageData(0, 0, videoWidth, videoHeight)\n\n        for (let y = 0; y < imgPixels.height; y++) {\n          for (let x = 0; x < imgPixels.width; x++) {\n            const i = (y * 4) * imgPixels.width + x * 4\n            const avg = (imgPixels.data[i] + imgPixels.data[i + 1] + imgPixels.data[i + 2]) / 3\n\n            imgPixels.data[i] = avg\n            imgPixels.data[i + 1] = avg\n            imgPixels.data[i + 2] = avg\n          }\n        }\n\n        for (let y = 0; y < imgPixels.height; y += 1) {\n          for (let x = 0; x < imgPixels.width; x += 1) {\n            const i = (y * 4) * imgPixels.width + x * 4\n\n            const average = (imgPixels.data[i - 3] + imgPixels.data[i + 5] +\n              imgPixels.data[i - (imgPixels.width * 4) + 1] + imgPixels.data[i + (imgPixels.width * 4) + 1] +\n              imgPixels.data[i - (imgPixels.width * 4) - 3] + imgPixels.data[i + (imgPixels.width * 4) - 3] +\n              imgPixels.data[i - (imgPixels.width * 4) + 5] + imgPixels.data[i + (imgPixels.width * 4) + 5]) / 4\n\n            imgPixels.data[i] -= average\n            imgPixels.data[i + 1] -= average\n            imgPixels.data[i + 2] -= average\n\n            imgPixels.data[i] *= 1000\n            imgPixels.data[i + 1] *= 1000\n            imgPixels.data[i + 2] *= 1000\n          }\n        }\n\n        videoDiffImageContext.putImageData(imgPixels, 0, 0, 0, 0, imgPixels.width, imgPixels.height)\n\n        videoDiffTexture.needsUpdate = true\n      }\n\n      this.sizeFBO.simulate()\n      this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame()\n    }\n  }\n\n  get () {\n    return this.particles\n  }\n\n  setCameraZ (newCameraZ) {\n    this.cameraZ = newCameraZ\n  }\n\n  updateColours () {\n    this.material.uniforms.tColour.value = this.getColours()\n  }\n\n  updateSizes () {\n    this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange\n    this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n  }\n\n  updateParticleVars () {\n    this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist\n    this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc\n    this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/particles.js","/* eslint-disable */\n\nconst sizeSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tDefaultSize;\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeInc;\n\tuniform float sizeRange;\n\n\tfloat getSize() {\n\t\tvec4 currPosition = vec4((vUv.x * 1.0), (vUv.y * 1.0), 0.0, 1.0);\n\t\tfloat webcamParticleVal = texture2D(tWebcam, vec2(currPosition.x, currPosition.y)).r;\n\t\tfloat size = 0.025 * webcamParticleVal;\n\n\t\treturn size;\n\t}\n\n\tvoid main() {\n\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\n\t}\n`\n\nconst sizeSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = vec2(uv);\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  sizeSimulationFragmentShader,\n  sizeSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/size-simulation-shaders.js","/* eslint-disable */\n\nconst fragmentShader = `\n\tuniform sampler2D tColour;\n\tuniform sampler2D starImg;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvec4 colour = texture2D(tColour, vUv).rgba;\n\n\t\tgl_FragColor = colour;\n\t\t// gl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\n\t}\n`\n\nconst vertexShader = `\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tSize;\n\n\tuniform float sizeMultiplierForScreen;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvUv = position.xy;\n\n\t\tvec4 position = vec4((vUv.x * 1.0) - 0.5, (vUv.y * 1.0) - 0.5, 0.0, 1.0);\n\t\tfloat size = texture2D(tSize, vUv).w;\n\n\t\tvec4 mvPosition = modelViewMatrix * position;\n\t\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t}\n`\n\nexport {\n  fragmentShader,\n  vertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/shaders.js"],"sourceRoot":""}