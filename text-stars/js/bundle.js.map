{"version":3,"sources":["webpack:///js/bundle.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/main.js","webpack:///./src/js/io/camera.js","webpack:///./src/js/io/renderer.js","webpack:///./src/js/objects/scene.js","webpack:///./src/js/objects/particles.js","webpack:///./src/js/shaders/positionSimulationShaders.js","webpack:///./src/js/shaders/sizeSimulationShaders.js","webpack:///./src/js/shaders/shaders.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","THREE","getZRatio","window","innerWidth","createDataTexture","_ref","data","tWidth","tHeight","format","filterType","dataTexture","DataTexture","FloatType","minFilter","magFilter","needsUpdate","flipY","call","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_detector_webgl__","__WEBPACK_IMPORTED_MODULE_0_detector_webgl___default","n","__WEBPACK_IMPORTED_MODULE_1__io_camera__","__WEBPACK_IMPORTED_MODULE_2__io_renderer__","__WEBPACK_IMPORTED_MODULE_3__objects_scene__","__WEBPACK_IMPORTED_MODULE_4__objects_particles__","document","addEventListener","a","container","getElementById","renderer","scene","particles","hoverDist","hoverSizeInc","hoverMaxSizeMultiplier","textSizeMultiplier","textPositionMultiplier","minSize","maxSize","sizeRange","skew","incSize","numParticles","radius","topSpeed","acceleration","camera","position","x","y","z","render","update","get","add","animate","requestAnimationFrame","innerHTML","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","__WEBPACK_IMPORTED_MODULE_0__utils__","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","Camera","_ref$fov","fov","undefined","_ref$aspectRatio","aspectRatio","innerHeight","_ref$near","near","_ref$far","far","_ref$position","_ref$up","up","this","setCameraZ","PerspectiveCamera","setPosition","setUp","apply","setLookAt","WIDTH","HEIGHT","aspect","setZ","updateProjectionMatrix","set","_ref2","_ref2$x","_ref2$y","_ref2$z","setX","setY","lookAt","Vector3","Renderer","_ref$alpha","alpha","_ref$pixelRatio","pixelRatio","devicePixelRatio","_ref$width","width","_ref$height","height","WebGLRenderer","gl","context","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setPixelRatio","setSize","appendChild","getDomElement","onWindowResize","bind","domElement","w","h","arguments","_ref2$renderTarget","renderTarget","_ref2$force","force","Canvas","Scene","obj","remove","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__shaders_positionSimulationShaders__","__WEBPACK_IMPORTED_MODULE_3__shaders_sizeSimulationShaders__","__WEBPACK_IMPORTED_MODULE_4__shaders_shaders__","Particles","_ref$numParticles","_ref$configUniforms","configUniforms","color","Color","sizeMultiplierForScreen","starImg","TextureLoader","load","_ref$blending","blending","AdditiveBlending","_ref$transparent","transparent","_ref$depthTest","depthTest","_ref$depthWrite","depthWrite","_ref$radius","_ref$sizeRange","_ref$minSize","_ref$maxSize","_ref$incSize","_ref$hoverDist","_ref$hoverSizeInc","_ref$hoverMaxSizeMult","_ref$skew","_ref$animationFrames","animationFrames","_ref$topSpeed","_ref$acceleration","_ref$textSizeMultipli","_ref$textPositionMult","windowHalfX","windowHalfY","Math","ceil","sqrt","positions","Float32Array","positionFBO","uniforms","tDefaultPosition","type","tText","simulationVertexShader","simulationFragmentShader","setTextureUniform","getPositions","sizeFBO","tPosition","tDefaultSize","mouse","getSizes","assign","simulationShader","targets","tSize","tColour","getColours","material","ShaderMaterial","vertexShader","fragmentShader","geometry","Geometry","vertex","floor","vertices","push","Points","frustumCulled","text","onkeydown","onTextInput","onMouseMove","_this","forEach","animationFrame","setTimeout","createCanvasAnimation","animationDelay","event","xMultiplier","cameraZ","yMultiplier","mouseX","clientX","mouseY","clientY","textCanvas","textTexture","Texture","NearestFilter","_ref2$key","createElement","match","slice","canvasCenterV","ctx","getContext","font","fillStyle","fillText","setTextTexture","i3","i4","vertice","calcPosition","random","d","pow","sizes","calcSize","colours","colour","calcColour","getColor","r","g","b","simulate","getCurrentFrame","newCameraZ","positionSimulationFragmentShader","positionSimulationVertexShader","sizeSimulationFragmentShader","sizeSimulationVertexShader"],"mappings":"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","file":"js/bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* unused harmony export getParameterByName */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getZRatio;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createDataTexture;\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(url);\n\n  if (!results) return null;\n  if (!results[2]) return '';\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getZRatio() {\n  if (window.innerWidth > 1100) {\n    return 170;\n  } else if (window.innerWidth > 700) {\n    return 100;\n  } else if (window.innerWidth > 500) {\n    return 85;\n  } else {\n    return 50;\n  }\n}\n\nfunction createDataTexture(_ref) {\n  var data = _ref.data,\n      tWidth = _ref.tWidth,\n      tHeight = _ref.tHeight,\n      format = _ref.format,\n      filterType = _ref.filterType;\n\n  var dataTexture = new THREE.DataTexture(data, tWidth, tHeight, format, THREE.FloatType);\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType;\n  dataTexture.needsUpdate = true;\n  dataTexture.flipY = false;\n\n  return dataTexture;\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 3 */,\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_detector_webgl__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_detector_webgl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_detector_webgl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__io_camera__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__io_renderer__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__objects_scene__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__objects_particles__ = __webpack_require__(8);\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (__WEBPACK_IMPORTED_MODULE_0_detector_webgl___default.a) {\n    var container = document.getElementById('stars-simulation-container');\n    var renderer = new __WEBPACK_IMPORTED_MODULE_2__io_renderer__[\"a\" /* default */]({ container: container });\n    var scene = new __WEBPACK_IMPORTED_MODULE_3__objects_scene__[\"a\" /* default */]();\n    var particles = new __WEBPACK_IMPORTED_MODULE_4__objects_particles__[\"a\" /* default */]({\n      renderer: renderer,\n      hoverDist: 0.04,\n      hoverSizeInc: 0.002,\n      hoverMaxSizeMultiplier: 1.3,\n      textSizeMultiplier: 690,\n      textPositionMultiplier: 5.5,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      skew: 35,\n      incSize: 0.00005,\n      numParticles: 150000,\n      radius: 4,\n      topSpeed: 1,\n      acceleration: 0.0001\n    });\n    var camera = new __WEBPACK_IMPORTED_MODULE_1__io_camera__[\"a\" /* default */]({\n      particles: particles,\n      position: {\n        x: 0,\n        y: -0.001,\n        z: 4.5\n      }\n    });\n\n    var init = function init() {\n      scene.add(particles.get());\n    };\n\n    var animate = function animate() {\n      requestAnimationFrame(animate); // eslint-disable-line\n      render();\n    };\n\n    var render = function render() {\n      particles.update();\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      });\n    };\n\n    init();\n    animate();\n  } else {\n    var info = document.getElementById('info');\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.';\n  }\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(2);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar Camera = function () {\n  function Camera(_ref) {\n    var particles = _ref.particles,\n        _ref$fov = _ref.fov,\n        fov = _ref$fov === undefined ? 400 : _ref$fov,\n        _ref$aspectRatio = _ref.aspectRatio,\n        aspectRatio = _ref$aspectRatio === undefined ? window.innerWidth / window.innerHeight : _ref$aspectRatio,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 0.1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 2000 : _ref$far,\n        _ref$position = _ref.position,\n        position = _ref$position === undefined ? {\n      x: 0, y: 0, z: 0\n    } : _ref$position,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 0, 1] : _ref$up;\n\n    _classCallCheck(this, Camera);\n\n    this.particles = particles;\n    this.particles.setCameraZ(position.z);\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n    this.up = up;\n\n    this.setPosition(position);\n    this.setUp.apply(this, _toConsumableArray(this.up));\n    this.setLookAt();\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Camera, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.camera.aspect = WIDTH / HEIGHT;\n      this.setZ(window.innerHeight / Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* getZRatio */])());\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: 'setUp',\n    value: function setUp(x, y, z) {\n      this.camera.up.set(x, y, z);\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(_ref2) {\n      var _ref2$x = _ref2.x,\n          x = _ref2$x === undefined ? this.camera.position.x : _ref2$x,\n          _ref2$y = _ref2.y,\n          y = _ref2$y === undefined ? this.camera.position.y : _ref2$y,\n          _ref2$z = _ref2.z,\n          z = _ref2$z === undefined ? this.camera.position.z : _ref2$z;\n\n      this.setX(x);\n      this.setY(y);\n      this.setZ(z);\n    }\n  }, {\n    key: 'setX',\n    value: function setX(x) {\n      this.camera.position.x = x;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setY',\n    value: function setY(y) {\n      this.camera.position.y = y;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setZ',\n    value: function setZ(z) {\n      this.camera.position.z = z;\n      this.setLookAt();\n      this.setUp(0, 0, 1);\n      this.particles.setCameraZ(z);\n    }\n  }, {\n    key: 'setLookAt',\n    value: function setLookAt() {\n      this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.camera;\n    }\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return this.camera.position;\n    }\n  }, {\n    key: 'getZ',\n    value: function getZ() {\n      return this.camera.position.z;\n    }\n  }]);\n\n  return Camera;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n  function Renderer(_ref) {\n    var _ref$alpha = _ref.alpha,\n        alpha = _ref$alpha === undefined ? true : _ref$alpha,\n        _ref$pixelRatio = _ref.pixelRatio,\n        pixelRatio = _ref$pixelRatio === undefined ? window.devicePixelRatio : _ref$pixelRatio,\n        _ref$width = _ref.width,\n        width = _ref$width === undefined ? window.innerWidth : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === undefined ? window.innerHeight : _ref$height,\n        container = _ref.container;\n\n    _classCallCheck(this, Renderer);\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: alpha });\n    var gl = this.renderer.context;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    this.setPixelRatio(pixelRatio);\n\n    this.setSize(width, height);\n\n    container.appendChild(this.getDomElement());\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Renderer, [{\n    key: 'getDomElement',\n    value: function getDomElement() {\n      return this.renderer.domElement;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.renderer.setSize(WIDTH, HEIGHT);\n    }\n  }, {\n    key: 'setPixelRatio',\n    value: function setPixelRatio(pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio);\n    }\n  }, {\n    key: 'setSize',\n    value: function setSize(w, h) {\n      this.renderer.setSize(w, h);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          scene = _ref2.scene,\n          camera = _ref2.camera,\n          _ref2$renderTarget = _ref2.renderTarget,\n          renderTarget = _ref2$renderTarget === undefined ? null : _ref2$renderTarget,\n          _ref2$force = _ref2.force,\n          force = _ref2$force === undefined ? false : _ref2$force;\n\n      this.renderer.render(scene, camera, renderTarget, force);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.renderer;\n    }\n  }]);\n\n  return Renderer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderer);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Canvas = function () {\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    this.scene = new THREE.Scene();\n  }\n\n  _createClass(Canvas, [{\n    key: \"add\",\n    value: function add(obj) {\n      this.scene.add(obj);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(obj) {\n      this.scene.remove(obj);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.scene;\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Canvas);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaders_positionSimulationShaders__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaders_sizeSimulationShaders__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shaders_shaders__ = __webpack_require__(12);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\nvar Particles = function () {\n  function Particles(_ref) {\n    var _ref$numParticles = _ref.numParticles,\n        numParticles = _ref$numParticles === undefined ? 10000 : _ref$numParticles,\n        _ref$configUniforms = _ref.configUniforms,\n        configUniforms = _ref$configUniforms === undefined ? {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: window.innerHeight * window.devicePixelRatio / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    } : _ref$configUniforms,\n        _ref$blending = _ref.blending,\n        blending = _ref$blending === undefined ? THREE.AdditiveBlending : _ref$blending,\n        _ref$transparent = _ref.transparent,\n        transparent = _ref$transparent === undefined ? true : _ref$transparent,\n        _ref$depthTest = _ref.depthTest,\n        depthTest = _ref$depthTest === undefined ? true : _ref$depthTest,\n        _ref$depthWrite = _ref.depthWrite,\n        depthWrite = _ref$depthWrite === undefined ? false : _ref$depthWrite,\n        renderer = _ref.renderer,\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? 100 : _ref$radius,\n        _ref$sizeRange = _ref.sizeRange,\n        sizeRange = _ref$sizeRange === undefined ? 0.5 : _ref$sizeRange,\n        _ref$minSize = _ref.minSize,\n        minSize = _ref$minSize === undefined ? 1 : _ref$minSize,\n        _ref$maxSize = _ref.maxSize,\n        maxSize = _ref$maxSize === undefined ? 3 : _ref$maxSize,\n        _ref$incSize = _ref.incSize,\n        incSize = _ref$incSize === undefined ? 0.01 : _ref$incSize,\n        _ref$hoverDist = _ref.hoverDist,\n        hoverDist = _ref$hoverDist === undefined ? 10 : _ref$hoverDist,\n        _ref$hoverSizeInc = _ref.hoverSizeInc,\n        hoverSizeInc = _ref$hoverSizeInc === undefined ? 0.05 : _ref$hoverSizeInc,\n        _ref$hoverMaxSizeMult = _ref.hoverMaxSizeMultiplier,\n        hoverMaxSizeMultiplier = _ref$hoverMaxSizeMult === undefined ? 5 : _ref$hoverMaxSizeMult,\n        _ref$skew = _ref.skew,\n        skew = _ref$skew === undefined ? 1 : _ref$skew,\n        _ref$animationFrames = _ref.animationFrames,\n        animationFrames = _ref$animationFrames === undefined ? [] : _ref$animationFrames,\n        _ref$topSpeed = _ref.topSpeed,\n        topSpeed = _ref$topSpeed === undefined ? 0.07 : _ref$topSpeed,\n        _ref$acceleration = _ref.acceleration,\n        acceleration = _ref$acceleration === undefined ? 0.01 : _ref$acceleration,\n        _ref$textSizeMultipli = _ref.textSizeMultiplier,\n        textSizeMultiplier = _ref$textSizeMultipli === undefined ? 2 : _ref$textSizeMultipli,\n        _ref$textPositionMult = _ref.textPositionMultiplier,\n        textPositionMultiplier = _ref$textPositionMult === undefined ? 2 : _ref$textPositionMult;\n\n    _classCallCheck(this, Particles);\n\n    this.renderer = renderer;\n\n    this.numParticles = numParticles;\n    this.radius = radius;\n    this.skew = skew; // skews the median size\n\n    // used to define star glinting\n    this.sizeRange = sizeRange;\n    this.minSize = minSize;\n    this.maxSize = maxSize;\n    this.incSize = incSize;\n\n    // used to define mouse interaction animation\n    this.hoverDist = hoverDist;\n    this.hoverSizeInc = hoverSizeInc;\n    this.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier;\n\n    // use to define moving particles\n    this.topSpeed = topSpeed;\n    this.acceleration = acceleration;\n    this.textSizeMultiplier = textSizeMultiplier;\n    this.textPositionMultiplier = textPositionMultiplier;\n    this.animationFrames = animationFrames;\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2;\n    this.windowHalfY = window.innerHeight / 2;\n\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    var tHeight = Math.ceil(Math.sqrt(this.numParticles));\n    var tWidth = tHeight;\n    this.numParticles = tWidth * tHeight;\n\n    this.positions = new Float32Array(this.numParticles * 3);\n\n    this.positionFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n      tWidth: tWidth,\n      tHeight: tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tDefaultPosition: { type: 't', value: 0 }, // default star positions\n        tText: { type: 't', value: 0 }, // texture holding text\n\n        topSpeed: { type: 'f', value: this.topSpeed }, // the top speed of stars\n        acceleration: { type: 'f', value: this.acceleration }, // the star particle acceleration\n\n        textPositionMultiplier: { type: 'f', value: this.textPositionMultiplier }\n      },\n      simulationVertexShader: __WEBPACK_IMPORTED_MODULE_2__shaders_positionSimulationShaders__[\"b\" /* positionSimulationVertexShader */],\n      simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_2__shaders_positionSimulationShaders__[\"a\" /* positionSimulationFragmentShader */]\n    });\n\n    this.positionFBO.setTextureUniform('tDefaultPosition', this.getPositions());\n\n    this.sizeFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n      tWidth: tWidth,\n      tHeight: tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tPosition: { type: 't', value: 0 },\n        tDefaultSize: { type: 't', value: 0 },\n\n        mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n\n        sizeRange: { type: 'f', value: this.sizeRange },\n        incSize: { type: 'f', value: this.incSize },\n\n        hoverDist: { type: 'f', value: this.hoverDist },\n        hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n        hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n      },\n      simulationVertexShader: __WEBPACK_IMPORTED_MODULE_3__shaders_sizeSimulationShaders__[\"b\" /* sizeSimulationVertexShader */],\n      simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_3__shaders_sizeSimulationShaders__[\"a\" /* sizeSimulationFragmentShader */]\n    });\n\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n\n    var uniforms = Object.assign({}, configUniforms, {\n      tDefaultPosition: { type: 't', value: this.positionFBO.simulationShader.uniforms.tDefaultPosition.value },\n      tText: { type: 't', value: 0 },\n      tPosition: { type: 't', value: this.positionFBO.targets[0] },\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      textSizeMultiplier: { type: 'f', value: this.textSizeMultiplier },\n\n      tColour: { type: 't',\n        value: Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* createDataTexture */])({\n          data: this.getColours(),\n          tWidth: tWidth,\n          tHeight: tHeight,\n          format: this.positionFBO.format,\n          filterType: this.positionFBO.filterType\n        }) }\n    });\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: __WEBPACK_IMPORTED_MODULE_4__shaders_shaders__[\"b\" /* vertexShader */],\n      fragmentShader: __WEBPACK_IMPORTED_MODULE_4__shaders_shaders__[\"a\" /* fragmentShader */],\n      blending: blending,\n      transparent: transparent,\n      depthTest: depthTest,\n      depthWrite: depthWrite\n    });\n\n    // set uv coords of particles in texture as positions\n    var geometry = new THREE.Geometry();\n\n    for (var i = 0; i < this.numParticles; i++) {\n      var vertex = new THREE.Vector3();\n      vertex.x = i % tWidth / tWidth;\n      vertex.y = Math.floor(i / tWidth) / tHeight;\n      geometry.vertices.push(vertex);\n    }\n\n    this.particles = new THREE.Points(geometry, this.material);\n    this.particles.frustumCulled = false;\n\n    this.text = '';\n    document.onkeydown = this.onTextInput.bind(this);\n\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n    // document.addEventListener('touchmove', this.onMouseMove.bind(this), false);\n    document.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n  }\n\n  _createClass(Particles, [{\n    key: 'setAnimation',\n    value: function setAnimation() {\n      var _this = this;\n\n      this.animationFrames.forEach(function (animationFrame) {\n        return setTimeout(function () {\n          return _this.createCanvasAnimation(animationFrame);\n        }, animationFrame.animationDelay || 0);\n      });\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      this.windowHalfX = window.innerWidth / 2;\n      this.windowHalfY = window.innerHeight / 2;\n    }\n  }, {\n    key: 'onMouseMove',\n    value: function onMouseMove(event) {\n      var xMultiplier = this.cameraZ / (this.windowHalfY * 2.8);\n      var yMultiplier = this.cameraZ / (this.windowHalfY * 2.65);\n      var mouseX = event.clientX - this.windowHalfX;\n      var mouseY = this.windowHalfY - event.clientY;\n\n      this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0);\n    }\n  }, {\n    key: 'setTextTexture',\n    value: function setTextTexture(textCanvas) {\n      var textTexture = new THREE.Texture(textCanvas);\n      textTexture.minFilter = textTexture.magFilter = THREE.NearestFilter;\n      textTexture.needsUpdate = true;\n      textTexture.flipY = true;\n      this.positionFBO.simulationShader.uniforms.tText.value = this.material.uniforms.tText.value = textTexture;\n    }\n  }, {\n    key: 'onTextInput',\n    value: function onTextInput(_ref2) {\n      var _ref2$key = _ref2.key,\n          key = _ref2$key === undefined ? '' : _ref2$key;\n\n      var canvasDepth = 1;\n      var textCanvas = document.createElement('canvas');\n\n      if (key !== 'Backspace' && (key.length !== 1 || !key.match(/[a-z ]?/i))) {\n        return;\n      }\n\n      this.text = key === 'Backspace' ? this.text.slice(0, -1) : this.text + key;\n\n      textCanvas.width = textCanvas.height = Math.sqrt(this.numParticles) * canvasDepth;\n\n      var canvasCenterV = textCanvas.height / 2;\n      var ctx = textCanvas.getContext('2d', {\n        alpha: false\n      });\n\n      ctx.font = '80px bold serif';\n      ctx.fillStyle = 'white';\n      ctx.fillText(this.text, 0, canvasCenterV, textCanvas.width);\n\n      this.setTextTexture(textCanvas);\n    }\n  }, {\n    key: 'getPositions',\n    value: function getPositions() {\n      var vertices = new Float32Array(this.numParticles * 4);\n      for (var i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n        var vertice = this.calcPosition();\n\n        this.positions[i3] = vertices[i4] = vertice[0];\n        this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1];\n        this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2];\n\n        vertices[i4 + 3] = 0.0; // stores whether particle is representing text or not\n      }\n      return vertices;\n    }\n  }, {\n    key: 'calcPosition',\n    value: function calcPosition() {\n      var radius = this.radius;\n      var x = Math.random() - 0.5;\n      var y = Math.random() - 0.5;\n      var z = 0;\n      var d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n\n      return [x * d, y * d, z];\n    }\n  }, {\n    key: 'getSizes',\n    value: function getSizes() {\n      var sizes = new Float32Array(this.numParticles * 4);\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        sizes[i4 + 3] = this.calcSize();\n      }\n      return sizes;\n    }\n  }, {\n    key: 'calcSize',\n    value: function calcSize() {\n      var sizeRange = this.maxSize - this.minSize;\n      var size = this.minSize + sizeRange * Math.pow(Math.random(), this.skew);\n\n      return size;\n    }\n  }, {\n    key: 'getColours',\n    value: function getColours() {\n      var colours = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        var colour = this.calcColour();\n\n        colours[i4] = colour[0];\n        colours[i4 + 1] = colour[1];\n        colours[i4 + 2] = colour[2];\n        colours[i4 + 3] = colour[3];\n      }\n\n      return colours;\n    }\n  }, {\n    key: 'calcColour',\n    value: function calcColour() {\n      var getColor = function getColor(r, g, b, a) {\n        return [r / 255, g / 255, b / 255, a];\n      };\n      var randomVal = Math.ceil(Math.random() * 10);\n\n      switch (randomVal) {\n        case 1:\n          return getColor(155, 176, 255, 1);\n\n        case 2:\n          return getColor(170, 191, 255, 1);\n\n        case 3:\n          return getColor(202, 215, 255, 1);\n\n        case 4:\n          return getColor(248, 247, 255, 1);\n\n        case 5:\n          return getColor(255, 244, 234, 1);\n\n        case 6:\n          return getColor(255, 210, 161, 1);\n\n        case 7:\n          return getColor(255, 204, 111, 1);\n\n        default:\n          return getColor(255, 255, 255, 1);\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      this.positionFBO.simulate();\n      this.sizeFBO.simulate();\n      this.sizeFBO.simulationShader.uniforms.tPosition.value = this.material.uniforms.tPosition.value = this.positionFBO.getCurrentFrame();\n      this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame();\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.particles;\n    }\n  }, {\n    key: 'setCameraZ',\n    value: function setCameraZ(newCameraZ) {\n      this.cameraZ = newCameraZ;\n    }\n  }]);\n\n  return Particles;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Particles);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 9 */,\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return positionSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return positionSimulationVertexShader; });\n/* eslint-disable */\n\nvar positionSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\n\\tuniform sampler2D tDefaultPosition;\\n\\tuniform sampler2D tText;\\n\\n\\tuniform float topSpeed;\\n\\tuniform float acceleration;\\n\\tuniform float textPositionMultiplier;\\n\\n\\tvec3 setTopSpeed(vec3 speed, float topSpeed) {\\n\\t\\treturn vec3(\\n\\t\\t\\tspeed.x > topSpeed ? topSpeed : speed.x < -topSpeed ? -topSpeed : speed.x,\\n\\t\\t\\tspeed.y > topSpeed ? topSpeed : speed.y < -topSpeed ? -topSpeed : speed.y,\\n\\t\\t\\tspeed.z > topSpeed ? topSpeed : speed.z < -topSpeed ? -topSpeed : speed.z\\n\\t\\t);\\n\\t}\\n\\n\\tvec3 moveParticleToGoal(vec3 currPos, vec3 prevPos, vec3 goal) {\\n\\t\\tvec3 distanceToGoal = goal - currPos;\\n\\t\\tvec3 currVelocity = currPos - prevPos;\\n\\n\\t\\tvec3 calculatedAcceleration = normalize(distanceToGoal) * acceleration;\\n\\t\\tfloat currVelocityL = length(currVelocity);\\n\\t\\tfloat distanceToGoalL = length(distanceToGoal);\\n\\n\\t\\tif (distanceToGoalL > currVelocityL) {\\n\\t\\t\\tvec3 velocity = currVelocity + calculatedAcceleration;\\n\\n\\t\\t\\tvelocity = setTopSpeed(velocity, topSpeed);\\n\\n\\t\\t\\treturn currPos + velocity;\\n\\t\\t} else {\\n\\t\\t\\treturn goal;\\n\\t\\t}\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tvec3 defaultPos = texture2D(tDefaultPosition, vUv).xyz;\\n\\t\\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\\n\\t\\tvec3 position = texture2D(tCurr, vUv).xyz;\\n\\t\\tfloat textOpacity = texture2D(tText, vUv).r;\\n\\t\\tfloat isTextParticle = 0.0;\\n\\n\\t\\tif (prevPos == vec3(0.0, 0.0, 0.0)) {\\n\\t\\t\\tposition = defaultPos;\\n\\t\\t}\\n\\n\\t\\tif (textOpacity > 0.0) {\\n\\t\\t\\tposition = moveParticleToGoal(position, prevPos, vec3((vUv - 0.5) * textPositionMultiplier, 0.0));\\n\\n\\t\\t\\tisTextParticle = 1.0;\\n\\t\\t} else {\\n\\t\\t\\tposition = moveParticleToGoal(position, prevPos, defaultPos);\\n\\t\\t}\\n\\n\\t\\t// write new positions out\\n\\t\\tgl_FragColor = vec4(position, isTextParticle);\\n\\t}\\n\";\n\nvar positionSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return sizeSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sizeSimulationVertexShader; });\n/* eslint-disable */\n\nvar sizeSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tDefaultSize;\\n\\n\\tuniform vec3 mouse;\\n\\tuniform float incSize;\\n\\tuniform float sizeRange;\\n\\n\\tuniform float hoverDist;\\n\\tuniform float hoverSizeInc;\\n\\tuniform float hoverMaxSizeMultiplier;\\n\\n\\tfloat getSize() {\\n\\t\\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\\n\\t\\tfloat prevSize = texture2D(tPrev, vUv).w;\\n\\t\\tfloat size = texture2D(tCurr, vUv).w;\\n\\n\\t\\tif (size == 0.0) {\\n\\t\\t\\tsize = defaultSize;\\n\\t\\t} else if (prevSize == 0.0 || size == prevSize) {\\n\\t\\t\\tsize = rand(vUv) >= 0.5 ? size + incSize : size - incSize;\\n\\t\\t} else if (size < (defaultSize - sizeRange)) {\\n\\t\\t\\tsize += incSize;\\n\\t\\t} else if (size > (defaultSize + sizeRange)) {\\n\\t\\t\\tsize -= incSize;\\n\\t\\t} else {\\n\\t\\t\\tsize += size - prevSize;\\n\\t\\t}\\n\\n\\t\\tfloat dist = length(currPosition.xy - mouse.xy);\\n\\n\\t\\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\\n\\t\\t\\tsize += hoverSizeInc;\\n\\t\\t}\\n\\n\\t\\treturn size;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\t// write new size out\\n\\t\\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\\n\\t}\\n\";\n\nvar sizeSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return vertexShader; });\n/* eslint-disable */\n\nvar fragmentShader = \"\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D starImg;\\n\\tuniform sampler2D tColour;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\\n\\t\\tvec3 position = texture2D(tPosition, vUv).xyz;\\n\\t\\tvec4 colour = texture2D(tColour, vUv).rgba;\\n\\t\\tfloat isTextColor = texture2D(tPosition, vUv).a;\\n\\n\\t\\tgl_FragColor = colour;\\n\\t\\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\\n\\t}\\n\";\n\nvar vertexShader = \"\\n\\tuniform sampler2D tDefaultPosition;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tSize;\\n\\tuniform sampler2D tText;\\n\\n\\tuniform float sizeMultiplierForScreen;\\n\\tuniform float textSizeMultiplier;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvUv = position.xy;\\n\\t\\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\\n\\n\\t\\t// position saved as rgba / xyzw value in a texture object in memory\\n\\t\\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\\n\\t\\tvec3 position = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat distanceToTravel = length(goal - defaultPosition);\\n\\t\\tfloat distanceTravelled = length(position - defaultPosition);\\n\\t\\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\\n\\n\\t\\t// if distanceTravelled > 0.0 then this particle has moved from default position and therefore is a text star\\n\\t\\tfloat size = texture2D(tSize, vUv).a;\\n\\t\\tfloat textSize = size * size * textSizeMultiplier; // multiply star size against itself to create size skew\\n\\t\\tsize = distanceTravelled > 0.0 ? mix(size, textSize, distanceTravelledRatio > 1.0 ? 1.0 : distanceTravelledRatio) : size;\\n\\n\\t\\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n\\t\\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\\n\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t}\\n\";\n\n\n\n/***/ })\n],[4]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js","export function getParameterByName (name, url) {\n  if (!url) {\n    url = window.location.href\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`)\n  const results = regex.exec(url)\n\n  if (!results) return null\n  if (!results[2]) return ''\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport function getZRatio () {\n  if (window.innerWidth > 1100) {\n    return 170\n  } else if (window.innerWidth > 700) {\n    return 100\n  } else if (window.innerWidth > 500) {\n    return 85\n  } else {\n    return 50\n  }\n}\n\nexport function createDataTexture ({\n  data,\n  tWidth,\n  tHeight,\n  format,\n  filterType\n}) {\n  const dataTexture = new THREE.DataTexture(\n    data,\n    tWidth,\n    tHeight,\n    format,\n    THREE.FloatType\n  )\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType\n  dataTexture.needsUpdate = true\n  dataTexture.flipY = false\n\n  return dataTexture\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","import isWebglEnabled from 'detector-webgl'\nimport Camera from './io/camera'\nimport Renderer from './io/renderer'\nimport Scene from './objects/scene'\nimport Particles from './objects/particles'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (isWebglEnabled) {\n    const container = document.getElementById('stars-simulation-container')\n    const renderer = new Renderer({ container })\n    const scene = new Scene()\n    const particles = new Particles({\n      renderer,\n      hoverDist: 0.04,\n      hoverSizeInc: 0.002,\n      hoverMaxSizeMultiplier: 1.3,\n      textSizeMultiplier: 690,\n      textPositionMultiplier: 5.5,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      skew: 35,\n      incSize: 0.00005,\n      numParticles: 150000,\n      radius: 4,\n      topSpeed: 1,\n      acceleration: 0.0001\n    })\n    const camera = new Camera({\n      particles,\n      position: {\n        x: 0,\n        y: -0.001,\n        z: 4.5\n      }\n    })\n\n    const init = () => {\n      scene.add(particles.get())\n    }\n\n    const animate = () => {\n      requestAnimationFrame(animate) // eslint-disable-line\n      render()\n    }\n\n    const render = () => {\n      particles.update()\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      })\n    }\n\n    init()\n    animate()\n  } else {\n    const info = document.getElementById('info')\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.'\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { getZRatio } from '../utils'\n\nexport default class Camera {\n  constructor ({\n    particles,\n    fov = 400,\n    aspectRatio = window.innerWidth / window.innerHeight,\n    near = 0.1,\n    far = 2000,\n    position = {\n      x: 0, y: 0, z: 0\n    },\n    up = [0, 0, 1]\n  }) {\n    this.particles = particles\n    this.particles.setCameraZ(position.z)\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far)\n    this.up = up\n\n    this.setPosition(position)\n    this.setUp(...this.up)\n    this.setLookAt()\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.camera.aspect = WIDTH / HEIGHT\n    this.setZ(window.innerHeight / getZRatio())\n    this.camera.updateProjectionMatrix()\n  }\n\n  setUp (x, y, z) {\n    this.camera.up.set(x, y, z)\n  }\n\n  setPosition ({\n    x = this.camera.position.x,\n    y = this.camera.position.y,\n    z = this.camera.position.z\n  }) {\n    this.setX(x)\n    this.setY(y)\n    this.setZ(z)\n  }\n\n  setX (x) {\n    this.camera.position.x = x\n    this.setLookAt()\n  }\n\n  setY (y) {\n    this.camera.position.y = y\n    this.setLookAt()\n  }\n\n  setZ (z) {\n    this.camera.position.z = z\n    this.setLookAt()\n    this.setUp(0, 0, 1)\n    this.particles.setCameraZ(z)\n  }\n\n  setLookAt () {\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0))\n  }\n\n  get () {\n    return this.camera\n  }\n\n  getPosition () {\n    return this.camera.position\n  }\n\n  getZ () {\n    return this.camera.position.z\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/camera.js","export default class Renderer {\n  constructor ({\n    alpha = true,\n    pixelRatio = window.devicePixelRatio,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    container\n  }) {\n    this.renderer = new THREE.WebGLRenderer({ alpha })\n    const gl = this.renderer.context\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.setPixelRatio(pixelRatio)\n\n    this.setSize(width, height)\n\n    container.appendChild(this.getDomElement())\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  getDomElement () {\n    return this.renderer.domElement\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.renderer.setSize(WIDTH, HEIGHT)\n  }\n\n  setPixelRatio (pixelRatio) {\n    this.renderer.setPixelRatio(pixelRatio)\n  }\n\n  setSize (w, h) {\n    this.renderer.setSize(w, h)\n  }\n\n  render ({\n    scene,\n    camera,\n    renderTarget = null,\n    force = false\n  } = {}) {\n    this.renderer.render(scene, camera, renderTarget, force)\n  }\n\n  get () {\n    return this.renderer\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/renderer.js","export default class Canvas {\n  constructor () {\n    this.scene = new THREE.Scene()\n  }\n\n  add (obj) {\n    this.scene.add(obj)\n  }\n\n  remove (obj) {\n    this.scene.remove(obj)\n  }\n\n  get () {\n    return this.scene\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/scene.js","import FBO from 'three.js-fbo'\nimport { createDataTexture } from '../utils'\nimport { positionSimulationVertexShader, positionSimulationFragmentShader } from '../shaders/positionSimulationShaders'\nimport { sizeSimulationVertexShader, sizeSimulationFragmentShader } from '../shaders/sizeSimulationShaders'\nimport { vertexShader, fragmentShader } from '../shaders/shaders'\n\nexport default class Particles {\n  constructor ({\n    numParticles = 10000,\n    configUniforms = {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: (window.innerHeight * window.devicePixelRatio) / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    },\n    blending = THREE.AdditiveBlending,\n    transparent = true,\n    depthTest = true,\n    depthWrite = false,\n\n    renderer,\n\n    radius = 100, // radius of outer particle\n\n    // used to define and animate sizes\n    sizeRange = 0.5, // the amount the size is allowed to fluxuate in animation\n    minSize = 1,\n    maxSize = 3,\n    incSize = 0.01, // the amount the size is increased / decreased per frame\n\n    // used to define raycasting boundries\n    hoverDist = 10,\n    hoverSizeInc = 0.05,\n    hoverMaxSizeMultiplier = 5,\n    skew = 1,\n\n    // values to use when stars form text\n    animationFrames = [],\n    topSpeed = 0.07,\n    acceleration = 0.01,\n    textSizeMultiplier = 2,\n    textPositionMultiplier = 2\n  }) {\n    this.renderer = renderer\n\n    this.numParticles = numParticles\n    this.radius = radius\n    this.skew = skew // skews the median size\n\n    // used to define star glinting\n    this.sizeRange = sizeRange\n    this.minSize = minSize\n    this.maxSize = maxSize\n    this.incSize = incSize\n\n    // used to define mouse interaction animation\n    this.hoverDist = hoverDist\n    this.hoverSizeInc = hoverSizeInc\n    this.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier\n\n    // use to define moving particles\n    this.topSpeed = topSpeed\n    this.acceleration = acceleration\n    this.textSizeMultiplier = textSizeMultiplier\n    this.textPositionMultiplier = textPositionMultiplier\n    this.animationFrames = animationFrames\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    const tHeight = Math.ceil(Math.sqrt(this.numParticles))\n    const tWidth = tHeight\n    this.numParticles = tWidth * tHeight\n\n    this.positions = new Float32Array(this.numParticles * 3)\n\n    this.positionFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tDefaultPosition: { type: 't', value: 0 }, // default star positions\n        tText: { type: 't', value: 0 }, // texture holding text\n\n        topSpeed: { type: 'f', value: this.topSpeed }, // the top speed of stars\n        acceleration: { type: 'f', value: this.acceleration }, // the star particle acceleration\n\n        textPositionMultiplier: { type: 'f', value: this.textPositionMultiplier }\n      },\n      simulationVertexShader: positionSimulationVertexShader,\n      simulationFragmentShader: positionSimulationFragmentShader\n    })\n\n    this.positionFBO.setTextureUniform('tDefaultPosition', this.getPositions())\n\n    this.sizeFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tPosition: { type: 't', value: 0 },\n        tDefaultSize: { type: 't', value: 0 },\n\n        mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n\n        sizeRange: { type: 'f', value: this.sizeRange },\n        incSize: { type: 'f', value: this.incSize },\n\n        hoverDist: { type: 'f', value: this.hoverDist },\n        hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n        hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n      },\n      simulationVertexShader: sizeSimulationVertexShader,\n      simulationFragmentShader: sizeSimulationFragmentShader\n    })\n\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n\n    const uniforms = Object.assign({}, configUniforms, {\n      tDefaultPosition: { type: 't', value: this.positionFBO.simulationShader.uniforms.tDefaultPosition.value },\n      tText: { type: 't', value: 0 },\n      tPosition: { type: 't', value: this.positionFBO.targets[0] },\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      textSizeMultiplier: { type: 'f', value: this.textSizeMultiplier },\n\n      tColour: { type: 't',\n        value: createDataTexture({\n          data: this.getColours(),\n          tWidth,\n          tHeight,\n          format: this.positionFBO.format,\n          filterType: this.positionFBO.filterType\n        }) }\n    })\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader,\n      fragmentShader,\n      blending,\n      transparent,\n      depthTest,\n      depthWrite\n    })\n\n    // set uv coords of particles in texture as positions\n    const geometry = new THREE.Geometry()\n\n    for (let i = 0; i < this.numParticles; i++) {\n      const vertex = new THREE.Vector3()\n      vertex.x = (i % tWidth) / tWidth\n      vertex.y = Math.floor(i / tWidth) / tHeight\n      geometry.vertices.push(vertex)\n    }\n\n    this.particles = new THREE.Points(geometry, this.material)\n    this.particles.frustumCulled = false\n\n    this.text = ''\n    document.onkeydown = this.onTextInput.bind(this)\n\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n    // document.addEventListener('touchmove', this.onMouseMove.bind(this), false);\n    document.addEventListener('mousemove', this.onMouseMove.bind(this), false)\n  }\n\n  setAnimation () {\n    this.animationFrames.forEach(animationFrame =>\n      setTimeout(() => this.createCanvasAnimation(animationFrame), animationFrame.animationDelay || 0)\n    )\n  }\n\n  onWindowResize () {\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n  }\n\n  onMouseMove (event) {\n    const xMultiplier = this.cameraZ / (this.windowHalfY * 2.8)\n    const yMultiplier = this.cameraZ / (this.windowHalfY * 2.65)\n    const mouseX = event.clientX - this.windowHalfX\n    const mouseY = this.windowHalfY - event.clientY\n\n    this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0)\n  }\n\n  setTextTexture (textCanvas) {\n    const textTexture = new THREE.Texture(textCanvas)\n    textTexture.minFilter = textTexture.magFilter = THREE.NearestFilter\n    textTexture.needsUpdate = true\n    textTexture.flipY = true\n    this.positionFBO.simulationShader.uniforms.tText.value = this.material.uniforms.tText.value = textTexture\n  }\n\n  onTextInput ({\n    key = ''\n  }) {\n    const canvasDepth = 1\n    const textCanvas = document.createElement('canvas')\n\n    if (key !== 'Backspace' && (key.length !== 1 || !key.match(/[a-z ]?/i))) {\n      return\n    }\n\n    this.text = key === 'Backspace' ? this.text.slice(0, -1) : this.text + key\n\n    textCanvas.width = textCanvas.height = Math.sqrt(this.numParticles) * canvasDepth\n\n    const canvasCenterV = textCanvas.height / 2\n    const ctx = textCanvas.getContext('2d', {\n      alpha: false\n    })\n\n    ctx.font = `80px bold serif`\n    ctx.fillStyle = 'white'\n    ctx.fillText(this.text, 0, canvasCenterV, textCanvas.width)\n\n    this.setTextTexture(textCanvas)\n  }\n\n  getPositions () {\n    const vertices = new Float32Array(this.numParticles * 4)\n    for (let i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n      const vertice = this.calcPosition()\n\n      this.positions[i3] = vertices[i4] = vertice[0]\n      this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1]\n      this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2]\n\n      vertices[i4 + 3] = 0.0 // stores whether particle is representing text or not\n    }\n    return vertices\n  }\n\n  calcPosition () {\n    const radius = this.radius\n    const x = Math.random() - 0.5\n    const y = Math.random() - 0.5\n    const z = 0\n    const d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)))\n\n    return [\n      x * d,\n      y * d,\n      z\n    ]\n  }\n\n  getSizes () {\n    const sizes = new Float32Array(this.numParticles * 4)\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      sizes[i4 + 3] = this.calcSize()\n    }\n    return sizes\n  }\n\n  calcSize () {\n    const sizeRange = this.maxSize - this.minSize\n    const size = this.minSize + (sizeRange * Math.pow(Math.random(), this.skew))\n\n    return size\n  }\n\n  getColours () {\n    const colours = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      const colour = this.calcColour()\n\n      colours[i4] = colour[0]\n      colours[i4 + 1] = colour[1]\n      colours[i4 + 2] = colour[2]\n      colours[i4 + 3] = colour[3]\n    }\n\n    return colours\n  }\n\n  calcColour () {\n    const getColor = (r, g, b, a) => [r / 255, g / 255, b / 255, a]\n    const randomVal = Math.ceil(Math.random() * 10)\n\n    switch (randomVal) {\n      case 1:\n        return getColor(155, 176, 255, 1)\n\n      case 2:\n        return getColor(170, 191, 255, 1)\n\n      case 3:\n        return getColor(202, 215, 255, 1)\n\n      case 4:\n        return getColor(248, 247, 255, 1)\n\n      case 5:\n        return getColor(255, 244, 234, 1)\n\n      case 6:\n        return getColor(255, 210, 161, 1)\n\n      case 7:\n        return getColor(255, 204, 111, 1)\n\n      default:\n        return getColor(255, 255, 255, 1)\n    }\n  }\n\n  update () {\n    this.positionFBO.simulate()\n    this.sizeFBO.simulate()\n    this.sizeFBO.simulationShader.uniforms.tPosition.value = this.material.uniforms.tPosition.value = this.positionFBO.getCurrentFrame()\n    this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame()\n  }\n\n  get () {\n    return this.particles\n  }\n\n  setCameraZ (newCameraZ) {\n    this.cameraZ = newCameraZ\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/particles.js","/* eslint-disable */\n\nconst positionSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\n\tuniform sampler2D tDefaultPosition;\n\tuniform sampler2D tText;\n\n\tuniform float topSpeed;\n\tuniform float acceleration;\n\tuniform float textPositionMultiplier;\n\n\tvec3 setTopSpeed(vec3 speed, float topSpeed) {\n\t\treturn vec3(\n\t\t\tspeed.x > topSpeed ? topSpeed : speed.x < -topSpeed ? -topSpeed : speed.x,\n\t\t\tspeed.y > topSpeed ? topSpeed : speed.y < -topSpeed ? -topSpeed : speed.y,\n\t\t\tspeed.z > topSpeed ? topSpeed : speed.z < -topSpeed ? -topSpeed : speed.z\n\t\t);\n\t}\n\n\tvec3 moveParticleToGoal(vec3 currPos, vec3 prevPos, vec3 goal) {\n\t\tvec3 distanceToGoal = goal - currPos;\n\t\tvec3 currVelocity = currPos - prevPos;\n\n\t\tvec3 calculatedAcceleration = normalize(distanceToGoal) * acceleration;\n\t\tfloat currVelocityL = length(currVelocity);\n\t\tfloat distanceToGoalL = length(distanceToGoal);\n\n\t\tif (distanceToGoalL > currVelocityL) {\n\t\t\tvec3 velocity = currVelocity + calculatedAcceleration;\n\n\t\t\tvelocity = setTopSpeed(velocity, topSpeed);\n\n\t\t\treturn currPos + velocity;\n\t\t} else {\n\t\t\treturn goal;\n\t\t}\n\t}\n\n\tvoid main() {\n\t\tvec3 defaultPos = texture2D(tDefaultPosition, vUv).xyz;\n\t\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\n\t\tvec3 position = texture2D(tCurr, vUv).xyz;\n\t\tfloat textOpacity = texture2D(tText, vUv).r;\n\t\tfloat isTextParticle = 0.0;\n\n\t\tif (prevPos == vec3(0.0, 0.0, 0.0)) {\n\t\t\tposition = defaultPos;\n\t\t}\n\n\t\tif (textOpacity > 0.0) {\n\t\t\tposition = moveParticleToGoal(position, prevPos, vec3((vUv - 0.5) * textPositionMultiplier, 0.0));\n\n\t\t\tisTextParticle = 1.0;\n\t\t} else {\n\t\t\tposition = moveParticleToGoal(position, prevPos, defaultPos);\n\t\t}\n\n\t\t// write new positions out\n\t\tgl_FragColor = vec4(position, isTextParticle);\n\t}\n`\n\nconst positionSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  positionSimulationFragmentShader,\n  positionSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/positionSimulationShaders.js","/* eslint-disable */\n\nconst sizeSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tDefaultSize;\n\n\tuniform vec3 mouse;\n\tuniform float incSize;\n\tuniform float sizeRange;\n\n\tuniform float hoverDist;\n\tuniform float hoverSizeInc;\n\tuniform float hoverMaxSizeMultiplier;\n\n\tfloat getSize() {\n\t\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\n\t\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\n\t\tfloat prevSize = texture2D(tPrev, vUv).w;\n\t\tfloat size = texture2D(tCurr, vUv).w;\n\n\t\tif (size == 0.0) {\n\t\t\tsize = defaultSize;\n\t\t} else if (prevSize == 0.0 || size == prevSize) {\n\t\t\tsize = rand(vUv) >= 0.5 ? size + incSize : size - incSize;\n\t\t} else if (size < (defaultSize - sizeRange)) {\n\t\t\tsize += incSize;\n\t\t} else if (size > (defaultSize + sizeRange)) {\n\t\t\tsize -= incSize;\n\t\t} else {\n\t\t\tsize += size - prevSize;\n\t\t}\n\n\t\tfloat dist = length(currPosition.xy - mouse.xy);\n\n\t\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\n\t\t\tsize += hoverSizeInc;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\tvoid main() {\n\t\t// write new size out\n\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\n\t}\n`\n\nconst sizeSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  sizeSimulationFragmentShader,\n  sizeSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/sizeSimulationShaders.js","/* eslint-disable */\n\nconst fragmentShader = `\n\tuniform sampler2D tPosition;\n\tuniform sampler2D starImg;\n\tuniform sampler2D tColour;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\n\t\tvec3 position = texture2D(tPosition, vUv).xyz;\n\t\tvec4 colour = texture2D(tColour, vUv).rgba;\n\t\tfloat isTextColor = texture2D(tPosition, vUv).a;\n\n\t\tgl_FragColor = colour;\n\t\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\n\t}\n`\n\nconst vertexShader = `\n\tuniform sampler2D tDefaultPosition;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tSize;\n\tuniform sampler2D tText;\n\n\tuniform float sizeMultiplierForScreen;\n\tuniform float textSizeMultiplier;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvUv = position.xy;\n\t\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\n\n\t\t// position saved as rgba / xyzw value in a texture object in memory\n\t\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\n\t\tvec3 position = texture2D(tPosition, vUv).xyz;\n\t\tfloat distanceToTravel = length(goal - defaultPosition);\n\t\tfloat distanceTravelled = length(position - defaultPosition);\n\t\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\n\n\t\t// if distanceTravelled > 0.0 then this particle has moved from default position and therefore is a text star\n\t\tfloat size = texture2D(tSize, vUv).a;\n\t\tfloat textSize = size * size * textSizeMultiplier; // multiply star size against itself to create size skew\n\t\tsize = distanceTravelled > 0.0 ? mix(size, textSize, distanceTravelledRatio > 1.0 ? 1.0 : distanceTravelledRatio) : size;\n\n\t\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\t\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t}\n`\n\nexport {\n  fragmentShader,\n  vertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/shaders.js"],"sourceRoot":""}