{"version":3,"sources":["webpack:///js/bundle.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/constants/fonts.js","webpack:///./src/js/io/controls.js","webpack:///./src/js/main.js","webpack:///./src/js/io/camera.js","webpack:///./src/js/io/renderer.js","webpack:///./src/js/objects/scene.js","webpack:///./src/js/objects/particles.js","webpack:///./src/js/shaders/positionSimulationShaders.js","webpack:///./src/js/shaders/sizeSimulationShaders.js","webpack:///./src/js/shaders/shaders.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","THREE","getZRatio","window","innerWidth","createDataTexture","_ref","data","tWidth","tHeight","format","filterType","dataTexture","DataTexture","FloatType","minFilter","magFilter","needsUpdate","flipY","call","fonts","arial","arialBlack","comicSans","georgia","impact","lucida","palatino","times","tahoma","trebuchet","verdena","constants_fonts","d","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","detector_webgl","detector_webgl_default","n","stats_min","stats_min_default","io_camera","dat_gui","dat_gui_default","constants","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","controls_Controls","Controls","arguments","undefined","particles","scene","this","gui","a","GUI","addBgControls","addTextControls","addMouseControls","addSizeControls","addColourStrengthControls","addOpacityControls","addColor","add","keys","onFinishChange","updateTextTexture","min","max","step","updateParticleVars","minSize","maxSize","updateSizes","updateColours","controls","io_renderer","objects_scene","objects_particles","document","addEventListener","container","getElementById","renderer","numParticles","matchMedia","matches","radius","sizeRange","sizeInc","skew","hoverDist","hoverSizeInc","hoverMaxSizeMultiplier","font","fontSize","topSpeed","acceleration","textAlign","textSizeMultiplier","textPositionMultiplier","brightness","opacity","camera","position","x","y","z","stats","render","begin","update","get","end","showPanel","body","appendChild","dom","animate","requestAnimationFrame","innerHTML","_toConsumableArray","arr","Array","isArray","arr2","from","__WEBPACK_IMPORTED_MODULE_0__utils__","Camera","_ref$fov","fov","_ref$aspectRatio","aspectRatio","innerHeight","_ref$near","near","_ref$far","far","_ref$position","_ref$up","up","setCameraZ","PerspectiveCamera","setPosition","setUp","apply","setLookAt","WIDTH","HEIGHT","aspect","setZ","updateProjectionMatrix","set","_ref2","_ref2$x","_ref2$y","_ref2$z","setX","setY","lookAt","Vector3","Renderer","_ref$alpha","alpha","_ref$pixelRatio","pixelRatio","devicePixelRatio","_ref$width","width","_ref$height","height","WebGLRenderer","gl","context","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setPixelRatio","setSize","getDomElement","onWindowResize","bind","domElement","w","h","_ref2$renderTarget","renderTarget","_ref2$force","force","Canvas","Scene","obj","remove","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__constants__","__WEBPACK_IMPORTED_MODULE_3__shaders_positionSimulationShaders__","__WEBPACK_IMPORTED_MODULE_4__shaders_sizeSimulationShaders__","__WEBPACK_IMPORTED_MODULE_5__shaders_shaders__","Particles","_ref$configUniforms","configUniforms","color","Color","sizeMultiplierForScreen","starImg","TextureLoader","load","_ref$blending","blending","AdditiveBlending","_ref$transparent","transparent","_ref$depthTest","depthTest","_ref$depthWrite","depthWrite","_ref$bgColorTop","bgColorTop","_ref$bgColorBottom","bgColorBottom","_ref$numParticles","_ref$radius","_ref$minSize","_ref$maxSize","_ref$sizeRange","_ref$sizeInc","_ref$skew","_ref$hoverDist","_ref$hoverSizeInc","_ref$hoverMaxSizeMult","_ref$font","_ref$fontSize","_ref$topSpeed","_ref$acceleration","_ref$textAlign","_ref$textSizeMultipli","_ref$textPositionMult","_ref$brightness","_ref$opacity","windowHalfX","windowHalfY","Math","ceil","sqrt","positions","Float32Array","positionFBO","uniforms","tDefaultPosition","type","tText","simulationVertexShader","simulationFragmentShader","setTextureUniform","getPositions","sizeFBO","tPosition","tDefaultSize","mouse","getSizes","assign","simulationShader","targets","tSize","tColour","getColours","material","ShaderMaterial","vertexShader","fragmentShader","geometry","Geometry","vertex","floor","vertices","push","Points","frustumCulled","text","onkeydown","onTextInput","onMouseMove","event","xMultiplier","cameraZ","yMultiplier","mouseX","clientX","mouseY","clientY","textCanvas","textTexture","Texture","NearestFilter","_ref2$key","match","slice","i3","i4","vertice","calcPosition","random","pow","sizes","calcSize","colours","colour","calcColour","_this","randomVal","getColor","r","g","b","simulate","getCurrentFrame","newCameraZ","createElement","canvasCenter","ctx","getContext","fillStyle","fillText","setTextTexture","_bgColorTop","newVal","getElementsByTagName","style","background","_bgColorBottom","positionSimulationFragmentShader","positionSimulationVertexShader","sizeSimulationFragmentShader","sizeSimulationVertexShader"],"mappings":"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","file":"js/bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* unused harmony export getParameterByName */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getZRatio;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createDataTexture;\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(url);\n\n  if (!results) return null;\n  if (!results[2]) return '';\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getZRatio() {\n  if (window.innerWidth > 1100) {\n    return 170;\n  } else if (window.innerWidth > 700) {\n    return 100;\n  } else if (window.innerWidth > 500) {\n    return 85;\n  } else {\n    return 50;\n  }\n}\n\nfunction createDataTexture(_ref) {\n  var data = _ref.data,\n      tWidth = _ref.tWidth,\n      tHeight = _ref.tHeight,\n      format = _ref.format,\n      filterType = _ref.filterType;\n\n  var dataTexture = new THREE.DataTexture(data, tWidth, tHeight, format, THREE.FloatType);\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType;\n  dataTexture.needsUpdate = true;\n  dataTexture.flipY = false;\n\n  return dataTexture;\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 4 */,\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// CONCATENATED MODULE: ./src/js/constants/fonts.js\nvar fonts = {\n  arial: 'Arial, Helvetica, sans-serif',\n  arialBlack: '\"Arial Black\", Gadget, sans-serif',\n  comicSans: '\"Comic Sans MS\", cursive, sans-serif',\n  georgia: 'Georgia, serif',\n  impact: 'Impact, Charcoal, sans-serif',\n  lucida: '\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif',\n  palatino: '\"Palatino Linotype\", \"Book Antiqua\", Palatino, serif',\n  times: '\"Times New Roman\", Times, serif',\n  tahoma: 'Tahoma, Geneva, sans-serif',\n  trebuchet: '\"Trebuchet MS\", Helvetica, sans-serif',\n  verdena: 'Verdana, Geneva, sans-serif'\n};\n\n/* harmony default export */ var constants_fonts = (fonts);\n// CONCATENATED MODULE: ./src/js/constants/index.js\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"a\", function() { return constants_fonts; });\n\n\n/***/ }),\n/* 6 */,\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/detector-webgl/index.js\nvar detector_webgl = __webpack_require__(1);\nvar detector_webgl_default = /*#__PURE__*/__webpack_require__.n(detector_webgl);\n\n// EXTERNAL MODULE: ./node_modules/stats.js/build/stats.min.js\nvar stats_min = __webpack_require__(2);\nvar stats_min_default = /*#__PURE__*/__webpack_require__.n(stats_min);\n\n// EXTERNAL MODULE: ./src/js/io/camera.js\nvar io_camera = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/dat-gui/index.js\nvar dat_gui = __webpack_require__(4);\nvar dat_gui_default = /*#__PURE__*/__webpack_require__.n(dat_gui);\n\n// EXTERNAL MODULE: ./src/js/constants/index.js + 1 modules\nvar constants = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/js/io/controls.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\nvar controls_Controls = function () {\n  function Controls() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        particles = _ref.particles,\n        scene = _ref.scene;\n\n    _classCallCheck(this, Controls);\n\n    this.gui = new dat_gui_default.a.GUI();\n\n    this.addBgControls(particles);\n    this.addTextControls(particles);\n    this.addMouseControls(particles);\n    this.addSizeControls(particles);\n    this.addColourStrengthControls(particles);\n    this.addOpacityControls(particles);\n  }\n\n  _createClass(Controls, [{\n    key: 'addBgControls',\n    value: function addBgControls(particles) {\n      this.gui.addColor(particles, 'bgColorTop');\n\n      this.gui.addColor(particles, 'bgColorBottom');\n    }\n  }, {\n    key: 'addTextControls',\n    value: function addTextControls(particles) {\n      this.gui.add(particles, 'font', Object.keys(constants[\"a\" /* fonts */])).onFinishChange(function () {\n        particles.updateTextTexture();\n      });\n\n      this.gui.add(particles, 'fontSize').min(10).max(200).step(5).onFinishChange(function () {\n        particles.updateTextTexture();\n      });\n\n      this.gui.add(particles, 'textAlign', ['left', 'center']).onFinishChange(function () {\n        particles.updateTextTexture();\n      });\n\n      this.gui.add(particles, 'textSizeMultiplier').min(1).max(1000).step(10).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'topSpeed').min(0.1).max(10).step(0.1).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'acceleration').min(0.00001).max(0.01).step(0.00001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addMouseControls',\n    value: function addMouseControls(particles) {\n      this.gui.add(particles, 'hoverDist').min(0).max(0.5).step(0.01).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverSizeInc').min(0).max(0.03).step(0.001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverMaxSizeMultiplier').min(1).max(3).step(0.05).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addSizeControls',\n    value: function addSizeControls(particles) {\n      this.gui.add(particles, 'minSize').min(0.01).max(0.04).step(0.001).onFinishChange(function () {\n        if (particles.minSize > particles.maxSize) {\n          particles.minSize = particles.maxSize;\n        }\n\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'maxSize').min(0.01).max(0.04).step(0.001).onFinishChange(function () {\n        if (particles.maxSize < particles.minSize) {\n          particles.maxSize = particles.minSize;\n        }\n\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeInc').min(0.00001).max(0.0002).step(0.00001).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeRange').min(0).max(0.02).step(0.0005).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'skew').min(1).max(100).step(1).onFinishChange(function () {\n        particles.updateSizes();\n      });\n    }\n  }, {\n    key: 'addColourStrengthControls',\n    value: function addColourStrengthControls(particles) {\n      this.gui.add(particles, 'brightness').min(0.1).max(3).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }, {\n    key: 'addOpacityControls',\n    value: function addOpacityControls(particles) {\n      this.gui.add(particles, 'opacity').min(0.1).max(1.5).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }]);\n\n  return Controls;\n}();\n\n/* harmony default export */ var controls = (controls_Controls);\n// EXTERNAL MODULE: ./src/js/io/renderer.js\nvar io_renderer = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./src/js/objects/scene.js\nvar objects_scene = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./src/js/objects/particles.js\nvar objects_particles = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./src/js/main.js\n\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (detector_webgl_default.a) {\n    var container = document.getElementById('stars-simulation-container');\n    var renderer = new io_renderer[\"a\" /* default */]({ container: container });\n    var scene = new objects_scene[\"a\" /* default */]();\n    var particles = new objects_particles[\"a\" /* default */]({\n      renderer: renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 40000 : 120000,\n      radius: 4,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 35,\n      hoverDist: 0.04,\n      hoverSizeInc: 0.002,\n      hoverMaxSizeMultiplier: 1.7,\n      font: 'arial',\n      fontSize: 80,\n      topSpeed: 1,\n      acceleration: 0.0001,\n      textAlign: 'left',\n      textSizeMultiplier: 600,\n      textPositionMultiplier: 5.5,\n      brightness: 0.9,\n      opacity: 1\n    });\n    var camera = new io_camera[\"a\" /* default */]({\n      particles: particles,\n      position: {\n        x: 0,\n        y: -0.001,\n        z: 4.5\n      }\n    });\n    var stats = new stats_min_default.a();\n\n    var init = function init() {\n      new controls({ particles: particles }); // eslint-disable-line\n\n      stats.showPanel(0);\n      document.body.appendChild(stats.dom);\n\n      scene.add(particles.get());\n    };\n\n    var animate = function animate() {\n      requestAnimationFrame(animate); // eslint-disable-line\n      render();\n    };\n\n    var render = function render() {\n      stats.begin();\n\n      particles.update();\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      });\n\n      stats.end();\n    };\n\n    init();\n    animate();\n  } else {\n    var info = document.getElementById('info');\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.';\n  }\n});\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar Camera = function () {\n  function Camera(_ref) {\n    var particles = _ref.particles,\n        _ref$fov = _ref.fov,\n        fov = _ref$fov === undefined ? 400 : _ref$fov,\n        _ref$aspectRatio = _ref.aspectRatio,\n        aspectRatio = _ref$aspectRatio === undefined ? window.innerWidth / window.innerHeight : _ref$aspectRatio,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 0.1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 2000 : _ref$far,\n        _ref$position = _ref.position,\n        position = _ref$position === undefined ? {\n      x: 0, y: 0, z: 0\n    } : _ref$position,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 0, 1] : _ref$up;\n\n    _classCallCheck(this, Camera);\n\n    this.particles = particles;\n    this.particles.setCameraZ(position.z);\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n    this.up = up;\n\n    this.setPosition(position);\n    this.setUp.apply(this, _toConsumableArray(this.up));\n    this.setLookAt();\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Camera, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.camera.aspect = WIDTH / HEIGHT;\n      this.setZ(window.innerHeight / Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* getZRatio */])());\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: 'setUp',\n    value: function setUp(x, y, z) {\n      this.camera.up.set(x, y, z);\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(_ref2) {\n      var _ref2$x = _ref2.x,\n          x = _ref2$x === undefined ? this.camera.position.x : _ref2$x,\n          _ref2$y = _ref2.y,\n          y = _ref2$y === undefined ? this.camera.position.y : _ref2$y,\n          _ref2$z = _ref2.z,\n          z = _ref2$z === undefined ? this.camera.position.z : _ref2$z;\n\n      this.setX(x);\n      this.setY(y);\n      this.setZ(z);\n    }\n  }, {\n    key: 'setX',\n    value: function setX(x) {\n      this.camera.position.x = x;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setY',\n    value: function setY(y) {\n      this.camera.position.y = y;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setZ',\n    value: function setZ(z) {\n      this.camera.position.z = z;\n      this.setLookAt();\n      this.setUp(0, 0, 1);\n      this.particles.setCameraZ(z);\n    }\n  }, {\n    key: 'setLookAt',\n    value: function setLookAt() {\n      this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.camera;\n    }\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return this.camera.position;\n    }\n  }, {\n    key: 'getZ',\n    value: function getZ() {\n      return this.camera.position.z;\n    }\n  }]);\n\n  return Camera;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n  function Renderer(_ref) {\n    var _ref$alpha = _ref.alpha,\n        alpha = _ref$alpha === undefined ? true : _ref$alpha,\n        _ref$pixelRatio = _ref.pixelRatio,\n        pixelRatio = _ref$pixelRatio === undefined ? window.devicePixelRatio : _ref$pixelRatio,\n        _ref$width = _ref.width,\n        width = _ref$width === undefined ? window.innerWidth : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === undefined ? window.innerHeight : _ref$height,\n        container = _ref.container;\n\n    _classCallCheck(this, Renderer);\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: alpha });\n    var gl = this.renderer.context;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    this.setPixelRatio(pixelRatio);\n\n    this.setSize(width, height);\n\n    container.appendChild(this.getDomElement());\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Renderer, [{\n    key: 'getDomElement',\n    value: function getDomElement() {\n      return this.renderer.domElement;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.renderer.setSize(WIDTH, HEIGHT);\n    }\n  }, {\n    key: 'setPixelRatio',\n    value: function setPixelRatio(pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio);\n    }\n  }, {\n    key: 'setSize',\n    value: function setSize(w, h) {\n      this.renderer.setSize(w, h);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          scene = _ref2.scene,\n          camera = _ref2.camera,\n          _ref2$renderTarget = _ref2.renderTarget,\n          renderTarget = _ref2$renderTarget === undefined ? null : _ref2$renderTarget,\n          _ref2$force = _ref2.force,\n          force = _ref2$force === undefined ? false : _ref2$force;\n\n      this.renderer.render(scene, camera, renderTarget, force);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.renderer;\n    }\n  }]);\n\n  return Renderer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderer);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Canvas = function () {\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    this.scene = new THREE.Scene();\n  }\n\n  _createClass(Canvas, [{\n    key: \"add\",\n    value: function add(obj) {\n      this.scene.add(obj);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(obj) {\n      this.scene.remove(obj);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.scene;\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Canvas);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaders_positionSimulationShaders__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shaders_sizeSimulationShaders__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shaders_shaders__ = __webpack_require__(17);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\nvar Particles = function () {\n  function Particles(_ref) {\n    var _ref$configUniforms = _ref.configUniforms,\n        configUniforms = _ref$configUniforms === undefined ? {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: window.innerHeight * window.devicePixelRatio / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    } : _ref$configUniforms,\n        _ref$blending = _ref.blending,\n        blending = _ref$blending === undefined ? THREE.AdditiveBlending : _ref$blending,\n        _ref$transparent = _ref.transparent,\n        transparent = _ref$transparent === undefined ? true : _ref$transparent,\n        _ref$depthTest = _ref.depthTest,\n        depthTest = _ref$depthTest === undefined ? true : _ref$depthTest,\n        _ref$depthWrite = _ref.depthWrite,\n        depthWrite = _ref$depthWrite === undefined ? false : _ref$depthWrite,\n        renderer = _ref.renderer,\n        _ref$bgColorTop = _ref.bgColorTop,\n        bgColorTop = _ref$bgColorTop === undefined ? '#000f23' : _ref$bgColorTop,\n        _ref$bgColorBottom = _ref.bgColorBottom,\n        bgColorBottom = _ref$bgColorBottom === undefined ? '#00071b' : _ref$bgColorBottom,\n        _ref$numParticles = _ref.numParticles,\n        numParticles = _ref$numParticles === undefined ? 10000 : _ref$numParticles,\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? 100 : _ref$radius,\n        _ref$minSize = _ref.minSize,\n        minSize = _ref$minSize === undefined ? 1 : _ref$minSize,\n        _ref$maxSize = _ref.maxSize,\n        maxSize = _ref$maxSize === undefined ? 3 : _ref$maxSize,\n        _ref$sizeRange = _ref.sizeRange,\n        sizeRange = _ref$sizeRange === undefined ? 0.5 : _ref$sizeRange,\n        _ref$sizeInc = _ref.sizeInc,\n        sizeInc = _ref$sizeInc === undefined ? 0.01 : _ref$sizeInc,\n        _ref$skew = _ref.skew,\n        skew = _ref$skew === undefined ? 1 : _ref$skew,\n        _ref$hoverDist = _ref.hoverDist,\n        hoverDist = _ref$hoverDist === undefined ? 10 : _ref$hoverDist,\n        _ref$hoverSizeInc = _ref.hoverSizeInc,\n        hoverSizeInc = _ref$hoverSizeInc === undefined ? 0.05 : _ref$hoverSizeInc,\n        _ref$hoverMaxSizeMult = _ref.hoverMaxSizeMultiplier,\n        hoverMaxSizeMultiplier = _ref$hoverMaxSizeMult === undefined ? 5 : _ref$hoverMaxSizeMult,\n        _ref$font = _ref.font,\n        font = _ref$font === undefined ? 'arial' : _ref$font,\n        _ref$fontSize = _ref.fontSize,\n        fontSize = _ref$fontSize === undefined ? 100 : _ref$fontSize,\n        _ref$topSpeed = _ref.topSpeed,\n        topSpeed = _ref$topSpeed === undefined ? 0.07 : _ref$topSpeed,\n        _ref$acceleration = _ref.acceleration,\n        acceleration = _ref$acceleration === undefined ? 0.01 : _ref$acceleration,\n        _ref$textAlign = _ref.textAlign,\n        textAlign = _ref$textAlign === undefined ? 'left' : _ref$textAlign,\n        _ref$textSizeMultipli = _ref.textSizeMultiplier,\n        textSizeMultiplier = _ref$textSizeMultipli === undefined ? 2 : _ref$textSizeMultipli,\n        _ref$textPositionMult = _ref.textPositionMultiplier,\n        textPositionMultiplier = _ref$textPositionMult === undefined ? 2 : _ref$textPositionMult,\n        _ref$brightness = _ref.brightness,\n        brightness = _ref$brightness === undefined ? 1 : _ref$brightness,\n        _ref$opacity = _ref.opacity,\n        opacity = _ref$opacity === undefined ? 1 : _ref$opacity;\n\n    _classCallCheck(this, Particles);\n\n    this.renderer = renderer;\n\n    this.bgColorTop = bgColorTop;\n    this.bgColorBottom = bgColorBottom;\n\n    this.numParticles = numParticles;\n    this.radius = radius;\n\n    // used to define star glinting\n    this.minSize = minSize;\n    this.maxSize = maxSize;\n    this.sizeRange = sizeRange;\n    this.sizeInc = sizeInc;\n    this.skew = skew; // skews the median size\n\n    // used to define mouse interaction animation\n    this.hoverDist = hoverDist;\n    this.hoverSizeInc = hoverSizeInc;\n    this.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier;\n\n    // use to define moving particles\n    this.font = font;\n    this.fontSize = fontSize;\n    this.topSpeed = topSpeed;\n    this.acceleration = acceleration;\n    this.textAlign = textAlign;\n    this.textSizeMultiplier = textSizeMultiplier;\n    this.textPositionMultiplier = textPositionMultiplier;\n\n    // use to define particle colours\n    this.brightness = brightness;\n    this.opacity = opacity;\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2;\n    this.windowHalfY = window.innerHeight / 2;\n\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    var tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles));\n    var tWidth = this.tWidth = tHeight;\n    this.numParticles = tWidth * tHeight;\n\n    this.positions = new Float32Array(this.numParticles * 3);\n\n    this.positionFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n      tWidth: tWidth,\n      tHeight: tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tDefaultPosition: { type: 't', value: 0 }, // default star positions\n        tText: { type: 't', value: 0 }, // texture holding text\n\n        topSpeed: { type: 'f', value: this.topSpeed }, // the top speed of stars\n        acceleration: { type: 'f', value: this.acceleration }, // the star particle acceleration\n\n        textPositionMultiplier: { type: 'f', value: this.textPositionMultiplier }\n      },\n      simulationVertexShader: __WEBPACK_IMPORTED_MODULE_3__shaders_positionSimulationShaders__[\"b\" /* positionSimulationVertexShader */],\n      simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_3__shaders_positionSimulationShaders__[\"a\" /* positionSimulationFragmentShader */]\n    });\n\n    this.positionFBO.setTextureUniform('tDefaultPosition', this.getPositions());\n\n    this.sizeFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n      tWidth: tWidth,\n      tHeight: tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tPosition: { type: 't', value: 0 },\n        tDefaultSize: { type: 't', value: 0 },\n\n        mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n\n        sizeRange: { type: 'f', value: this.sizeRange },\n        sizeInc: { type: 'f', value: this.sizeInc },\n\n        hoverDist: { type: 'f', value: this.hoverDist },\n        hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n        hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n      },\n      simulationVertexShader: __WEBPACK_IMPORTED_MODULE_4__shaders_sizeSimulationShaders__[\"b\" /* sizeSimulationVertexShader */],\n      simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_4__shaders_sizeSimulationShaders__[\"a\" /* sizeSimulationFragmentShader */]\n    });\n\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n\n    var uniforms = Object.assign({}, configUniforms, {\n      tDefaultPosition: { type: 't', value: this.positionFBO.simulationShader.uniforms.tDefaultPosition.value },\n      tText: { type: 't', value: 0 },\n      tPosition: { type: 't', value: this.positionFBO.targets[0] },\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      textSizeMultiplier: { type: 'f', value: this.textSizeMultiplier },\n\n      tColour: {\n        type: 't',\n        value: this.getColours()\n      }\n    });\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: __WEBPACK_IMPORTED_MODULE_5__shaders_shaders__[\"b\" /* vertexShader */],\n      fragmentShader: __WEBPACK_IMPORTED_MODULE_5__shaders_shaders__[\"a\" /* fragmentShader */],\n      blending: blending,\n      transparent: transparent,\n      depthTest: depthTest,\n      depthWrite: depthWrite\n    });\n\n    // set uv coords of particles in texture as positions\n    var geometry = new THREE.Geometry();\n\n    for (var i = 0; i < this.numParticles; i++) {\n      var vertex = new THREE.Vector3();\n      vertex.x = i % tWidth / tWidth;\n      vertex.y = Math.floor(i / tWidth) / tHeight;\n      geometry.vertices.push(vertex);\n    }\n\n    this.particles = new THREE.Points(geometry, this.material);\n    this.particles.frustumCulled = false;\n\n    this.text = '';\n\n    document.onkeydown = this.onTextInput.bind(this);\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n    document.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n  }\n\n  _createClass(Particles, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      this.windowHalfX = window.innerWidth / 2;\n      this.windowHalfY = window.innerHeight / 2;\n    }\n  }, {\n    key: 'onMouseMove',\n    value: function onMouseMove(event) {\n      var xMultiplier = this.cameraZ / (this.windowHalfY * 2.8);\n      var yMultiplier = this.cameraZ / (this.windowHalfY * 2.65);\n      var mouseX = event.clientX - this.windowHalfX;\n      var mouseY = this.windowHalfY - event.clientY;\n\n      this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0);\n    }\n  }, {\n    key: 'setTextTexture',\n    value: function setTextTexture(textCanvas) {\n      var textTexture = new THREE.Texture(textCanvas);\n      textTexture.minFilter = textTexture.magFilter = THREE.NearestFilter;\n      textTexture.needsUpdate = true;\n      textTexture.flipY = true;\n      this.positionFBO.simulationShader.uniforms.tText.value = this.material.uniforms.tText.value = textTexture;\n    }\n  }, {\n    key: 'onTextInput',\n    value: function onTextInput(_ref2) {\n      var _ref2$key = _ref2.key,\n          key = _ref2$key === undefined ? '' : _ref2$key;\n\n      if (key !== 'Backspace' && (key.length !== 1 || !key.match(/[a-z ]?/i))) {\n        return;\n      }\n\n      this.text = key === 'Backspace' ? this.text.slice(0, -1) : this.text + key;\n\n      this.updateTextTexture();\n    }\n  }, {\n    key: 'getPositions',\n    value: function getPositions() {\n      var vertices = new Float32Array(this.numParticles * 4);\n      for (var i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n        var vertice = this.calcPosition();\n\n        this.positions[i3] = vertices[i4] = vertice[0];\n        this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1];\n        this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2];\n\n        vertices[i4 + 3] = 0.0; // stores whether particle is representing text or not\n      }\n      return vertices;\n    }\n  }, {\n    key: 'calcPosition',\n    value: function calcPosition() {\n      var radius = this.radius;\n      var x = Math.random() - 0.5;\n      var y = Math.random() - 0.5;\n      var z = 0;\n      var d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n\n      return [x * d, y * d, z];\n    }\n  }, {\n    key: 'getSizes',\n    value: function getSizes() {\n      var sizes = new Float32Array(this.numParticles * 4);\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        sizes[i4 + 3] = this.calcSize();\n      }\n      return sizes;\n    }\n  }, {\n    key: 'calcSize',\n    value: function calcSize() {\n      var sizeRange = this.maxSize - this.minSize;\n      var size = this.minSize + sizeRange * Math.pow(Math.random(), this.skew);\n\n      return size;\n    }\n  }, {\n    key: 'getColours',\n    value: function getColours() {\n      var colours = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        var colour = this.calcColour();\n\n        colours[i4] = colour[0];\n        colours[i4 + 1] = colour[1];\n        colours[i4 + 2] = colour[2];\n        colours[i4 + 3] = colour[3];\n      }\n\n      return Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* createDataTexture */])({\n        data: colours,\n        tWidth: this.tWidth,\n        tHeight: this.tHeight,\n        format: this.positionFBO.format,\n        filterType: this.positionFBO.filterType\n      });\n    }\n  }, {\n    key: 'calcColour',\n    value: function calcColour() {\n      var _this = this;\n\n      var randomVal = Math.ceil(Math.random() * 10);\n\n      var getColor = function getColor(r, g, b, a) {\n        return [_this.brightness * r / 255, _this.brightness * g / 255, _this.brightness * b / 255, _this.opacity];\n      };\n\n      switch (randomVal) {\n        case 1:\n          return getColor(155, 176, 255);\n\n        case 2:\n          return getColor(170, 191, 255);\n\n        case 3:\n          return getColor(202, 215, 255);\n\n        case 4:\n          return getColor(248, 247, 255);\n\n        case 5:\n          return getColor(255, 244, 234);\n\n        case 6:\n          return getColor(255, 210, 161);\n\n        case 7:\n          return getColor(255, 204, 111);\n\n        default:\n          return getColor(255, 255, 255);\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      this.positionFBO.simulate();\n      this.sizeFBO.simulate();\n      this.sizeFBO.simulationShader.uniforms.tPosition.value = this.material.uniforms.tPosition.value = this.positionFBO.getCurrentFrame();\n      this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame();\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.particles;\n    }\n  }, {\n    key: 'setCameraZ',\n    value: function setCameraZ(newCameraZ) {\n      this.cameraZ = newCameraZ;\n    }\n  }, {\n    key: 'updateTextTexture',\n    value: function updateTextTexture() {\n      var textCanvas = document.createElement('canvas');\n      var canvasDepth = 1;\n\n      textCanvas.width = textCanvas.height = Math.sqrt(this.numParticles) * canvasDepth;\n\n      var canvasCenter = textCanvas.height / 2;\n      var ctx = textCanvas.getContext('2d', { alpha: false });\n\n      ctx.font = this.fontSize + 'px ' + __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\" /* fonts */][this.font];\n      ctx.fillStyle = 'white';\n      ctx.textAlign = this.textAlign;\n      ctx.fillText(this.text, this.textAlign === 'left' ? 0 : canvasCenter, canvasCenter + this.fontSize / 2, textCanvas.width);\n\n      this.setTextTexture(textCanvas);\n    }\n  }, {\n    key: 'updateColours',\n    value: function updateColours() {\n      this.material.uniforms.tColour.value = this.getColours();\n    }\n  }, {\n    key: 'updateSizes',\n    value: function updateSizes() {\n      this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange;\n      this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc;\n      this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n    }\n  }, {\n    key: 'updateParticleVars',\n    value: function updateParticleVars() {\n      this.material.uniforms.textSizeMultiplier.value = this.textSizeMultiplier;\n      this.positionFBO.simulationShader.uniforms.textPositionMultiplier.value = this.textPositionMultiplier;\n      this.positionFBO.simulationShader.uniforms.topSpeed.value = this.topSpeed;\n      this.positionFBO.simulationShader.uniforms.acceleration.value = this.acceleration;\n\n      this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist;\n      this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc;\n      this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier;\n    }\n  }, {\n    key: 'bgColorTop',\n    get: function get() {\n      return this._bgColorTop;\n    },\n    set: function set(newVal) {\n      this._bgColorTop = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }, {\n    key: 'bgColorBottom',\n    get: function get() {\n      return this._bgColorBottom;\n    },\n    set: function set(newVal) {\n      this._bgColorBottom = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }]);\n\n  return Particles;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Particles);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 14 */,\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return positionSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return positionSimulationVertexShader; });\n/* eslint-disable */\n\nvar positionSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\n\\tuniform sampler2D tDefaultPosition;\\n\\tuniform sampler2D tText;\\n\\n\\tuniform float topSpeed;\\n\\tuniform float acceleration;\\n\\tuniform float textPositionMultiplier;\\n\\n\\tvec3 setTopSpeed(vec3 speed, float topSpeed) {\\n\\t\\treturn vec3(\\n\\t\\t\\tspeed.x > topSpeed ? topSpeed : speed.x < -topSpeed ? -topSpeed : speed.x,\\n\\t\\t\\tspeed.y > topSpeed ? topSpeed : speed.y < -topSpeed ? -topSpeed : speed.y,\\n\\t\\t\\tspeed.z > topSpeed ? topSpeed : speed.z < -topSpeed ? -topSpeed : speed.z\\n\\t\\t);\\n\\t}\\n\\n\\tvec3 moveParticleToGoal(vec3 currPos, vec3 prevPos, vec3 goal) {\\n\\t\\tvec3 distanceToGoal = goal - currPos;\\n\\t\\tvec3 currVelocity = currPos - prevPos;\\n\\n\\t\\tvec3 calculatedAcceleration = normalize(distanceToGoal) * acceleration;\\n\\t\\tfloat currVelocityL = length(currVelocity);\\n\\t\\tfloat distanceToGoalL = length(distanceToGoal);\\n\\n\\t\\tif (distanceToGoalL > currVelocityL) {\\n\\t\\t\\tvec3 velocity = currVelocity + calculatedAcceleration;\\n\\n\\t\\t\\tvelocity = setTopSpeed(velocity, topSpeed);\\n\\n\\t\\t\\treturn currPos + velocity;\\n\\t\\t} else {\\n\\t\\t\\treturn goal;\\n\\t\\t}\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tvec3 defaultPos = texture2D(tDefaultPosition, vUv).xyz;\\n\\t\\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\\n\\t\\tvec3 position = texture2D(tCurr, vUv).xyz;\\n\\t\\tfloat textOpacity = texture2D(tText, vUv).r;\\n\\t\\tfloat isTextParticle = 0.0;\\n\\n\\t\\tif (prevPos == vec3(0.0, 0.0, 0.0)) {\\n\\t\\t\\tposition = defaultPos;\\n\\t\\t}\\n\\n\\t\\tif (textOpacity > 0.0) {\\n\\t\\t\\tposition = moveParticleToGoal(position, prevPos, vec3((vUv - 0.5) * textPositionMultiplier, 0.0));\\n\\n\\t\\t\\tisTextParticle = 1.0;\\n\\t\\t} else {\\n\\t\\t\\tposition = moveParticleToGoal(position, prevPos, defaultPos);\\n\\t\\t}\\n\\n\\t\\t// write new positions out\\n\\t\\tgl_FragColor = vec4(position, isTextParticle);\\n\\t}\\n\";\n\nvar positionSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return sizeSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sizeSimulationVertexShader; });\n/* eslint-disable */\n\nvar sizeSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tDefaultSize;\\n\\n\\tuniform vec3 mouse;\\n\\tuniform float sizeInc;\\n\\tuniform float sizeRange;\\n\\n\\tuniform float hoverDist;\\n\\tuniform float hoverSizeInc;\\n\\tuniform float hoverMaxSizeMultiplier;\\n\\n\\tfloat getSize() {\\n\\t\\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\\n\\t\\tfloat prevSize = texture2D(tPrev, vUv).w;\\n\\t\\tfloat size = texture2D(tCurr, vUv).w;\\n\\n\\t\\tif (size == 0.0) {\\n\\t\\t\\tsize = defaultSize;\\n\\t\\t} else if (prevSize == 0.0 || size == prevSize) {\\n\\t\\t\\tsize = rand(vUv) >= 0.5 ? size + sizeInc : size - sizeInc;\\n\\t\\t} else if (size < (defaultSize - sizeRange)) {\\n\\t\\t\\tsize += sizeInc;\\n\\t\\t} else if (size > (defaultSize + sizeRange)) {\\n\\t\\t\\tsize -= sizeInc;\\n\\t\\t} else {\\n\\t\\t\\tsize += size - prevSize;\\n\\t\\t}\\n\\n\\t\\tfloat dist = length(currPosition.xy - mouse.xy);\\n\\n\\t\\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\\n\\t\\t\\tsize += hoverSizeInc;\\n\\t\\t}\\n\\n\\t\\treturn size;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\t// write new size out\\n\\t\\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\\n\\t}\\n\";\n\nvar sizeSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return vertexShader; });\n/* eslint-disable */\n\nvar fragmentShader = \"\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D starImg;\\n\\tuniform sampler2D tColour;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\\n\\t\\tvec3 position = texture2D(tPosition, vUv).xyz;\\n\\t\\tvec4 colour = texture2D(tColour, vUv).rgba;\\n\\t\\tfloat isTextColor = texture2D(tPosition, vUv).a;\\n\\n\\t\\tgl_FragColor = colour;\\n\\t\\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\\n\\t}\\n\";\n\nvar vertexShader = \"\\n\\tuniform sampler2D tDefaultPosition;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tSize;\\n\\tuniform sampler2D tText;\\n\\n\\tuniform float sizeMultiplierForScreen;\\n\\tuniform float textSizeMultiplier;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvUv = position.xy;\\n\\t\\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\\n\\n\\t\\t// position saved as rgba / xyzw value in a texture object in memory\\n\\t\\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\\n\\t\\tvec3 position = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat distanceToTravel = length(goal - defaultPosition);\\n\\t\\tfloat distanceTravelled = length(position - defaultPosition);\\n\\t\\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\\n\\n\\t\\t// if distanceTravelled > 0.0 then this particle has moved from default position and therefore is a text star\\n\\t\\tfloat size = texture2D(tSize, vUv).a;\\n\\t\\tfloat textSize = size * size * textSizeMultiplier; // multiply star size against itself to create a size range when a text-star\\n\\t\\tsize = distanceTravelled > 0.0 ? mix(size, textSize, distanceTravelledRatio > 1.0 ? 1.0 : distanceTravelledRatio) : size;\\n\\n\\t\\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n\\t\\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\\n\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t}\\n\";\n\n\n\n/***/ })\n],[7]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js","export function getParameterByName (name, url) {\n  if (!url) {\n    url = window.location.href\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`)\n  const results = regex.exec(url)\n\n  if (!results) return null\n  if (!results[2]) return ''\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport function getZRatio () {\n  if (window.innerWidth > 1100) {\n    return 170\n  } else if (window.innerWidth > 700) {\n    return 100\n  } else if (window.innerWidth > 500) {\n    return 85\n  } else {\n    return 50\n  }\n}\n\nexport function createDataTexture ({\n  data,\n  tWidth,\n  tHeight,\n  format,\n  filterType\n}) {\n  const dataTexture = new THREE.DataTexture(\n    data,\n    tWidth,\n    tHeight,\n    format,\n    THREE.FloatType\n  )\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType\n  dataTexture.needsUpdate = true\n  dataTexture.flipY = false\n\n  return dataTexture\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","const fonts = {\n  arial: 'Arial, Helvetica, sans-serif',\n  arialBlack: '\"Arial Black\", Gadget, sans-serif',\n  comicSans: '\"Comic Sans MS\", cursive, sans-serif',\n  georgia: 'Georgia, serif',\n  impact: 'Impact, Charcoal, sans-serif',\n  lucida: '\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif',\n  palatino: '\"Palatino Linotype\", \"Book Antiqua\", Palatino, serif',\n  times: '\"Times New Roman\", Times, serif',\n  tahoma: 'Tahoma, Geneva, sans-serif',\n  trebuchet: '\"Trebuchet MS\", Helvetica, sans-serif',\n  verdena: 'Verdana, Geneva, sans-serif'\n}\n\nexport default fonts\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/constants/fonts.js","import DatGUI from 'dat-gui'\nimport { fonts } from '../constants'\n\nexport default class Controls {\n  constructor ({\n    particles,\n    scene\n  } = {}) {\n    this.gui = new DatGUI.GUI()\n\n    this.addBgControls(particles)\n    this.addTextControls(particles)\n    this.addMouseControls(particles)\n    this.addSizeControls(particles)\n    this.addColourStrengthControls(particles)\n    this.addOpacityControls(particles)\n  }\n\n  addBgControls (particles) {\n    this.gui\n      .addColor(particles, 'bgColorTop')\n\n    this.gui\n      .addColor(particles, 'bgColorBottom')\n  }\n\n  addTextControls (particles) {\n    this.gui\n      .add(particles, 'font', Object.keys(fonts))\n      .onFinishChange(() => {\n        particles.updateTextTexture()\n      })\n\n    this.gui\n      .add(particles, 'fontSize')\n      .min(10)\n      .max(200)\n      .step(5)\n      .onFinishChange(() => {\n        particles.updateTextTexture()\n      })\n\n    this.gui\n      .add(particles, 'textAlign', ['left', 'center'])\n      .onFinishChange(() => {\n        particles.updateTextTexture()\n      })\n\n    this.gui\n      .add(particles, 'textSizeMultiplier')\n      .min(1)\n      .max(1000)\n      .step(10)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'topSpeed')\n      .min(0.1)\n      .max(10)\n      .step(0.1)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'acceleration')\n      .min(0.00001)\n      .max(0.01)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addMouseControls (particles) {\n    this.gui\n      .add(particles, 'hoverDist')\n      .min(0)\n      .max(0.5)\n      .step(0.01)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverSizeInc')\n      .min(0)\n      .max(0.03)\n      .step(0.001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverMaxSizeMultiplier')\n      .min(1)\n      .max(3)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addSizeControls (particles) {\n    this.gui\n      .add(particles, 'minSize')\n      .min(0.01)\n      .max(0.04)\n      .step(0.001)\n      .onFinishChange(() => {\n        if (particles.minSize > particles.maxSize) {\n          particles.minSize = particles.maxSize\n        }\n\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'maxSize')\n      .min(0.01)\n      .max(0.04)\n      .step(0.001)\n      .onFinishChange(() => {\n        if (particles.maxSize < particles.minSize) {\n          particles.maxSize = particles.minSize\n        }\n\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeInc')\n      .min(0.00001)\n      .max(0.0002)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeRange')\n      .min(0)\n      .max(0.02)\n      .step(0.0005)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'skew')\n      .min(1)\n      .max(100)\n      .step(1)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n  }\n\n  addColourStrengthControls (particles) {\n    this.gui\n      .add(particles, 'brightness')\n      .min(0.1)\n      .max(3)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n\n  addOpacityControls (particles) {\n    this.gui\n      .add(particles, 'opacity')\n      .min(0.1)\n      .max(1.5)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/controls.js","import isWebglEnabled from 'detector-webgl'\nimport Stats from 'stats.js'\nimport Camera from './io/camera'\nimport Controls from './io/controls'\nimport Renderer from './io/renderer'\nimport Scene from './objects/scene'\nimport Particles from './objects/particles'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (isWebglEnabled) {\n    const container = document.getElementById('stars-simulation-container')\n    const renderer = new Renderer({ container })\n    const scene = new Scene()\n    const particles = new Particles({\n      renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 40000 : 120000,\n      radius: 4,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 35,\n      hoverDist: 0.04,\n      hoverSizeInc: 0.002,\n      hoverMaxSizeMultiplier: 1.7,\n      font: 'arial',\n      fontSize: 80,\n      topSpeed: 1,\n      acceleration: 0.0001,\n      textAlign: 'left',\n      textSizeMultiplier: 600,\n      textPositionMultiplier: 5.5,\n      brightness: 0.9,\n      opacity: 1\n    })\n    const camera = new Camera({\n      particles,\n      position: {\n        x: 0,\n        y: -0.001,\n        z: 4.5\n      }\n    })\n    const stats = new Stats()\n\n    const init = () => {\n      new Controls({ particles }) // eslint-disable-line\n\n      stats.showPanel(0)\n      document.body.appendChild(stats.dom)\n\n      scene.add(particles.get())\n    }\n\n    const animate = () => {\n      requestAnimationFrame(animate) // eslint-disable-line\n      render()\n    }\n\n    const render = () => {\n      stats.begin()\n\n      particles.update()\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      })\n\n      stats.end()\n    }\n\n    init()\n    animate()\n  } else {\n    const info = document.getElementById('info')\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.'\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { getZRatio } from '../utils'\n\nexport default class Camera {\n  constructor ({\n    particles,\n    fov = 400,\n    aspectRatio = window.innerWidth / window.innerHeight,\n    near = 0.1,\n    far = 2000,\n    position = {\n      x: 0, y: 0, z: 0\n    },\n    up = [0, 0, 1]\n  }) {\n    this.particles = particles\n    this.particles.setCameraZ(position.z)\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far)\n    this.up = up\n\n    this.setPosition(position)\n    this.setUp(...this.up)\n    this.setLookAt()\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.camera.aspect = WIDTH / HEIGHT\n    this.setZ(window.innerHeight / getZRatio())\n    this.camera.updateProjectionMatrix()\n  }\n\n  setUp (x, y, z) {\n    this.camera.up.set(x, y, z)\n  }\n\n  setPosition ({\n    x = this.camera.position.x,\n    y = this.camera.position.y,\n    z = this.camera.position.z\n  }) {\n    this.setX(x)\n    this.setY(y)\n    this.setZ(z)\n  }\n\n  setX (x) {\n    this.camera.position.x = x\n    this.setLookAt()\n  }\n\n  setY (y) {\n    this.camera.position.y = y\n    this.setLookAt()\n  }\n\n  setZ (z) {\n    this.camera.position.z = z\n    this.setLookAt()\n    this.setUp(0, 0, 1)\n    this.particles.setCameraZ(z)\n  }\n\n  setLookAt () {\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0))\n  }\n\n  get () {\n    return this.camera\n  }\n\n  getPosition () {\n    return this.camera.position\n  }\n\n  getZ () {\n    return this.camera.position.z\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/camera.js","export default class Renderer {\n  constructor ({\n    alpha = true,\n    pixelRatio = window.devicePixelRatio,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    container\n  }) {\n    this.renderer = new THREE.WebGLRenderer({ alpha })\n    const gl = this.renderer.context\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.setPixelRatio(pixelRatio)\n\n    this.setSize(width, height)\n\n    container.appendChild(this.getDomElement())\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  getDomElement () {\n    return this.renderer.domElement\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.renderer.setSize(WIDTH, HEIGHT)\n  }\n\n  setPixelRatio (pixelRatio) {\n    this.renderer.setPixelRatio(pixelRatio)\n  }\n\n  setSize (w, h) {\n    this.renderer.setSize(w, h)\n  }\n\n  render ({\n    scene,\n    camera,\n    renderTarget = null,\n    force = false\n  } = {}) {\n    this.renderer.render(scene, camera, renderTarget, force)\n  }\n\n  get () {\n    return this.renderer\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/renderer.js","export default class Canvas {\n  constructor () {\n    this.scene = new THREE.Scene()\n  }\n\n  add (obj) {\n    this.scene.add(obj)\n  }\n\n  remove (obj) {\n    this.scene.remove(obj)\n  }\n\n  get () {\n    return this.scene\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/scene.js","import FBO from 'three.js-fbo'\nimport { createDataTexture } from '../utils'\nimport { fonts } from '../constants'\nimport { positionSimulationVertexShader, positionSimulationFragmentShader } from '../shaders/positionSimulationShaders'\nimport { sizeSimulationVertexShader, sizeSimulationFragmentShader } from '../shaders/sizeSimulationShaders'\nimport { vertexShader, fragmentShader } from '../shaders/shaders'\n\nexport default class Particles {\n  constructor ({\n    configUniforms = {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: (window.innerHeight * window.devicePixelRatio) / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    },\n    blending = THREE.AdditiveBlending,\n    transparent = true,\n    depthTest = true,\n    depthWrite = false,\n\n    renderer,\n\n    // background colors\n    bgColorTop = '#000f23',\n    bgColorBottom = '#00071b',\n\n    numParticles = 10000,\n    radius = 100, // radius of outer particle\n\n    // used to define and animate sizes\n    minSize = 1,\n    maxSize = 3,\n    sizeRange = 0.5, // the amount the size is allowed to fluxuate in animation\n    sizeInc = 0.01, // the amount the size is increased / decreased per frame\n    skew = 1,\n\n    // used to define raycasting boundries\n    hoverDist = 10,\n    hoverSizeInc = 0.05,\n    hoverMaxSizeMultiplier = 5,\n\n    // values to use when stars form text\n    font = 'arial',\n    fontSize = 100,\n    topSpeed = 0.07,\n    acceleration = 0.01,\n    textAlign = 'left',\n    textSizeMultiplier = 2,\n    textPositionMultiplier = 2,\n\n    // particle colours\n    brightness = 1,\n    opacity = 1\n  }) {\n    this.renderer = renderer\n\n    this.bgColorTop = bgColorTop\n    this.bgColorBottom = bgColorBottom\n\n    this.numParticles = numParticles\n    this.radius = radius\n\n    // used to define star glinting\n    this.minSize = minSize\n    this.maxSize = maxSize\n    this.sizeRange = sizeRange\n    this.sizeInc = sizeInc\n    this.skew = skew // skews the median size\n\n    // used to define mouse interaction animation\n    this.hoverDist = hoverDist\n    this.hoverSizeInc = hoverSizeInc\n    this.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier\n\n    // use to define moving particles\n    this.font = font\n    this.fontSize = fontSize\n    this.topSpeed = topSpeed\n    this.acceleration = acceleration\n    this.textAlign = textAlign\n    this.textSizeMultiplier = textSizeMultiplier\n    this.textPositionMultiplier = textPositionMultiplier\n\n    // use to define particle colours\n    this.brightness = brightness\n    this.opacity = opacity\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    const tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles))\n    const tWidth = this.tWidth = tHeight\n    this.numParticles = tWidth * tHeight\n\n    this.positions = new Float32Array(this.numParticles * 3)\n\n    this.positionFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tDefaultPosition: { type: 't', value: 0 }, // default star positions\n        tText: { type: 't', value: 0 }, // texture holding text\n\n        topSpeed: { type: 'f', value: this.topSpeed }, // the top speed of stars\n        acceleration: { type: 'f', value: this.acceleration }, // the star particle acceleration\n\n        textPositionMultiplier: { type: 'f', value: this.textPositionMultiplier }\n      },\n      simulationVertexShader: positionSimulationVertexShader,\n      simulationFragmentShader: positionSimulationFragmentShader\n    })\n\n    this.positionFBO.setTextureUniform('tDefaultPosition', this.getPositions())\n\n    this.sizeFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tPosition: { type: 't', value: 0 },\n        tDefaultSize: { type: 't', value: 0 },\n\n        mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n\n        sizeRange: { type: 'f', value: this.sizeRange },\n        sizeInc: { type: 'f', value: this.sizeInc },\n\n        hoverDist: { type: 'f', value: this.hoverDist },\n        hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n        hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n      },\n      simulationVertexShader: sizeSimulationVertexShader,\n      simulationFragmentShader: sizeSimulationFragmentShader\n    })\n\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n\n    const uniforms = Object.assign({}, configUniforms, {\n      tDefaultPosition: { type: 't', value: this.positionFBO.simulationShader.uniforms.tDefaultPosition.value },\n      tText: { type: 't', value: 0 },\n      tPosition: { type: 't', value: this.positionFBO.targets[0] },\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      textSizeMultiplier: { type: 'f', value: this.textSizeMultiplier },\n\n      tColour: {\n        type: 't',\n        value: this.getColours()\n      }\n    })\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader,\n      fragmentShader,\n      blending,\n      transparent,\n      depthTest,\n      depthWrite\n    })\n\n    // set uv coords of particles in texture as positions\n    const geometry = new THREE.Geometry()\n\n    for (let i = 0; i < this.numParticles; i++) {\n      const vertex = new THREE.Vector3()\n      vertex.x = (i % tWidth) / tWidth\n      vertex.y = Math.floor(i / tWidth) / tHeight\n      geometry.vertices.push(vertex)\n    }\n\n    this.particles = new THREE.Points(geometry, this.material)\n    this.particles.frustumCulled = false\n\n    this.text = ''\n\n    document.onkeydown = this.onTextInput.bind(this)\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n    document.addEventListener('mousemove', this.onMouseMove.bind(this), false)\n  }\n\n  get bgColorTop () {\n    return this._bgColorTop\n  }\n\n  set bgColorTop (newVal) {\n    this._bgColorTop = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  get bgColorBottom () {\n    return this._bgColorBottom\n  }\n\n  set bgColorBottom (newVal) {\n    this._bgColorBottom = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  onWindowResize () {\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n  }\n\n  onMouseMove (event) {\n    const xMultiplier = this.cameraZ / (this.windowHalfY * 2.8)\n    const yMultiplier = this.cameraZ / (this.windowHalfY * 2.65)\n    const mouseX = event.clientX - this.windowHalfX\n    const mouseY = this.windowHalfY - event.clientY\n\n    this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0)\n  }\n\n  setTextTexture (textCanvas) {\n    const textTexture = new THREE.Texture(textCanvas)\n    textTexture.minFilter = textTexture.magFilter = THREE.NearestFilter\n    textTexture.needsUpdate = true\n    textTexture.flipY = true\n    this.positionFBO.simulationShader.uniforms.tText.value = this.material.uniforms.tText.value = textTexture\n  }\n\n  onTextInput ({\n    key = ''\n  }) {\n    if (key !== 'Backspace' && (key.length !== 1 || !key.match(/[a-z ]?/i))) {\n      return\n    }\n\n    this.text = key === 'Backspace' ? this.text.slice(0, -1) : this.text + key\n\n    this.updateTextTexture()\n  }\n\n  getPositions () {\n    const vertices = new Float32Array(this.numParticles * 4)\n    for (let i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n      const vertice = this.calcPosition()\n\n      this.positions[i3] = vertices[i4] = vertice[0]\n      this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1]\n      this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2]\n\n      vertices[i4 + 3] = 0.0 // stores whether particle is representing text or not\n    }\n    return vertices\n  }\n\n  calcPosition () {\n    const radius = this.radius\n    const x = Math.random() - 0.5\n    const y = Math.random() - 0.5\n    const z = 0\n    const d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)))\n\n    return [\n      x * d,\n      y * d,\n      z\n    ]\n  }\n\n  getSizes () {\n    const sizes = new Float32Array(this.numParticles * 4)\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      sizes[i4 + 3] = this.calcSize()\n    }\n    return sizes\n  }\n\n  calcSize () {\n    const sizeRange = this.maxSize - this.minSize\n    const size = this.minSize + (sizeRange * Math.pow(Math.random(), this.skew))\n\n    return size\n  }\n\n  getColours () {\n    const colours = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      const colour = this.calcColour()\n\n      colours[i4] = colour[0]\n      colours[i4 + 1] = colour[1]\n      colours[i4 + 2] = colour[2]\n      colours[i4 + 3] = colour[3]\n    }\n\n    return createDataTexture({\n      data: colours,\n      tWidth: this.tWidth,\n      tHeight: this.tHeight,\n      format: this.positionFBO.format,\n      filterType: this.positionFBO.filterType\n    })\n  }\n\n  calcColour () {\n    const randomVal = Math.ceil(Math.random() * 10)\n\n    const getColor = (r, g, b, a) => [\n      this.brightness * r / 255,\n      this.brightness * g / 255,\n      this.brightness * b / 255,\n      this.opacity\n    ]\n\n    switch (randomVal) {\n      case 1:\n        return getColor(155, 176, 255)\n\n      case 2:\n        return getColor(170, 191, 255)\n\n      case 3:\n        return getColor(202, 215, 255)\n\n      case 4:\n        return getColor(248, 247, 255)\n\n      case 5:\n        return getColor(255, 244, 234)\n\n      case 6:\n        return getColor(255, 210, 161)\n\n      case 7:\n        return getColor(255, 204, 111)\n\n      default:\n        return getColor(255, 255, 255)\n    }\n  }\n\n  update () {\n    this.positionFBO.simulate()\n    this.sizeFBO.simulate()\n    this.sizeFBO.simulationShader.uniforms.tPosition.value = this.material.uniforms.tPosition.value = this.positionFBO.getCurrentFrame()\n    this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame()\n  }\n\n  get () {\n    return this.particles\n  }\n\n  setCameraZ (newCameraZ) {\n    this.cameraZ = newCameraZ\n  }\n\n  updateTextTexture () {\n    const textCanvas = document.createElement('canvas')\n    const canvasDepth = 1\n\n    textCanvas.width = textCanvas.height = Math.sqrt(this.numParticles) * canvasDepth\n\n    const canvasCenter = (textCanvas.height / 2)\n    const ctx = textCanvas.getContext('2d', { alpha: false })\n\n    ctx.font = `${this.fontSize}px ${fonts[this.font]}`\n    ctx.fillStyle = 'white'\n    ctx.textAlign = this.textAlign\n    ctx.fillText(this.text, this.textAlign === 'left' ? 0 : canvasCenter, canvasCenter + (this.fontSize / 2), textCanvas.width)\n\n    this.setTextTexture(textCanvas)\n  }\n\n  updateColours () {\n    this.material.uniforms.tColour.value = this.getColours()\n  }\n\n  updateSizes () {\n    this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange\n    this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n  }\n\n  updateParticleVars () {\n    this.material.uniforms.textSizeMultiplier.value = this.textSizeMultiplier\n    this.positionFBO.simulationShader.uniforms.textPositionMultiplier.value = this.textPositionMultiplier\n    this.positionFBO.simulationShader.uniforms.topSpeed.value = this.topSpeed\n    this.positionFBO.simulationShader.uniforms.acceleration.value = this.acceleration\n\n    this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist\n    this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc\n    this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/particles.js","/* eslint-disable */\n\nconst positionSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\n\tuniform sampler2D tDefaultPosition;\n\tuniform sampler2D tText;\n\n\tuniform float topSpeed;\n\tuniform float acceleration;\n\tuniform float textPositionMultiplier;\n\n\tvec3 setTopSpeed(vec3 speed, float topSpeed) {\n\t\treturn vec3(\n\t\t\tspeed.x > topSpeed ? topSpeed : speed.x < -topSpeed ? -topSpeed : speed.x,\n\t\t\tspeed.y > topSpeed ? topSpeed : speed.y < -topSpeed ? -topSpeed : speed.y,\n\t\t\tspeed.z > topSpeed ? topSpeed : speed.z < -topSpeed ? -topSpeed : speed.z\n\t\t);\n\t}\n\n\tvec3 moveParticleToGoal(vec3 currPos, vec3 prevPos, vec3 goal) {\n\t\tvec3 distanceToGoal = goal - currPos;\n\t\tvec3 currVelocity = currPos - prevPos;\n\n\t\tvec3 calculatedAcceleration = normalize(distanceToGoal) * acceleration;\n\t\tfloat currVelocityL = length(currVelocity);\n\t\tfloat distanceToGoalL = length(distanceToGoal);\n\n\t\tif (distanceToGoalL > currVelocityL) {\n\t\t\tvec3 velocity = currVelocity + calculatedAcceleration;\n\n\t\t\tvelocity = setTopSpeed(velocity, topSpeed);\n\n\t\t\treturn currPos + velocity;\n\t\t} else {\n\t\t\treturn goal;\n\t\t}\n\t}\n\n\tvoid main() {\n\t\tvec3 defaultPos = texture2D(tDefaultPosition, vUv).xyz;\n\t\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\n\t\tvec3 position = texture2D(tCurr, vUv).xyz;\n\t\tfloat textOpacity = texture2D(tText, vUv).r;\n\t\tfloat isTextParticle = 0.0;\n\n\t\tif (prevPos == vec3(0.0, 0.0, 0.0)) {\n\t\t\tposition = defaultPos;\n\t\t}\n\n\t\tif (textOpacity > 0.0) {\n\t\t\tposition = moveParticleToGoal(position, prevPos, vec3((vUv - 0.5) * textPositionMultiplier, 0.0));\n\n\t\t\tisTextParticle = 1.0;\n\t\t} else {\n\t\t\tposition = moveParticleToGoal(position, prevPos, defaultPos);\n\t\t}\n\n\t\t// write new positions out\n\t\tgl_FragColor = vec4(position, isTextParticle);\n\t}\n`\n\nconst positionSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  positionSimulationFragmentShader,\n  positionSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/positionSimulationShaders.js","/* eslint-disable */\n\nconst sizeSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tDefaultSize;\n\n\tuniform vec3 mouse;\n\tuniform float sizeInc;\n\tuniform float sizeRange;\n\n\tuniform float hoverDist;\n\tuniform float hoverSizeInc;\n\tuniform float hoverMaxSizeMultiplier;\n\n\tfloat getSize() {\n\t\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\n\t\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\n\t\tfloat prevSize = texture2D(tPrev, vUv).w;\n\t\tfloat size = texture2D(tCurr, vUv).w;\n\n\t\tif (size == 0.0) {\n\t\t\tsize = defaultSize;\n\t\t} else if (prevSize == 0.0 || size == prevSize) {\n\t\t\tsize = rand(vUv) >= 0.5 ? size + sizeInc : size - sizeInc;\n\t\t} else if (size < (defaultSize - sizeRange)) {\n\t\t\tsize += sizeInc;\n\t\t} else if (size > (defaultSize + sizeRange)) {\n\t\t\tsize -= sizeInc;\n\t\t} else {\n\t\t\tsize += size - prevSize;\n\t\t}\n\n\t\tfloat dist = length(currPosition.xy - mouse.xy);\n\n\t\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\n\t\t\tsize += hoverSizeInc;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\tvoid main() {\n\t\t// write new size out\n\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\n\t}\n`\n\nconst sizeSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  sizeSimulationFragmentShader,\n  sizeSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/sizeSimulationShaders.js","/* eslint-disable */\n\nconst fragmentShader = `\n\tuniform sampler2D tPosition;\n\tuniform sampler2D starImg;\n\tuniform sampler2D tColour;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\n\t\tvec3 position = texture2D(tPosition, vUv).xyz;\n\t\tvec4 colour = texture2D(tColour, vUv).rgba;\n\t\tfloat isTextColor = texture2D(tPosition, vUv).a;\n\n\t\tgl_FragColor = colour;\n\t\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\n\t}\n`\n\nconst vertexShader = `\n\tuniform sampler2D tDefaultPosition;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tSize;\n\tuniform sampler2D tText;\n\n\tuniform float sizeMultiplierForScreen;\n\tuniform float textSizeMultiplier;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvUv = position.xy;\n\t\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\n\n\t\t// position saved as rgba / xyzw value in a texture object in memory\n\t\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\n\t\tvec3 position = texture2D(tPosition, vUv).xyz;\n\t\tfloat distanceToTravel = length(goal - defaultPosition);\n\t\tfloat distanceTravelled = length(position - defaultPosition);\n\t\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\n\n\t\t// if distanceTravelled > 0.0 then this particle has moved from default position and therefore is a text star\n\t\tfloat size = texture2D(tSize, vUv).a;\n\t\tfloat textSize = size * size * textSizeMultiplier; // multiply star size against itself to create a size range when a text-star\n\t\tsize = distanceTravelled > 0.0 ? mix(size, textSize, distanceTravelledRatio > 1.0 ? 1.0 : distanceTravelledRatio) : size;\n\n\t\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\t\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t}\n`\n\nexport {\n  fragmentShader,\n  vertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/shaders.js"],"sourceRoot":""}