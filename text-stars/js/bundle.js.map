{"version":3,"sources":["webpack:///js/bundle.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/io/gui.js","webpack:///./src/js/main.js","webpack:///./src/js/io/camera.js","webpack:///./src/js/io/renderer.js","webpack:///./src/js/objects/scene.js","webpack:///./src/js/objects/particles.js","webpack:///./src/js/shaders/positionSimulationShaders.js","webpack:///./src/js/shaders/sizeSimulationShaders.js","webpack:///./src/js/shaders/shaders.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","THREE","getZRatio","window","innerWidth","createDataTexture","_ref","data","tWidth","tHeight","format","filterType","dataTexture","DataTexture","FloatType","minFilter","magFilter","needsUpdate","flipY","call","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","detector_webgl","detector_webgl_default","n","io_camera","dat_gui","dat_gui_default","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","gui_GUI","GUI","arguments","undefined","particles","scene","this","gui","a","addBgControls","addTextControls","addMouseControls","addSizeControls","addColourStrengthControls","addOpacityControls","addColor","add","min","max","step","onFinishChange","updateParticleVars","minSize","maxSize","updateSizes","updateColours","io_gui","io_renderer","objects_scene","objects_particles","document","addEventListener","container","getElementById","renderer","numParticles","radius","sizeRange","sizeInc","skew","hoverDist","hoverSizeInc","hoverMaxSizeMultiplier","topSpeed","acceleration","textSizeMultiplier","textPositionMultiplier","brightness","opacity","camera","position","x","y","z","render","update","get","animate","requestAnimationFrame","innerHTML","_toConsumableArray","arr","Array","isArray","arr2","from","__WEBPACK_IMPORTED_MODULE_0__utils__","Camera","_ref$fov","fov","_ref$aspectRatio","aspectRatio","innerHeight","_ref$near","near","_ref$far","far","_ref$position","_ref$up","up","setCameraZ","PerspectiveCamera","setPosition","setUp","apply","setLookAt","WIDTH","HEIGHT","aspect","setZ","updateProjectionMatrix","set","_ref2","_ref2$x","_ref2$y","_ref2$z","setX","setY","lookAt","Vector3","Renderer","_ref$alpha","alpha","_ref$pixelRatio","pixelRatio","devicePixelRatio","_ref$width","width","_ref$height","height","WebGLRenderer","gl","context","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setPixelRatio","setSize","appendChild","getDomElement","onWindowResize","bind","domElement","w","h","_ref2$renderTarget","renderTarget","_ref2$force","force","Canvas","Scene","obj","remove","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__shaders_positionSimulationShaders__","__WEBPACK_IMPORTED_MODULE_3__shaders_sizeSimulationShaders__","__WEBPACK_IMPORTED_MODULE_4__shaders_shaders__","Particles","_ref$configUniforms","configUniforms","color","Color","sizeMultiplierForScreen","starImg","TextureLoader","load","_ref$blending","blending","AdditiveBlending","_ref$transparent","transparent","_ref$depthTest","depthTest","_ref$depthWrite","depthWrite","_ref$bgColorTop","bgColorTop","_ref$bgColorBottom","bgColorBottom","_ref$numParticles","_ref$radius","_ref$minSize","_ref$maxSize","_ref$sizeRange","_ref$sizeInc","_ref$skew","_ref$hoverDist","_ref$hoverSizeInc","_ref$hoverMaxSizeMult","_ref$topSpeed","_ref$acceleration","_ref$textSizeMultipli","_ref$textPositionMult","_ref$brightness","_ref$opacity","windowHalfX","windowHalfY","Math","ceil","sqrt","positions","Float32Array","positionFBO","uniforms","tDefaultPosition","type","tText","simulationVertexShader","simulationFragmentShader","setTextureUniform","getPositions","sizeFBO","tPosition","tDefaultSize","mouse","getSizes","assign","simulationShader","targets","tSize","tColour","getColours","material","ShaderMaterial","vertexShader","fragmentShader","geometry","Geometry","vertex","floor","vertices","push","Points","frustumCulled","text","onkeydown","onTextInput","onMouseMove","event","xMultiplier","cameraZ","yMultiplier","mouseX","clientX","mouseY","clientY","textCanvas","textTexture","Texture","NearestFilter","_ref2$key","createElement","match","slice","canvasCenterV","ctx","getContext","font","fillStyle","fillText","setTextTexture","i3","i4","vertice","calcPosition","random","d","pow","sizes","calcSize","colours","colour","calcColour","_this","randomVal","getColor","r","g","b","simulate","getCurrentFrame","newCameraZ","_bgColorTop","newVal","getElementsByTagName","style","background","_bgColorBottom","positionSimulationFragmentShader","positionSimulationVertexShader","sizeSimulationFragmentShader","sizeSimulationVertexShader"],"mappings":"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","file":"js/bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* unused harmony export getParameterByName */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getZRatio;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createDataTexture;\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(url);\n\n  if (!results) return null;\n  if (!results[2]) return '';\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getZRatio() {\n  if (window.innerWidth > 1100) {\n    return 170;\n  } else if (window.innerWidth > 700) {\n    return 100;\n  } else if (window.innerWidth > 500) {\n    return 85;\n  } else {\n    return 50;\n  }\n}\n\nfunction createDataTexture(_ref) {\n  var data = _ref.data,\n      tWidth = _ref.tWidth,\n      tHeight = _ref.tHeight,\n      format = _ref.format,\n      filterType = _ref.filterType;\n\n  var dataTexture = new THREE.DataTexture(data, tWidth, tHeight, format, THREE.FloatType);\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType;\n  dataTexture.needsUpdate = true;\n  dataTexture.flipY = false;\n\n  return dataTexture;\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/detector-webgl/index.js\nvar detector_webgl = __webpack_require__(1);\nvar detector_webgl_default = /*#__PURE__*/__webpack_require__.n(detector_webgl);\n\n// EXTERNAL MODULE: ./src/js/io/camera.js\nvar io_camera = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./node_modules/dat-gui/index.js\nvar dat_gui = __webpack_require__(3);\nvar dat_gui_default = /*#__PURE__*/__webpack_require__.n(dat_gui);\n\n// CONCATENATED MODULE: ./src/js/io/gui.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar gui_GUI = function () {\n  function GUI() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        particles = _ref.particles,\n        scene = _ref.scene;\n\n    _classCallCheck(this, GUI);\n\n    this.gui = new dat_gui_default.a.GUI();\n\n    this.addBgControls(particles);\n    this.addTextControls(particles);\n    this.addMouseControls(particles);\n    this.addSizeControls(particles);\n    this.addColourStrengthControls(particles);\n    this.addOpacityControls(particles);\n  }\n\n  _createClass(GUI, [{\n    key: 'addBgControls',\n    value: function addBgControls(particles) {\n      this.gui.addColor(particles, 'bgColorTop');\n\n      this.gui.addColor(particles, 'bgColorBottom');\n    }\n  }, {\n    key: 'addTextControls',\n    value: function addTextControls(particles) {\n      this.gui.add(particles, 'textSizeMultiplier').min(1).max(1000).step(10).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'textPositionMultiplier').min(1).max(10).step(0.1).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'topSpeed').min(0.1).max(10).step(0.1).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'acceleration').min(0.00001).max(0.01).step(0.00001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addMouseControls',\n    value: function addMouseControls(particles) {\n      this.gui.add(particles, 'hoverDist').min(0).max(0.5).step(0.01).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverSizeInc').min(0).max(0.03).step(0.001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverMaxSizeMultiplier').min(1).max(3).step(0.05).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addSizeControls',\n    value: function addSizeControls(particles) {\n      this.gui.add(particles, 'minSize').min(0.01).max(0.04).step(0.001).onFinishChange(function () {\n        if (particles.minSize > particles.maxSize) {\n          particles.minSize = particles.maxSize;\n        }\n\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'maxSize').min(0.01).max(0.04).step(0.001).onFinishChange(function () {\n        if (particles.maxSize < particles.minSize) {\n          particles.maxSize = particles.minSize;\n        }\n\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeInc').min(0.00001).max(0.0002).step(0.00001).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeRange').min(0).max(0.02).step(0.0005).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'skew').min(1).max(100).step(1).onFinishChange(function () {\n        particles.updateSizes();\n      });\n    }\n  }, {\n    key: 'addColourStrengthControls',\n    value: function addColourStrengthControls(particles) {\n      this.gui.add(particles, 'brightness').min(0.1).max(3).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }, {\n    key: 'addOpacityControls',\n    value: function addOpacityControls(particles) {\n      this.gui.add(particles, 'opacity').min(0.1).max(1.5).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }]);\n\n  return GUI;\n}();\n\n/* harmony default export */ var io_gui = (gui_GUI);\n// EXTERNAL MODULE: ./src/js/io/renderer.js\nvar io_renderer = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./src/js/objects/scene.js\nvar objects_scene = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./src/js/objects/particles.js\nvar objects_particles = __webpack_require__(11);\n\n// CONCATENATED MODULE: ./src/js/main.js\n\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (detector_webgl_default.a) {\n    var container = document.getElementById('stars-simulation-container');\n    var renderer = new io_renderer[\"a\" /* default */]({ container: container });\n    var scene = new objects_scene[\"a\" /* default */]();\n    var particles = new objects_particles[\"a\" /* default */]({\n      renderer: renderer,\n      numParticles: 150000,\n      radius: 4,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 35,\n      hoverDist: 0.04,\n      hoverSizeInc: 0.002,\n      hoverMaxSizeMultiplier: 1.3,\n      topSpeed: 1,\n      acceleration: 0.0001,\n      textSizeMultiplier: 690,\n      textPositionMultiplier: 5.5,\n      brightness: 0.9,\n      opacity: 1\n    });\n    var camera = new io_camera[\"a\" /* default */]({\n      particles: particles,\n      position: {\n        x: 0,\n        y: -0.001,\n        z: 4.5\n      }\n    });\n\n    var gui = new io_gui({ particles: particles }); // eslint-disable-line\n\n    var init = function init() {\n      scene.add(particles.get());\n    };\n\n    var animate = function animate() {\n      requestAnimationFrame(animate); // eslint-disable-line\n      render();\n    };\n\n    var render = function render() {\n      particles.update();\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      });\n    };\n\n    init();\n    animate();\n  } else {\n    var info = document.getElementById('info');\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.';\n  }\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(2);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar Camera = function () {\n  function Camera(_ref) {\n    var particles = _ref.particles,\n        _ref$fov = _ref.fov,\n        fov = _ref$fov === undefined ? 400 : _ref$fov,\n        _ref$aspectRatio = _ref.aspectRatio,\n        aspectRatio = _ref$aspectRatio === undefined ? window.innerWidth / window.innerHeight : _ref$aspectRatio,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 0.1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 2000 : _ref$far,\n        _ref$position = _ref.position,\n        position = _ref$position === undefined ? {\n      x: 0, y: 0, z: 0\n    } : _ref$position,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 0, 1] : _ref$up;\n\n    _classCallCheck(this, Camera);\n\n    this.particles = particles;\n    this.particles.setCameraZ(position.z);\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n    this.up = up;\n\n    this.setPosition(position);\n    this.setUp.apply(this, _toConsumableArray(this.up));\n    this.setLookAt();\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Camera, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.camera.aspect = WIDTH / HEIGHT;\n      this.setZ(window.innerHeight / Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* getZRatio */])());\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: 'setUp',\n    value: function setUp(x, y, z) {\n      this.camera.up.set(x, y, z);\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(_ref2) {\n      var _ref2$x = _ref2.x,\n          x = _ref2$x === undefined ? this.camera.position.x : _ref2$x,\n          _ref2$y = _ref2.y,\n          y = _ref2$y === undefined ? this.camera.position.y : _ref2$y,\n          _ref2$z = _ref2.z,\n          z = _ref2$z === undefined ? this.camera.position.z : _ref2$z;\n\n      this.setX(x);\n      this.setY(y);\n      this.setZ(z);\n    }\n  }, {\n    key: 'setX',\n    value: function setX(x) {\n      this.camera.position.x = x;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setY',\n    value: function setY(y) {\n      this.camera.position.y = y;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setZ',\n    value: function setZ(z) {\n      this.camera.position.z = z;\n      this.setLookAt();\n      this.setUp(0, 0, 1);\n      this.particles.setCameraZ(z);\n    }\n  }, {\n    key: 'setLookAt',\n    value: function setLookAt() {\n      this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.camera;\n    }\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return this.camera.position;\n    }\n  }, {\n    key: 'getZ',\n    value: function getZ() {\n      return this.camera.position.z;\n    }\n  }]);\n\n  return Camera;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n  function Renderer(_ref) {\n    var _ref$alpha = _ref.alpha,\n        alpha = _ref$alpha === undefined ? true : _ref$alpha,\n        _ref$pixelRatio = _ref.pixelRatio,\n        pixelRatio = _ref$pixelRatio === undefined ? window.devicePixelRatio : _ref$pixelRatio,\n        _ref$width = _ref.width,\n        width = _ref$width === undefined ? window.innerWidth : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === undefined ? window.innerHeight : _ref$height,\n        container = _ref.container;\n\n    _classCallCheck(this, Renderer);\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: alpha });\n    var gl = this.renderer.context;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    this.setPixelRatio(pixelRatio);\n\n    this.setSize(width, height);\n\n    container.appendChild(this.getDomElement());\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Renderer, [{\n    key: 'getDomElement',\n    value: function getDomElement() {\n      return this.renderer.domElement;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.renderer.setSize(WIDTH, HEIGHT);\n    }\n  }, {\n    key: 'setPixelRatio',\n    value: function setPixelRatio(pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio);\n    }\n  }, {\n    key: 'setSize',\n    value: function setSize(w, h) {\n      this.renderer.setSize(w, h);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          scene = _ref2.scene,\n          camera = _ref2.camera,\n          _ref2$renderTarget = _ref2.renderTarget,\n          renderTarget = _ref2$renderTarget === undefined ? null : _ref2$renderTarget,\n          _ref2$force = _ref2.force,\n          force = _ref2$force === undefined ? false : _ref2$force;\n\n      this.renderer.render(scene, camera, renderTarget, force);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.renderer;\n    }\n  }]);\n\n  return Renderer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderer);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Canvas = function () {\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    this.scene = new THREE.Scene();\n  }\n\n  _createClass(Canvas, [{\n    key: \"add\",\n    value: function add(obj) {\n      this.scene.add(obj);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(obj) {\n      this.scene.remove(obj);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.scene;\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Canvas);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaders_positionSimulationShaders__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaders_sizeSimulationShaders__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shaders_shaders__ = __webpack_require__(15);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\nvar Particles = function () {\n  function Particles(_ref) {\n    var _ref$configUniforms = _ref.configUniforms,\n        configUniforms = _ref$configUniforms === undefined ? {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: window.innerHeight * window.devicePixelRatio / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    } : _ref$configUniforms,\n        _ref$blending = _ref.blending,\n        blending = _ref$blending === undefined ? THREE.AdditiveBlending : _ref$blending,\n        _ref$transparent = _ref.transparent,\n        transparent = _ref$transparent === undefined ? true : _ref$transparent,\n        _ref$depthTest = _ref.depthTest,\n        depthTest = _ref$depthTest === undefined ? true : _ref$depthTest,\n        _ref$depthWrite = _ref.depthWrite,\n        depthWrite = _ref$depthWrite === undefined ? false : _ref$depthWrite,\n        renderer = _ref.renderer,\n        _ref$bgColorTop = _ref.bgColorTop,\n        bgColorTop = _ref$bgColorTop === undefined ? '#000f23' : _ref$bgColorTop,\n        _ref$bgColorBottom = _ref.bgColorBottom,\n        bgColorBottom = _ref$bgColorBottom === undefined ? '#00071b' : _ref$bgColorBottom,\n        _ref$numParticles = _ref.numParticles,\n        numParticles = _ref$numParticles === undefined ? 10000 : _ref$numParticles,\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? 100 : _ref$radius,\n        _ref$minSize = _ref.minSize,\n        minSize = _ref$minSize === undefined ? 1 : _ref$minSize,\n        _ref$maxSize = _ref.maxSize,\n        maxSize = _ref$maxSize === undefined ? 3 : _ref$maxSize,\n        _ref$sizeRange = _ref.sizeRange,\n        sizeRange = _ref$sizeRange === undefined ? 0.5 : _ref$sizeRange,\n        _ref$sizeInc = _ref.sizeInc,\n        sizeInc = _ref$sizeInc === undefined ? 0.01 : _ref$sizeInc,\n        _ref$skew = _ref.skew,\n        skew = _ref$skew === undefined ? 1 : _ref$skew,\n        _ref$hoverDist = _ref.hoverDist,\n        hoverDist = _ref$hoverDist === undefined ? 10 : _ref$hoverDist,\n        _ref$hoverSizeInc = _ref.hoverSizeInc,\n        hoverSizeInc = _ref$hoverSizeInc === undefined ? 0.05 : _ref$hoverSizeInc,\n        _ref$hoverMaxSizeMult = _ref.hoverMaxSizeMultiplier,\n        hoverMaxSizeMultiplier = _ref$hoverMaxSizeMult === undefined ? 5 : _ref$hoverMaxSizeMult,\n        _ref$topSpeed = _ref.topSpeed,\n        topSpeed = _ref$topSpeed === undefined ? 0.07 : _ref$topSpeed,\n        _ref$acceleration = _ref.acceleration,\n        acceleration = _ref$acceleration === undefined ? 0.01 : _ref$acceleration,\n        _ref$textSizeMultipli = _ref.textSizeMultiplier,\n        textSizeMultiplier = _ref$textSizeMultipli === undefined ? 2 : _ref$textSizeMultipli,\n        _ref$textPositionMult = _ref.textPositionMultiplier,\n        textPositionMultiplier = _ref$textPositionMult === undefined ? 2 : _ref$textPositionMult,\n        _ref$brightness = _ref.brightness,\n        brightness = _ref$brightness === undefined ? 1 : _ref$brightness,\n        _ref$opacity = _ref.opacity,\n        opacity = _ref$opacity === undefined ? 1 : _ref$opacity;\n\n    _classCallCheck(this, Particles);\n\n    this.renderer = renderer;\n\n    this.bgColorTop = bgColorTop;\n    this.bgColorBottom = bgColorBottom;\n\n    this.numParticles = numParticles;\n    this.radius = radius;\n\n    // used to define star glinting\n    this.minSize = minSize;\n    this.maxSize = maxSize;\n    this.sizeRange = sizeRange;\n    this.sizeInc = sizeInc;\n    this.skew = skew; // skews the median size\n\n    // used to define mouse interaction animation\n    this.hoverDist = hoverDist;\n    this.hoverSizeInc = hoverSizeInc;\n    this.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier;\n\n    // use to define moving particles\n    this.topSpeed = topSpeed;\n    this.acceleration = acceleration;\n    this.textSizeMultiplier = textSizeMultiplier;\n    this.textPositionMultiplier = textPositionMultiplier;\n\n    // use to define particle colours\n    this.brightness = brightness;\n    this.opacity = opacity;\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2;\n    this.windowHalfY = window.innerHeight / 2;\n\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    var tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles));\n    var tWidth = this.tWidth = tHeight;\n    this.numParticles = tWidth * tHeight;\n\n    this.positions = new Float32Array(this.numParticles * 3);\n\n    this.positionFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n      tWidth: tWidth,\n      tHeight: tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tDefaultPosition: { type: 't', value: 0 }, // default star positions\n        tText: { type: 't', value: 0 }, // texture holding text\n\n        topSpeed: { type: 'f', value: this.topSpeed }, // the top speed of stars\n        acceleration: { type: 'f', value: this.acceleration }, // the star particle acceleration\n\n        textPositionMultiplier: { type: 'f', value: this.textPositionMultiplier }\n      },\n      simulationVertexShader: __WEBPACK_IMPORTED_MODULE_2__shaders_positionSimulationShaders__[\"b\" /* positionSimulationVertexShader */],\n      simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_2__shaders_positionSimulationShaders__[\"a\" /* positionSimulationFragmentShader */]\n    });\n\n    this.positionFBO.setTextureUniform('tDefaultPosition', this.getPositions());\n\n    this.sizeFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n      tWidth: tWidth,\n      tHeight: tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tPosition: { type: 't', value: 0 },\n        tDefaultSize: { type: 't', value: 0 },\n\n        mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n\n        sizeRange: { type: 'f', value: this.sizeRange },\n        sizeInc: { type: 'f', value: this.sizeInc },\n\n        hoverDist: { type: 'f', value: this.hoverDist },\n        hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n        hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n      },\n      simulationVertexShader: __WEBPACK_IMPORTED_MODULE_3__shaders_sizeSimulationShaders__[\"b\" /* sizeSimulationVertexShader */],\n      simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_3__shaders_sizeSimulationShaders__[\"a\" /* sizeSimulationFragmentShader */]\n    });\n\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n\n    var uniforms = Object.assign({}, configUniforms, {\n      tDefaultPosition: { type: 't', value: this.positionFBO.simulationShader.uniforms.tDefaultPosition.value },\n      tText: { type: 't', value: 0 },\n      tPosition: { type: 't', value: this.positionFBO.targets[0] },\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      textSizeMultiplier: { type: 'f', value: this.textSizeMultiplier },\n\n      tColour: {\n        type: 't',\n        value: this.getColours()\n      }\n    });\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: __WEBPACK_IMPORTED_MODULE_4__shaders_shaders__[\"b\" /* vertexShader */],\n      fragmentShader: __WEBPACK_IMPORTED_MODULE_4__shaders_shaders__[\"a\" /* fragmentShader */],\n      blending: blending,\n      transparent: transparent,\n      depthTest: depthTest,\n      depthWrite: depthWrite\n    });\n\n    // set uv coords of particles in texture as positions\n    var geometry = new THREE.Geometry();\n\n    for (var i = 0; i < this.numParticles; i++) {\n      var vertex = new THREE.Vector3();\n      vertex.x = i % tWidth / tWidth;\n      vertex.y = Math.floor(i / tWidth) / tHeight;\n      geometry.vertices.push(vertex);\n    }\n\n    this.particles = new THREE.Points(geometry, this.material);\n    this.particles.frustumCulled = false;\n\n    this.text = '';\n\n    document.onkeydown = this.onTextInput.bind(this);\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n    document.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n  }\n\n  _createClass(Particles, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      this.windowHalfX = window.innerWidth / 2;\n      this.windowHalfY = window.innerHeight / 2;\n    }\n  }, {\n    key: 'onMouseMove',\n    value: function onMouseMove(event) {\n      var xMultiplier = this.cameraZ / (this.windowHalfY * 2.8);\n      var yMultiplier = this.cameraZ / (this.windowHalfY * 2.65);\n      var mouseX = event.clientX - this.windowHalfX;\n      var mouseY = this.windowHalfY - event.clientY;\n\n      this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0);\n    }\n  }, {\n    key: 'setTextTexture',\n    value: function setTextTexture(textCanvas) {\n      var textTexture = new THREE.Texture(textCanvas);\n      textTexture.minFilter = textTexture.magFilter = THREE.NearestFilter;\n      textTexture.needsUpdate = true;\n      textTexture.flipY = true;\n      this.positionFBO.simulationShader.uniforms.tText.value = this.material.uniforms.tText.value = textTexture;\n    }\n  }, {\n    key: 'onTextInput',\n    value: function onTextInput(_ref2) {\n      var _ref2$key = _ref2.key,\n          key = _ref2$key === undefined ? '' : _ref2$key;\n\n      var canvasDepth = 1;\n      var textCanvas = document.createElement('canvas');\n\n      if (key !== 'Backspace' && (key.length !== 1 || !key.match(/[a-z ]?/i))) {\n        return;\n      }\n\n      this.text = key === 'Backspace' ? this.text.slice(0, -1) : this.text + key;\n\n      textCanvas.width = textCanvas.height = Math.sqrt(this.numParticles) * canvasDepth;\n\n      var canvasCenterV = textCanvas.height / 2;\n      var ctx = textCanvas.getContext('2d', {\n        alpha: false\n      });\n\n      ctx.font = '80px bold serif';\n      ctx.fillStyle = 'white';\n      ctx.fillText(this.text, 0, canvasCenterV, textCanvas.width);\n\n      this.setTextTexture(textCanvas);\n    }\n  }, {\n    key: 'getPositions',\n    value: function getPositions() {\n      var vertices = new Float32Array(this.numParticles * 4);\n      for (var i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n        var vertice = this.calcPosition();\n\n        this.positions[i3] = vertices[i4] = vertice[0];\n        this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1];\n        this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2];\n\n        vertices[i4 + 3] = 0.0; // stores whether particle is representing text or not\n      }\n      return vertices;\n    }\n  }, {\n    key: 'calcPosition',\n    value: function calcPosition() {\n      var radius = this.radius;\n      var x = Math.random() - 0.5;\n      var y = Math.random() - 0.5;\n      var z = 0;\n      var d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n\n      return [x * d, y * d, z];\n    }\n  }, {\n    key: 'getSizes',\n    value: function getSizes() {\n      var sizes = new Float32Array(this.numParticles * 4);\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        sizes[i4 + 3] = this.calcSize();\n      }\n      return sizes;\n    }\n  }, {\n    key: 'calcSize',\n    value: function calcSize() {\n      var sizeRange = this.maxSize - this.minSize;\n      var size = this.minSize + sizeRange * Math.pow(Math.random(), this.skew);\n\n      return size;\n    }\n  }, {\n    key: 'getColours',\n    value: function getColours() {\n      var colours = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        var colour = this.calcColour();\n\n        colours[i4] = colour[0];\n        colours[i4 + 1] = colour[1];\n        colours[i4 + 2] = colour[2];\n        colours[i4 + 3] = colour[3];\n      }\n\n      return Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* createDataTexture */])({\n        data: colours,\n        tWidth: this.tWidth,\n        tHeight: this.tHeight,\n        format: this.positionFBO.format,\n        filterType: this.positionFBO.filterType\n      });\n    }\n  }, {\n    key: 'calcColour',\n    value: function calcColour() {\n      var _this = this;\n\n      var randomVal = Math.ceil(Math.random() * 10);\n\n      var getColor = function getColor(r, g, b, a) {\n        return [_this.brightness * r / 255, _this.brightness * g / 255, _this.brightness * b / 255, _this.opacity];\n      };\n\n      switch (randomVal) {\n        case 1:\n          return getColor(155, 176, 255);\n\n        case 2:\n          return getColor(170, 191, 255);\n\n        case 3:\n          return getColor(202, 215, 255);\n\n        case 4:\n          return getColor(248, 247, 255);\n\n        case 5:\n          return getColor(255, 244, 234);\n\n        case 6:\n          return getColor(255, 210, 161);\n\n        case 7:\n          return getColor(255, 204, 111);\n\n        default:\n          return getColor(255, 255, 255);\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      this.positionFBO.simulate();\n      this.sizeFBO.simulate();\n      this.sizeFBO.simulationShader.uniforms.tPosition.value = this.material.uniforms.tPosition.value = this.positionFBO.getCurrentFrame();\n      this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame();\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.particles;\n    }\n  }, {\n    key: 'setCameraZ',\n    value: function setCameraZ(newCameraZ) {\n      this.cameraZ = newCameraZ;\n    }\n  }, {\n    key: 'updateColours',\n    value: function updateColours() {\n      this.material.uniforms.tColour.value = this.getColours();\n    }\n  }, {\n    key: 'updateSizes',\n    value: function updateSizes() {\n      this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange;\n      this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc;\n      this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n    }\n  }, {\n    key: 'updateParticleVars',\n    value: function updateParticleVars() {\n      this.material.uniforms.textSizeMultiplier.value = this.textSizeMultiplier;\n      this.positionFBO.simulationShader.uniforms.textPositionMultiplier.value = this.textPositionMultiplier;\n      this.positionFBO.simulationShader.uniforms.topSpeed.value = this.topSpeed;\n      this.positionFBO.simulationShader.uniforms.acceleration.value = this.acceleration;\n\n      this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist;\n      this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc;\n      this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier;\n    }\n  }, {\n    key: 'bgColorTop',\n    get: function get() {\n      return this._bgColorTop;\n    },\n    set: function set(newVal) {\n      this._bgColorTop = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }, {\n    key: 'bgColorBottom',\n    get: function get() {\n      return this._bgColorBottom;\n    },\n    set: function set(newVal) {\n      this._bgColorBottom = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }]);\n\n  return Particles;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Particles);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 12 */,\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return positionSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return positionSimulationVertexShader; });\n/* eslint-disable */\n\nvar positionSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\n\\tuniform sampler2D tDefaultPosition;\\n\\tuniform sampler2D tText;\\n\\n\\tuniform float topSpeed;\\n\\tuniform float acceleration;\\n\\tuniform float textPositionMultiplier;\\n\\n\\tvec3 setTopSpeed(vec3 speed, float topSpeed) {\\n\\t\\treturn vec3(\\n\\t\\t\\tspeed.x > topSpeed ? topSpeed : speed.x < -topSpeed ? -topSpeed : speed.x,\\n\\t\\t\\tspeed.y > topSpeed ? topSpeed : speed.y < -topSpeed ? -topSpeed : speed.y,\\n\\t\\t\\tspeed.z > topSpeed ? topSpeed : speed.z < -topSpeed ? -topSpeed : speed.z\\n\\t\\t);\\n\\t}\\n\\n\\tvec3 moveParticleToGoal(vec3 currPos, vec3 prevPos, vec3 goal) {\\n\\t\\tvec3 distanceToGoal = goal - currPos;\\n\\t\\tvec3 currVelocity = currPos - prevPos;\\n\\n\\t\\tvec3 calculatedAcceleration = normalize(distanceToGoal) * acceleration;\\n\\t\\tfloat currVelocityL = length(currVelocity);\\n\\t\\tfloat distanceToGoalL = length(distanceToGoal);\\n\\n\\t\\tif (distanceToGoalL > currVelocityL) {\\n\\t\\t\\tvec3 velocity = currVelocity + calculatedAcceleration;\\n\\n\\t\\t\\tvelocity = setTopSpeed(velocity, topSpeed);\\n\\n\\t\\t\\treturn currPos + velocity;\\n\\t\\t} else {\\n\\t\\t\\treturn goal;\\n\\t\\t}\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tvec3 defaultPos = texture2D(tDefaultPosition, vUv).xyz;\\n\\t\\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\\n\\t\\tvec3 position = texture2D(tCurr, vUv).xyz;\\n\\t\\tfloat textOpacity = texture2D(tText, vUv).r;\\n\\t\\tfloat isTextParticle = 0.0;\\n\\n\\t\\tif (prevPos == vec3(0.0, 0.0, 0.0)) {\\n\\t\\t\\tposition = defaultPos;\\n\\t\\t}\\n\\n\\t\\tif (textOpacity > 0.0) {\\n\\t\\t\\tposition = moveParticleToGoal(position, prevPos, vec3((vUv - 0.5) * textPositionMultiplier, 0.0));\\n\\n\\t\\t\\tisTextParticle = 1.0;\\n\\t\\t} else {\\n\\t\\t\\tposition = moveParticleToGoal(position, prevPos, defaultPos);\\n\\t\\t}\\n\\n\\t\\t// write new positions out\\n\\t\\tgl_FragColor = vec4(position, isTextParticle);\\n\\t}\\n\";\n\nvar positionSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return sizeSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sizeSimulationVertexShader; });\n/* eslint-disable */\n\nvar sizeSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tDefaultSize;\\n\\n\\tuniform vec3 mouse;\\n\\tuniform float sizeInc;\\n\\tuniform float sizeRange;\\n\\n\\tuniform float hoverDist;\\n\\tuniform float hoverSizeInc;\\n\\tuniform float hoverMaxSizeMultiplier;\\n\\n\\tfloat getSize() {\\n\\t\\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\\n\\t\\tfloat prevSize = texture2D(tPrev, vUv).w;\\n\\t\\tfloat size = texture2D(tCurr, vUv).w;\\n\\n\\t\\tif (size == 0.0) {\\n\\t\\t\\tsize = defaultSize;\\n\\t\\t} else if (prevSize == 0.0 || size == prevSize) {\\n\\t\\t\\tsize = rand(vUv) >= 0.5 ? size + sizeInc : size - sizeInc;\\n\\t\\t} else if (size < (defaultSize - sizeRange)) {\\n\\t\\t\\tsize += sizeInc;\\n\\t\\t} else if (size > (defaultSize + sizeRange)) {\\n\\t\\t\\tsize -= sizeInc;\\n\\t\\t} else {\\n\\t\\t\\tsize += size - prevSize;\\n\\t\\t}\\n\\n\\t\\tfloat dist = length(currPosition.xy - mouse.xy);\\n\\n\\t\\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\\n\\t\\t\\tsize += hoverSizeInc;\\n\\t\\t}\\n\\n\\t\\treturn size;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\t// write new size out\\n\\t\\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\\n\\t}\\n\";\n\nvar sizeSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return vertexShader; });\n/* eslint-disable */\n\nvar fragmentShader = \"\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D starImg;\\n\\tuniform sampler2D tColour;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\\n\\t\\tvec3 position = texture2D(tPosition, vUv).xyz;\\n\\t\\tvec4 colour = texture2D(tColour, vUv).rgba;\\n\\t\\tfloat isTextColor = texture2D(tPosition, vUv).a;\\n\\n\\t\\tgl_FragColor = colour;\\n\\t\\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\\n\\t}\\n\";\n\nvar vertexShader = \"\\n\\tuniform sampler2D tDefaultPosition;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tSize;\\n\\tuniform sampler2D tText;\\n\\n\\tuniform float sizeMultiplierForScreen;\\n\\tuniform float textSizeMultiplier;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvUv = position.xy;\\n\\t\\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\\n\\n\\t\\t// position saved as rgba / xyzw value in a texture object in memory\\n\\t\\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\\n\\t\\tvec3 position = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat distanceToTravel = length(goal - defaultPosition);\\n\\t\\tfloat distanceTravelled = length(position - defaultPosition);\\n\\t\\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\\n\\n\\t\\t// if distanceTravelled > 0.0 then this particle has moved from default position and therefore is a text star\\n\\t\\tfloat size = texture2D(tSize, vUv).a;\\n\\t\\tfloat textSize = size * size * textSizeMultiplier; // multiply star size against itself to create size range\\n\\t\\tsize = distanceTravelled > 0.0 ? mix(size, textSize, distanceTravelledRatio > 1.0 ? 1.0 : distanceTravelledRatio) : size;\\n\\n\\t\\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n\\t\\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\\n\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t}\\n\";\n\n\n\n/***/ })\n],[5]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js","export function getParameterByName (name, url) {\n  if (!url) {\n    url = window.location.href\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`)\n  const results = regex.exec(url)\n\n  if (!results) return null\n  if (!results[2]) return ''\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport function getZRatio () {\n  if (window.innerWidth > 1100) {\n    return 170\n  } else if (window.innerWidth > 700) {\n    return 100\n  } else if (window.innerWidth > 500) {\n    return 85\n  } else {\n    return 50\n  }\n}\n\nexport function createDataTexture ({\n  data,\n  tWidth,\n  tHeight,\n  format,\n  filterType\n}) {\n  const dataTexture = new THREE.DataTexture(\n    data,\n    tWidth,\n    tHeight,\n    format,\n    THREE.FloatType\n  )\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType\n  dataTexture.needsUpdate = true\n  dataTexture.flipY = false\n\n  return dataTexture\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","import DatGUI from 'dat-gui'\n\nexport default class GUI {\n  constructor ({\n    particles,\n    scene\n  } = {}) {\n    this.gui = new DatGUI.GUI()\n\n    this.addBgControls(particles)\n    this.addTextControls(particles)\n    this.addMouseControls(particles)\n    this.addSizeControls(particles)\n    this.addColourStrengthControls(particles)\n    this.addOpacityControls(particles)\n  }\n\n  addBgControls (particles) {\n    this.gui\n      .addColor(particles, 'bgColorTop')\n\n    this.gui\n      .addColor(particles, 'bgColorBottom')\n  }\n\n  addTextControls (particles) {\n    this.gui\n      .add(particles, 'textSizeMultiplier')\n      .min(1)\n      .max(1000)\n      .step(10)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'textPositionMultiplier')\n      .min(1)\n      .max(10)\n      .step(0.1)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'topSpeed')\n      .min(0.1)\n      .max(10)\n      .step(0.1)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'acceleration')\n      .min(0.00001)\n      .max(0.01)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addMouseControls (particles) {\n    this.gui\n      .add(particles, 'hoverDist')\n      .min(0)\n      .max(0.5)\n      .step(0.01)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverSizeInc')\n      .min(0)\n      .max(0.03)\n      .step(0.001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverMaxSizeMultiplier')\n      .min(1)\n      .max(3)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addSizeControls (particles) {\n    this.gui\n      .add(particles, 'minSize')\n      .min(0.01)\n      .max(0.04)\n      .step(0.001)\n      .onFinishChange(() => {\n        if (particles.minSize > particles.maxSize) {\n          particles.minSize = particles.maxSize\n        }\n\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'maxSize')\n      .min(0.01)\n      .max(0.04)\n      .step(0.001)\n      .onFinishChange(() => {\n        if (particles.maxSize < particles.minSize) {\n          particles.maxSize = particles.minSize\n        }\n\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeInc')\n      .min(0.00001)\n      .max(0.0002)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeRange')\n      .min(0)\n      .max(0.02)\n      .step(0.0005)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'skew')\n      .min(1)\n      .max(100)\n      .step(1)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n  }\n\n  addColourStrengthControls (particles) {\n    this.gui\n      .add(particles, 'brightness')\n      .min(0.1)\n      .max(3)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n\n  addOpacityControls (particles) {\n    this.gui\n      .add(particles, 'opacity')\n      .min(0.1)\n      .max(1.5)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/gui.js","import isWebglEnabled from 'detector-webgl'\n\nimport Camera from './io/camera'\nimport GUI from './io/gui'\nimport Renderer from './io/renderer'\nimport Scene from './objects/scene'\nimport Particles from './objects/particles'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (isWebglEnabled) {\n    const container = document.getElementById('stars-simulation-container')\n    const renderer = new Renderer({ container })\n    const scene = new Scene()\n    const particles = new Particles({\n      renderer,\n      numParticles: 150000,\n      radius: 4,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 35,\n      hoverDist: 0.04,\n      hoverSizeInc: 0.002,\n      hoverMaxSizeMultiplier: 1.3,\n      topSpeed: 1,\n      acceleration: 0.0001,\n      textSizeMultiplier: 690,\n      textPositionMultiplier: 5.5,\n      brightness: 0.9,\n      opacity: 1\n    })\n    const camera = new Camera({\n      particles,\n      position: {\n        x: 0,\n        y: -0.001,\n        z: 4.5\n      }\n    })\n\n    const gui = new GUI({ particles }) // eslint-disable-line\n\n    const init = () => {\n      scene.add(particles.get())\n    }\n\n    const animate = () => {\n      requestAnimationFrame(animate) // eslint-disable-line\n      render()\n    }\n\n    const render = () => {\n      particles.update()\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      })\n    }\n\n    init()\n    animate()\n  } else {\n    const info = document.getElementById('info')\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.'\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { getZRatio } from '../utils'\n\nexport default class Camera {\n  constructor ({\n    particles,\n    fov = 400,\n    aspectRatio = window.innerWidth / window.innerHeight,\n    near = 0.1,\n    far = 2000,\n    position = {\n      x: 0, y: 0, z: 0\n    },\n    up = [0, 0, 1]\n  }) {\n    this.particles = particles\n    this.particles.setCameraZ(position.z)\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far)\n    this.up = up\n\n    this.setPosition(position)\n    this.setUp(...this.up)\n    this.setLookAt()\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.camera.aspect = WIDTH / HEIGHT\n    this.setZ(window.innerHeight / getZRatio())\n    this.camera.updateProjectionMatrix()\n  }\n\n  setUp (x, y, z) {\n    this.camera.up.set(x, y, z)\n  }\n\n  setPosition ({\n    x = this.camera.position.x,\n    y = this.camera.position.y,\n    z = this.camera.position.z\n  }) {\n    this.setX(x)\n    this.setY(y)\n    this.setZ(z)\n  }\n\n  setX (x) {\n    this.camera.position.x = x\n    this.setLookAt()\n  }\n\n  setY (y) {\n    this.camera.position.y = y\n    this.setLookAt()\n  }\n\n  setZ (z) {\n    this.camera.position.z = z\n    this.setLookAt()\n    this.setUp(0, 0, 1)\n    this.particles.setCameraZ(z)\n  }\n\n  setLookAt () {\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0))\n  }\n\n  get () {\n    return this.camera\n  }\n\n  getPosition () {\n    return this.camera.position\n  }\n\n  getZ () {\n    return this.camera.position.z\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/camera.js","export default class Renderer {\n  constructor ({\n    alpha = true,\n    pixelRatio = window.devicePixelRatio,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    container\n  }) {\n    this.renderer = new THREE.WebGLRenderer({ alpha })\n    const gl = this.renderer.context\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.setPixelRatio(pixelRatio)\n\n    this.setSize(width, height)\n\n    container.appendChild(this.getDomElement())\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  getDomElement () {\n    return this.renderer.domElement\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.renderer.setSize(WIDTH, HEIGHT)\n  }\n\n  setPixelRatio (pixelRatio) {\n    this.renderer.setPixelRatio(pixelRatio)\n  }\n\n  setSize (w, h) {\n    this.renderer.setSize(w, h)\n  }\n\n  render ({\n    scene,\n    camera,\n    renderTarget = null,\n    force = false\n  } = {}) {\n    this.renderer.render(scene, camera, renderTarget, force)\n  }\n\n  get () {\n    return this.renderer\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/renderer.js","export default class Canvas {\n  constructor () {\n    this.scene = new THREE.Scene()\n  }\n\n  add (obj) {\n    this.scene.add(obj)\n  }\n\n  remove (obj) {\n    this.scene.remove(obj)\n  }\n\n  get () {\n    return this.scene\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/scene.js","import FBO from 'three.js-fbo'\nimport { createDataTexture } from '../utils'\nimport { positionSimulationVertexShader, positionSimulationFragmentShader } from '../shaders/positionSimulationShaders'\nimport { sizeSimulationVertexShader, sizeSimulationFragmentShader } from '../shaders/sizeSimulationShaders'\nimport { vertexShader, fragmentShader } from '../shaders/shaders'\n\nexport default class Particles {\n  constructor ({\n    configUniforms = {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: (window.innerHeight * window.devicePixelRatio) / 2 },\n      starImg: { value: new THREE.TextureLoader().load('images/star.png') }\n    },\n    blending = THREE.AdditiveBlending,\n    transparent = true,\n    depthTest = true,\n    depthWrite = false,\n\n    renderer,\n\n    // background colors\n    bgColorTop = '#000f23',\n    bgColorBottom = '#00071b',\n\n    numParticles = 10000,\n    radius = 100, // radius of outer particle\n\n    // used to define and animate sizes\n    minSize = 1,\n    maxSize = 3,\n    sizeRange = 0.5, // the amount the size is allowed to fluxuate in animation\n    sizeInc = 0.01, // the amount the size is increased / decreased per frame\n    skew = 1,\n\n    // used to define raycasting boundries\n    hoverDist = 10,\n    hoverSizeInc = 0.05,\n    hoverMaxSizeMultiplier = 5,\n\n    // values to use when stars form text\n    topSpeed = 0.07,\n    acceleration = 0.01,\n    textSizeMultiplier = 2,\n    textPositionMultiplier = 2,\n\n    // particle colours\n    brightness = 1,\n    opacity = 1\n  }) {\n    this.renderer = renderer\n\n    this.bgColorTop = bgColorTop\n    this.bgColorBottom = bgColorBottom\n\n    this.numParticles = numParticles\n    this.radius = radius\n\n    // used to define star glinting\n    this.minSize = minSize\n    this.maxSize = maxSize\n    this.sizeRange = sizeRange\n    this.sizeInc = sizeInc\n    this.skew = skew // skews the median size\n\n    // used to define mouse interaction animation\n    this.hoverDist = hoverDist\n    this.hoverSizeInc = hoverSizeInc\n    this.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier\n\n    // use to define moving particles\n    this.topSpeed = topSpeed\n    this.acceleration = acceleration\n    this.textSizeMultiplier = textSizeMultiplier\n    this.textPositionMultiplier = textPositionMultiplier\n\n    // use to define particle colours\n    this.brightness = brightness\n    this.opacity = opacity\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    const tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles))\n    const tWidth = this.tWidth = tHeight\n    this.numParticles = tWidth * tHeight\n\n    this.positions = new Float32Array(this.numParticles * 3)\n\n    this.positionFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tDefaultPosition: { type: 't', value: 0 }, // default star positions\n        tText: { type: 't', value: 0 }, // texture holding text\n\n        topSpeed: { type: 'f', value: this.topSpeed }, // the top speed of stars\n        acceleration: { type: 'f', value: this.acceleration }, // the star particle acceleration\n\n        textPositionMultiplier: { type: 'f', value: this.textPositionMultiplier }\n      },\n      simulationVertexShader: positionSimulationVertexShader,\n      simulationFragmentShader: positionSimulationFragmentShader\n    })\n\n    this.positionFBO.setTextureUniform('tDefaultPosition', this.getPositions())\n\n    this.sizeFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tPosition: { type: 't', value: 0 },\n        tDefaultSize: { type: 't', value: 0 },\n\n        mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n\n        sizeRange: { type: 'f', value: this.sizeRange },\n        sizeInc: { type: 'f', value: this.sizeInc },\n\n        hoverDist: { type: 'f', value: this.hoverDist },\n        hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n        hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n      },\n      simulationVertexShader: sizeSimulationVertexShader,\n      simulationFragmentShader: sizeSimulationFragmentShader\n    })\n\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n\n    const uniforms = Object.assign({}, configUniforms, {\n      tDefaultPosition: { type: 't', value: this.positionFBO.simulationShader.uniforms.tDefaultPosition.value },\n      tText: { type: 't', value: 0 },\n      tPosition: { type: 't', value: this.positionFBO.targets[0] },\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      textSizeMultiplier: { type: 'f', value: this.textSizeMultiplier },\n\n      tColour: {\n        type: 't',\n        value: this.getColours()\n      }\n    })\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader,\n      fragmentShader,\n      blending,\n      transparent,\n      depthTest,\n      depthWrite\n    })\n\n    // set uv coords of particles in texture as positions\n    const geometry = new THREE.Geometry()\n\n    for (let i = 0; i < this.numParticles; i++) {\n      const vertex = new THREE.Vector3()\n      vertex.x = (i % tWidth) / tWidth\n      vertex.y = Math.floor(i / tWidth) / tHeight\n      geometry.vertices.push(vertex)\n    }\n\n    this.particles = new THREE.Points(geometry, this.material)\n    this.particles.frustumCulled = false\n\n    this.text = ''\n\n    document.onkeydown = this.onTextInput.bind(this)\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n    document.addEventListener('mousemove', this.onMouseMove.bind(this), false)\n  }\n\n  get bgColorTop () {\n    return this._bgColorTop\n  }\n\n  set bgColorTop (newVal) {\n    this._bgColorTop = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  get bgColorBottom () {\n    return this._bgColorBottom\n  }\n\n  set bgColorBottom (newVal) {\n    this._bgColorBottom = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  onWindowResize () {\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n  }\n\n  onMouseMove (event) {\n    const xMultiplier = this.cameraZ / (this.windowHalfY * 2.8)\n    const yMultiplier = this.cameraZ / (this.windowHalfY * 2.65)\n    const mouseX = event.clientX - this.windowHalfX\n    const mouseY = this.windowHalfY - event.clientY\n\n    this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0)\n  }\n\n  setTextTexture (textCanvas) {\n    const textTexture = new THREE.Texture(textCanvas)\n    textTexture.minFilter = textTexture.magFilter = THREE.NearestFilter\n    textTexture.needsUpdate = true\n    textTexture.flipY = true\n    this.positionFBO.simulationShader.uniforms.tText.value = this.material.uniforms.tText.value = textTexture\n  }\n\n  onTextInput ({\n    key = ''\n  }) {\n    const canvasDepth = 1\n    const textCanvas = document.createElement('canvas')\n\n    if (key !== 'Backspace' && (key.length !== 1 || !key.match(/[a-z ]?/i))) {\n      return\n    }\n\n    this.text = key === 'Backspace' ? this.text.slice(0, -1) : this.text + key\n\n    textCanvas.width = textCanvas.height = Math.sqrt(this.numParticles) * canvasDepth\n\n    const canvasCenterV = textCanvas.height / 2\n    const ctx = textCanvas.getContext('2d', {\n      alpha: false\n    })\n\n    ctx.font = `80px bold serif`\n    ctx.fillStyle = 'white'\n    ctx.fillText(this.text, 0, canvasCenterV, textCanvas.width)\n\n    this.setTextTexture(textCanvas)\n  }\n\n  getPositions () {\n    const vertices = new Float32Array(this.numParticles * 4)\n    for (let i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n      const vertice = this.calcPosition()\n\n      this.positions[i3] = vertices[i4] = vertice[0]\n      this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1]\n      this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2]\n\n      vertices[i4 + 3] = 0.0 // stores whether particle is representing text or not\n    }\n    return vertices\n  }\n\n  calcPosition () {\n    const radius = this.radius\n    const x = Math.random() - 0.5\n    const y = Math.random() - 0.5\n    const z = 0\n    const d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)))\n\n    return [\n      x * d,\n      y * d,\n      z\n    ]\n  }\n\n  getSizes () {\n    const sizes = new Float32Array(this.numParticles * 4)\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      sizes[i4 + 3] = this.calcSize()\n    }\n    return sizes\n  }\n\n  calcSize () {\n    const sizeRange = this.maxSize - this.minSize\n    const size = this.minSize + (sizeRange * Math.pow(Math.random(), this.skew))\n\n    return size\n  }\n\n  getColours () {\n    const colours = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      const colour = this.calcColour()\n\n      colours[i4] = colour[0]\n      colours[i4 + 1] = colour[1]\n      colours[i4 + 2] = colour[2]\n      colours[i4 + 3] = colour[3]\n    }\n\n    return createDataTexture({\n      data: colours,\n      tWidth: this.tWidth,\n      tHeight: this.tHeight,\n      format: this.positionFBO.format,\n      filterType: this.positionFBO.filterType\n    })\n  }\n\n  calcColour () {\n    const randomVal = Math.ceil(Math.random() * 10)\n\n    const getColor = (r, g, b, a) => [\n      this.brightness * r / 255,\n      this.brightness * g / 255,\n      this.brightness * b / 255,\n      this.opacity\n    ]\n\n    switch (randomVal) {\n      case 1:\n        return getColor(155, 176, 255)\n\n      case 2:\n        return getColor(170, 191, 255)\n\n      case 3:\n        return getColor(202, 215, 255)\n\n      case 4:\n        return getColor(248, 247, 255)\n\n      case 5:\n        return getColor(255, 244, 234)\n\n      case 6:\n        return getColor(255, 210, 161)\n\n      case 7:\n        return getColor(255, 204, 111)\n\n      default:\n        return getColor(255, 255, 255)\n    }\n  }\n\n  update () {\n    this.positionFBO.simulate()\n    this.sizeFBO.simulate()\n    this.sizeFBO.simulationShader.uniforms.tPosition.value = this.material.uniforms.tPosition.value = this.positionFBO.getCurrentFrame()\n    this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame()\n  }\n\n  get () {\n    return this.particles\n  }\n\n  setCameraZ (newCameraZ) {\n    this.cameraZ = newCameraZ\n  }\n\n  updateColours () {\n    this.material.uniforms.tColour.value = this.getColours()\n  }\n\n  updateSizes () {\n    this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange\n    this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n  }\n\n  updateParticleVars () {\n    this.material.uniforms.textSizeMultiplier.value = this.textSizeMultiplier\n    this.positionFBO.simulationShader.uniforms.textPositionMultiplier.value = this.textPositionMultiplier\n    this.positionFBO.simulationShader.uniforms.topSpeed.value = this.topSpeed\n    this.positionFBO.simulationShader.uniforms.acceleration.value = this.acceleration\n\n    this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist\n    this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc\n    this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/particles.js","/* eslint-disable */\n\nconst positionSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\n\tuniform sampler2D tDefaultPosition;\n\tuniform sampler2D tText;\n\n\tuniform float topSpeed;\n\tuniform float acceleration;\n\tuniform float textPositionMultiplier;\n\n\tvec3 setTopSpeed(vec3 speed, float topSpeed) {\n\t\treturn vec3(\n\t\t\tspeed.x > topSpeed ? topSpeed : speed.x < -topSpeed ? -topSpeed : speed.x,\n\t\t\tspeed.y > topSpeed ? topSpeed : speed.y < -topSpeed ? -topSpeed : speed.y,\n\t\t\tspeed.z > topSpeed ? topSpeed : speed.z < -topSpeed ? -topSpeed : speed.z\n\t\t);\n\t}\n\n\tvec3 moveParticleToGoal(vec3 currPos, vec3 prevPos, vec3 goal) {\n\t\tvec3 distanceToGoal = goal - currPos;\n\t\tvec3 currVelocity = currPos - prevPos;\n\n\t\tvec3 calculatedAcceleration = normalize(distanceToGoal) * acceleration;\n\t\tfloat currVelocityL = length(currVelocity);\n\t\tfloat distanceToGoalL = length(distanceToGoal);\n\n\t\tif (distanceToGoalL > currVelocityL) {\n\t\t\tvec3 velocity = currVelocity + calculatedAcceleration;\n\n\t\t\tvelocity = setTopSpeed(velocity, topSpeed);\n\n\t\t\treturn currPos + velocity;\n\t\t} else {\n\t\t\treturn goal;\n\t\t}\n\t}\n\n\tvoid main() {\n\t\tvec3 defaultPos = texture2D(tDefaultPosition, vUv).xyz;\n\t\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\n\t\tvec3 position = texture2D(tCurr, vUv).xyz;\n\t\tfloat textOpacity = texture2D(tText, vUv).r;\n\t\tfloat isTextParticle = 0.0;\n\n\t\tif (prevPos == vec3(0.0, 0.0, 0.0)) {\n\t\t\tposition = defaultPos;\n\t\t}\n\n\t\tif (textOpacity > 0.0) {\n\t\t\tposition = moveParticleToGoal(position, prevPos, vec3((vUv - 0.5) * textPositionMultiplier, 0.0));\n\n\t\t\tisTextParticle = 1.0;\n\t\t} else {\n\t\t\tposition = moveParticleToGoal(position, prevPos, defaultPos);\n\t\t}\n\n\t\t// write new positions out\n\t\tgl_FragColor = vec4(position, isTextParticle);\n\t}\n`\n\nconst positionSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  positionSimulationFragmentShader,\n  positionSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/positionSimulationShaders.js","/* eslint-disable */\n\nconst sizeSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tDefaultSize;\n\n\tuniform vec3 mouse;\n\tuniform float sizeInc;\n\tuniform float sizeRange;\n\n\tuniform float hoverDist;\n\tuniform float hoverSizeInc;\n\tuniform float hoverMaxSizeMultiplier;\n\n\tfloat getSize() {\n\t\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\n\t\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\n\t\tfloat prevSize = texture2D(tPrev, vUv).w;\n\t\tfloat size = texture2D(tCurr, vUv).w;\n\n\t\tif (size == 0.0) {\n\t\t\tsize = defaultSize;\n\t\t} else if (prevSize == 0.0 || size == prevSize) {\n\t\t\tsize = rand(vUv) >= 0.5 ? size + sizeInc : size - sizeInc;\n\t\t} else if (size < (defaultSize - sizeRange)) {\n\t\t\tsize += sizeInc;\n\t\t} else if (size > (defaultSize + sizeRange)) {\n\t\t\tsize -= sizeInc;\n\t\t} else {\n\t\t\tsize += size - prevSize;\n\t\t}\n\n\t\tfloat dist = length(currPosition.xy - mouse.xy);\n\n\t\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\n\t\t\tsize += hoverSizeInc;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\tvoid main() {\n\t\t// write new size out\n\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\n\t}\n`\n\nconst sizeSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  sizeSimulationFragmentShader,\n  sizeSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/sizeSimulationShaders.js","/* eslint-disable */\n\nconst fragmentShader = `\n\tuniform sampler2D tPosition;\n\tuniform sampler2D starImg;\n\tuniform sampler2D tColour;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\n\t\tvec3 position = texture2D(tPosition, vUv).xyz;\n\t\tvec4 colour = texture2D(tColour, vUv).rgba;\n\t\tfloat isTextColor = texture2D(tPosition, vUv).a;\n\n\t\tgl_FragColor = colour;\n\t\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\n\t}\n`\n\nconst vertexShader = `\n\tuniform sampler2D tDefaultPosition;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tSize;\n\tuniform sampler2D tText;\n\n\tuniform float sizeMultiplierForScreen;\n\tuniform float textSizeMultiplier;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvUv = position.xy;\n\t\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\n\n\t\t// position saved as rgba / xyzw value in a texture object in memory\n\t\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\n\t\tvec3 position = texture2D(tPosition, vUv).xyz;\n\t\tfloat distanceToTravel = length(goal - defaultPosition);\n\t\tfloat distanceTravelled = length(position - defaultPosition);\n\t\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\n\n\t\t// if distanceTravelled > 0.0 then this particle has moved from default position and therefore is a text star\n\t\tfloat size = texture2D(tSize, vUv).a;\n\t\tfloat textSize = size * size * textSizeMultiplier; // multiply star size against itself to create size range\n\t\tsize = distanceTravelled > 0.0 ? mix(size, textSize, distanceTravelledRatio > 1.0 ? 1.0 : distanceTravelledRatio) : size;\n\n\t\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\t\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t}\n`\n\nexport {\n  fragmentShader,\n  vertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/shaders.js"],"sourceRoot":""}