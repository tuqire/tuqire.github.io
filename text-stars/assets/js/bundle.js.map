{"version":3,"sources":["webpack:///bundle.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/main.js","webpack:///./src/js/io/camera.js","webpack:///./src/js/io/renderer.js","webpack:///./src/js/objects/scene.js","webpack:///./src/js/objects/particles.js","webpack:///./src/js/shaders/positionSimulationShaders.js","webpack:///./src/js/shaders/sizeSimulationShaders.js","webpack:///./src/js/shaders/shaders.js"],"names":["webpackJsonp","module","exports","__webpack_require__","THREE","getParameterByName","name","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","getZRatio","innerWidth","createDataTexture","_ref","data","tWidth","tHeight","format","filterType","dataTexture","DataTexture","FloatType","minFilter","magFilter","needsUpdate","flipY","Object","defineProperty","value","call","_interopRequireDefault","obj","__esModule","default","_detectorWebgl","_detectorWebgl2","_camera","_camera2","_renderer","_renderer2","_scene","_scene2","_particles","_particles2","document","addEventListener","container","getElementById","renderer","scene","particles","skew","hoverDist","hoverSizeInc","hoverMaxSizeMultiplier","textColourDivider","textSizeMultiplier","textPositionMultiplier","minSize","maxSize","sizeDif","incSize","numParticles","radius","topSpeed","acceleration","camera","position","x","y","z","render","update","get","add","animate","requestAnimationFrame","innerHTML","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utils","Camera","_ref$fov","fov","undefined","_ref$aspectRatio","aspectRatio","innerHeight","_ref$near","near","_ref$far","far","_ref$position","_ref$up","up","this","setCameraZ","PerspectiveCamera","setPosition","setUp","apply","setLookAt","WIDTH","HEIGHT","aspect","setZ","updateProjectionMatrix","set","_ref2","_ref2$x","_ref2$y","_ref2$z","setX","setY","lookAt","Vector3","Renderer","_ref$alpha","alpha","_ref$pixelRatio","pixelRatio","devicePixelRatio","_ref$width","width","_ref$height","height","WebGLRenderer","gl","context","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setPixelRatio","setSize","appendChild","getDomElement","onWindowResize","bind","domElement","w","h","arguments","_ref2$renderTarget","renderTarget","_ref2$force","force","Canvas","Scene","remove","_three","_three2","_positionSimulationShaders","_sizeSimulationShaders","_shaders","Particles","_ref$numParticles","_ref$configUniforms","configUniforms","color","Color","sizeMultiplierForScreen","starImg","TextureLoader","load","_ref$blending","blending","AdditiveBlending","_ref$transparent","transparent","_ref$depthTest","depthTest","_ref$depthWrite","depthWrite","_ref$radius","_ref$sizeDif","_ref$minSize","_ref$maxSize","_ref$incSize","_ref$hoverDist","_ref$hoverSizeInc","_ref$hoverMaxSizeMult","_ref$skew","_ref$animationFrames","animationFrames","_ref$topSpeed","_ref$acceleration","_ref$textColourDivide","_ref$textSizeMultipli","_ref$textPositionMult","windowHalfX","windowHalfY","Math","ceil","sqrt","positions","Float32Array","positionFBO","uniforms","tDefaultPosition","type","tText","simulationVertexShader","simulationFragmentShader","setTextureUniform","getPositions","sizeFBO","tPosition","tDefaultSize","mouse","getSizes","assign","simulationShader","targets","tSize","tColour","getColours","material","ShaderMaterial","vertexShader","fragmentShader","geometry","Geometry","vertex","floor","vertices","push","Points","frustumCulled","text","onkeydown","onTextInput","onMouseMove","_this","forEach","animationFrame","setTimeout","createCanvasAnimation","animationDelay","event","xMultiplier","cameraZ","yMultiplier","mouseX","clientX","mouseY","clientY","textCanvas","textTexture","Texture","NearestFilter","_ref2$key","createElement","match","slice","canvasCenterV","ctx","getContext","font","fillStyle","fillText","setTextTexture","i3","i4","vertice","calcPosition","random","d","pow","sizes","calcSize","sizeRange","colours","colour","calcColour","randomVal","r","g","b","simulate","getCurrentFrame","newCameraZ","positionSimulationFragmentShader","positionSimulationVertexShader","sizeSimulationFragmentShader","sizeSimulationVertexShader"],"mappings":"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","file":"bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.getParameterByName = getParameterByName;\nexports.getZRatio = getZRatio;\nexports.createDataTexture = createDataTexture;\nfunction getParameterByName(name, url) {\n\tif (!url) {\n\t\turl = window.location.href;\n\t}\n\n\tname = name.replace(/[\\[\\]]/g, '\\\\$&');\n\tvar regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n\tvar results = regex.exec(url);\n\n\tif (!results) return null;\n\tif (!results[2]) return '';\n\n\treturn decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getZRatio() {\n\tif (window.innerWidth > 1100) {\n\t\treturn 170;\n\t} else if (window.innerWidth > 700) {\n\t\treturn 100;\n\t} else if (window.innerWidth > 500) {\n\t\treturn 85;\n\t} else {\n\t\treturn 50;\n\t}\n}\n\nfunction createDataTexture(_ref) {\n\tvar data = _ref.data,\n\t    tWidth = _ref.tWidth,\n\t    tHeight = _ref.tHeight,\n\t    format = _ref.format,\n\t    filterType = _ref.filterType;\n\n\tvar dataTexture = new THREE.DataTexture(data, tWidth, tHeight, format, THREE.FloatType);\n\n\tdataTexture.minFilter = dataTexture.magFilter = filterType;\n\tdataTexture.needsUpdate = true;\n\tdataTexture.flipY = false;\n\n\treturn dataTexture;\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(5);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _detectorWebgl = __webpack_require__(2);\n\nvar _detectorWebgl2 = _interopRequireDefault(_detectorWebgl);\n\nvar _utils = __webpack_require__(1);\n\nvar _camera = __webpack_require__(6);\n\nvar _camera2 = _interopRequireDefault(_camera);\n\nvar _renderer = __webpack_require__(7);\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _scene = __webpack_require__(8);\n\nvar _scene2 = _interopRequireDefault(_scene);\n\nvar _particles = __webpack_require__(9);\n\nvar _particles2 = _interopRequireDefault(_particles);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\tif (_detectorWebgl2.default) {\n\t\tvar container = document.getElementById('stars-simulation-container');\n\t\tvar renderer = new _renderer2.default({ container: container });\n\t\tvar scene = new _scene2.default();\n\t\tvar particles = new _particles2.default({\n\t\t\trenderer: renderer,\n\t\t\tskew: 10,\n\t\t\thoverDist: 0.04,\n\t\t\thoverSizeInc: 0.01,\n\t\t\thoverMaxSizeMultiplier: 3,\n\t\t\ttextColourDivider: 2,\n\t\t\ttextSizeMultiplier: 7.5,\n\t\t\ttextPositionMultiplier: 6,\n\t\t\tminSize: 0.02,\n\t\t\tmaxSize: 0.05,\n\t\t\tsizeDif: 2,\n\t\t\tincSize: 0.0001,\n\t\t\tnumParticles: 150000,\n\t\t\tradius: 4,\n\t\t\ttopSpeed: 1,\n\t\t\tacceleration: 0.0001\n\t\t});\n\t\tvar camera = new _camera2.default({\n\t\t\tparticles: particles,\n\t\t\tposition: {\n\t\t\t\tx: 0,\n\t\t\t\ty: -0.001,\n\t\t\t\tz: 4.5\n\t\t\t}\n\t\t});\n\n\t\tvar init = function init() {\n\t\t\tscene.add(particles.get());\n\t\t};\n\n\t\tvar animate = function animate() {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t};\n\n\t\tvar render = function render() {\n\t\t\tparticles.update();\n\n\t\t\trenderer.render({\n\t\t\t\tscene: scene.get(),\n\t\t\t\tcamera: camera.get()\n\t\t\t});\n\t\t};\n\n\t\tinit();\n\t\tanimate();\n\t} else {\n\t\tvar info = document.getElementById('info');\n\t\tinfo.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.';\n\t}\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = __webpack_require__(1);\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Camera = function () {\n\tfunction Camera(_ref) {\n\t\tvar particles = _ref.particles,\n\t\t    _ref$fov = _ref.fov,\n\t\t    fov = _ref$fov === undefined ? 400 : _ref$fov,\n\t\t    _ref$aspectRatio = _ref.aspectRatio,\n\t\t    aspectRatio = _ref$aspectRatio === undefined ? window.innerWidth / window.innerHeight : _ref$aspectRatio,\n\t\t    _ref$near = _ref.near,\n\t\t    near = _ref$near === undefined ? 0.1 : _ref$near,\n\t\t    _ref$far = _ref.far,\n\t\t    far = _ref$far === undefined ? 2000 : _ref$far,\n\t\t    _ref$position = _ref.position,\n\t\t    position = _ref$position === undefined ? {\n\t\t\tx: 0, y: 0, z: 0\n\t\t} : _ref$position,\n\t\t    _ref$up = _ref.up,\n\t\t    up = _ref$up === undefined ? [0, 0, 1] : _ref$up;\n\n\t\t_classCallCheck(this, Camera);\n\n\t\tthis.particles = particles;\n\t\tthis.particles.setCameraZ(position.z);\n\t\tthis.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n\t\tthis.up = up;\n\n\t\tthis.setPosition(position);\n\t\tthis.setUp.apply(this, _toConsumableArray(this.up));\n\t\tthis.setLookAt();\n\n\t\t// window.addEventListener('resize', this.onWindowResize.bind(this));\n\t}\n\n\t_createClass(Camera, [{\n\t\tkey: 'onWindowResize',\n\t\tvalue: function onWindowResize() {\n\t\t\tvar WIDTH = window.innerWidth;\n\t\t\tvar HEIGHT = window.innerHeight;\n\n\t\t\tthis.camera.aspect = WIDTH / HEIGHT;\n\t\t\tthis.setZ(window.innerHeight / (0, _utils.getZRatio)());\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t}\n\t}, {\n\t\tkey: 'setUp',\n\t\tvalue: function setUp(x, y, z) {\n\t\t\tthis.camera.up.set(x, y, z);\n\t\t}\n\t}, {\n\t\tkey: 'setPosition',\n\t\tvalue: function setPosition(_ref2) {\n\t\t\tvar _ref2$x = _ref2.x,\n\t\t\t    x = _ref2$x === undefined ? this.camera.position.x : _ref2$x,\n\t\t\t    _ref2$y = _ref2.y,\n\t\t\t    y = _ref2$y === undefined ? this.camera.position.y : _ref2$y,\n\t\t\t    _ref2$z = _ref2.z,\n\t\t\t    z = _ref2$z === undefined ? this.camera.position.z : _ref2$z;\n\n\t\t\tthis.setX(x);\n\t\t\tthis.setY(y);\n\t\t\tthis.setZ(z);\n\t\t}\n\t}, {\n\t\tkey: 'setX',\n\t\tvalue: function setX(x) {\n\t\t\tthis.camera.position.x = x;\n\t\t\tthis.setLookAt();\n\t\t}\n\t}, {\n\t\tkey: 'setY',\n\t\tvalue: function setY(y) {\n\t\t\tthis.camera.position.y = y;\n\t\t\tthis.setLookAt();\n\t\t}\n\t}, {\n\t\tkey: 'setZ',\n\t\tvalue: function setZ(z) {\n\t\t\tthis.camera.position.z = z;\n\t\t\tthis.setLookAt();\n\t\t\tthis.setUp(0, 0, 1);\n\t\t\tthis.particles.setCameraZ(z);\n\t\t}\n\t}, {\n\t\tkey: 'setLookAt',\n\t\tvalue: function setLookAt() {\n\t\t\tthis.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\t\t}\n\t}, {\n\t\tkey: 'get',\n\t\tvalue: function get() {\n\t\t\treturn this.camera;\n\t\t}\n\t}, {\n\t\tkey: 'getPosition',\n\t\tvalue: function getPosition() {\n\t\t\treturn this.camera.position;\n\t\t}\n\t}, {\n\t\tkey: 'getZ',\n\t\tvalue: function getZ() {\n\t\t\treturn this.camera.position.z;\n\t\t}\n\t}]);\n\n\treturn Camera;\n}();\n\nexports.default = Camera;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n\tfunction Renderer(_ref) {\n\t\tvar _ref$alpha = _ref.alpha,\n\t\t    alpha = _ref$alpha === undefined ? true : _ref$alpha,\n\t\t    _ref$pixelRatio = _ref.pixelRatio,\n\t\t    pixelRatio = _ref$pixelRatio === undefined ? window.devicePixelRatio : _ref$pixelRatio,\n\t\t    _ref$width = _ref.width,\n\t\t    width = _ref$width === undefined ? window.innerWidth : _ref$width,\n\t\t    _ref$height = _ref.height,\n\t\t    height = _ref$height === undefined ? window.innerHeight : _ref$height,\n\t\t    container = _ref.container;\n\n\t\t_classCallCheck(this, Renderer);\n\n\t\tthis.renderer = new THREE.WebGLRenderer({ alpha: alpha });\n\t\tvar gl = this.renderer.context;\n\t\tgl.enable(gl.BLEND);\n\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tthis.setPixelRatio(pixelRatio);\n\n\t\tthis.setSize(width, height);\n\n\t\tcontainer.appendChild(this.getDomElement());\n\t\twindow.addEventListener('resize', this.onWindowResize.bind(this));\n\t}\n\n\t_createClass(Renderer, [{\n\t\tkey: 'getDomElement',\n\t\tvalue: function getDomElement() {\n\t\t\treturn this.renderer.domElement;\n\t\t}\n\t}, {\n\t\tkey: 'onWindowResize',\n\t\tvalue: function onWindowResize() {\n\t\t\tvar WIDTH = window.innerWidth;\n\t\t\tvar HEIGHT = window.innerHeight;\n\n\t\t\tthis.renderer.setSize(WIDTH, HEIGHT);\n\t\t}\n\t}, {\n\t\tkey: 'setPixelRatio',\n\t\tvalue: function setPixelRatio(pixelRatio) {\n\t\t\tthis.renderer.setPixelRatio(pixelRatio);\n\t\t}\n\t}, {\n\t\tkey: 'setSize',\n\t\tvalue: function setSize(w, h) {\n\t\t\tthis.renderer.setSize(w, h);\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t\t\t    scene = _ref2.scene,\n\t\t\t    camera = _ref2.camera,\n\t\t\t    _ref2$renderTarget = _ref2.renderTarget,\n\t\t\t    renderTarget = _ref2$renderTarget === undefined ? null : _ref2$renderTarget,\n\t\t\t    _ref2$force = _ref2.force,\n\t\t\t    force = _ref2$force === undefined ? false : _ref2$force;\n\n\t\t\tthis.renderer.render(scene, camera, renderTarget, force);\n\t\t}\n\t}, {\n\t\tkey: 'get',\n\t\tvalue: function get() {\n\t\t\treturn this.renderer;\n\t\t}\n\t}]);\n\n\treturn Renderer;\n}();\n\nexports.default = Renderer;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Canvas = function () {\n\tfunction Canvas() {\n\t\t_classCallCheck(this, Canvas);\n\n\t\tthis.scene = new THREE.Scene();\n\t}\n\n\t_createClass(Canvas, [{\n\t\tkey: \"add\",\n\t\tvalue: function add(obj) {\n\t\t\tthis.scene.add(obj);\n\t\t}\n\t}, {\n\t\tkey: \"remove\",\n\t\tvalue: function remove(obj) {\n\t\t\tthis.scene.remove(obj);\n\t\t}\n\t}, {\n\t\tkey: \"get\",\n\t\tvalue: function get() {\n\t\t\treturn this.scene;\n\t\t}\n\t}]);\n\n\treturn Canvas;\n}();\n\nexports.default = Canvas;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _three = __webpack_require__(3);\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _utils = __webpack_require__(1);\n\nvar _positionSimulationShaders = __webpack_require__(10);\n\nvar _sizeSimulationShaders = __webpack_require__(11);\n\nvar _shaders = __webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Particles = function () {\n\tfunction Particles(_ref) {\n\t\tvar _ref$numParticles = _ref.numParticles,\n\t\t    numParticles = _ref$numParticles === undefined ? 10000 : _ref$numParticles,\n\t\t    _ref$configUniforms = _ref.configUniforms,\n\t\t    configUniforms = _ref$configUniforms === undefined ? {\n\t\t\tcolor: { value: new THREE.Color(0xffffff) },\n\t\t\tsizeMultiplierForScreen: { value: window.innerHeight * window.devicePixelRatio / 2 },\n\t\t\tstarImg: { value: new THREE.TextureLoader().load('assets/images/star.png') }\n\t\t} : _ref$configUniforms,\n\t\t    _ref$blending = _ref.blending,\n\t\t    blending = _ref$blending === undefined ? THREE.AdditiveBlending : _ref$blending,\n\t\t    _ref$transparent = _ref.transparent,\n\t\t    transparent = _ref$transparent === undefined ? true : _ref$transparent,\n\t\t    _ref$depthTest = _ref.depthTest,\n\t\t    depthTest = _ref$depthTest === undefined ? true : _ref$depthTest,\n\t\t    _ref$depthWrite = _ref.depthWrite,\n\t\t    depthWrite = _ref$depthWrite === undefined ? false : _ref$depthWrite,\n\t\t    renderer = _ref.renderer,\n\t\t    _ref$radius = _ref.radius,\n\t\t    radius = _ref$radius === undefined ? 100 : _ref$radius,\n\t\t    _ref$sizeDif = _ref.sizeDif,\n\t\t    sizeDif = _ref$sizeDif === undefined ? 0.5 : _ref$sizeDif,\n\t\t    _ref$minSize = _ref.minSize,\n\t\t    minSize = _ref$minSize === undefined ? 1 : _ref$minSize,\n\t\t    _ref$maxSize = _ref.maxSize,\n\t\t    maxSize = _ref$maxSize === undefined ? 3 : _ref$maxSize,\n\t\t    _ref$incSize = _ref.incSize,\n\t\t    incSize = _ref$incSize === undefined ? 0.01 : _ref$incSize,\n\t\t    _ref$hoverDist = _ref.hoverDist,\n\t\t    hoverDist = _ref$hoverDist === undefined ? 10 : _ref$hoverDist,\n\t\t    _ref$hoverSizeInc = _ref.hoverSizeInc,\n\t\t    hoverSizeInc = _ref$hoverSizeInc === undefined ? 0.05 : _ref$hoverSizeInc,\n\t\t    _ref$hoverMaxSizeMult = _ref.hoverMaxSizeMultiplier,\n\t\t    hoverMaxSizeMultiplier = _ref$hoverMaxSizeMult === undefined ? 5 : _ref$hoverMaxSizeMult,\n\t\t    _ref$skew = _ref.skew,\n\t\t    skew = _ref$skew === undefined ? 1 : _ref$skew,\n\t\t    _ref$animationFrames = _ref.animationFrames,\n\t\t    animationFrames = _ref$animationFrames === undefined ? [] : _ref$animationFrames,\n\t\t    _ref$topSpeed = _ref.topSpeed,\n\t\t    topSpeed = _ref$topSpeed === undefined ? 0.07 : _ref$topSpeed,\n\t\t    _ref$acceleration = _ref.acceleration,\n\t\t    acceleration = _ref$acceleration === undefined ? 0.01 : _ref$acceleration,\n\t\t    _ref$textColourDivide = _ref.textColourDivider,\n\t\t    textColourDivider = _ref$textColourDivide === undefined ? 2 : _ref$textColourDivide,\n\t\t    _ref$textSizeMultipli = _ref.textSizeMultiplier,\n\t\t    textSizeMultiplier = _ref$textSizeMultipli === undefined ? 2 : _ref$textSizeMultipli,\n\t\t    _ref$textPositionMult = _ref.textPositionMultiplier,\n\t\t    textPositionMultiplier = _ref$textPositionMult === undefined ? 2 : _ref$textPositionMult;\n\n\t\t_classCallCheck(this, Particles);\n\n\t\tthis.renderer = renderer;\n\n\t\tthis.numParticles = numParticles;\n\t\tthis.radius = radius;\n\t\tthis.skew = skew; // skews the median size\n\n\t\t// used to define star glinting\n\t\tthis.sizeDif = sizeDif;\n\t\tthis.minSize = minSize;\n\t\tthis.maxSize = maxSize;\n\t\tthis.incSize = incSize;\n\n\t\t// used to define mouse interaction animation\n\t\tthis.hoverDist = hoverDist;\n\t\tthis.hoverSizeInc = hoverSizeInc;\n\t\tthis.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier;\n\n\t\t// use to define moving particles\n\t\tthis.topSpeed = topSpeed;\n\t\tthis.acceleration = acceleration;\n\t\tthis.textColourDivider = textColourDivider;\n\t\tthis.textSizeMultiplier = textSizeMultiplier;\n\t\tthis.textPositionMultiplier = textPositionMultiplier;\n\t\tthis.animationFrames = animationFrames;\n\n\t\t// used to define mouse interaction\n\t\tthis.windowHalfX = window.innerWidth / 2;\n\t\tthis.windowHalfY = window.innerHeight / 2;\n\n\t\t// height and width that set up a texture in memory\n\t\t// this texture is used to store particle position values\n\t\tvar tHeight = Math.ceil(Math.sqrt(this.numParticles));\n\t\tvar tWidth = tHeight;\n\t\tthis.numParticles = tWidth * tHeight;\n\n\t\tthis.positions = new Float32Array(this.numParticles * 3);\n\n\t\tthis.positionFBO = new _three2.default({\n\t\t\ttWidth: tWidth,\n\t\t\ttHeight: tHeight,\n\t\t\trenderer: renderer.get(),\n\t\t\tuniforms: {\n\t\t\t\ttDefaultPosition: { type: 't', value: 0 }, // default star positions\n\t\t\t\ttText: { type: 't', value: 0 }, // texture holding text\n\n\t\t\t\ttopSpeed: { type: 'f', value: this.topSpeed }, // the top speed of stars\n\t\t\t\tacceleration: { type: 'f', value: this.acceleration }, // the star particle acceleration\n\n\t\t\t\ttextPositionMultiplier: { type: 'f', value: this.textPositionMultiplier }\n\t\t\t},\n\t\t\tsimulationVertexShader: _positionSimulationShaders.positionSimulationVertexShader,\n\t\t\tsimulationFragmentShader: _positionSimulationShaders.positionSimulationFragmentShader\n\t\t});\n\n\t\tthis.positionFBO.setTextureUniform('tDefaultPosition', this.getPositions());\n\n\t\tthis.sizeFBO = new _three2.default({\n\t\t\ttWidth: tWidth,\n\t\t\ttHeight: tHeight,\n\t\t\trenderer: renderer.get(),\n\t\t\tuniforms: {\n\t\t\t\ttPosition: { type: 't', value: 0 },\n\t\t\t\ttDefaultSize: { type: 't', value: 0 },\n\n\t\t\t\tmouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n\n\t\t\t\tsizeDif: { type: 'f', value: this.sizeDif },\n\t\t\t\tincSize: { type: 'f', value: this.incSize },\n\n\t\t\t\thoverDist: { type: 'f', value: this.hoverDist },\n\t\t\t\thoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n\t\t\t\thoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n\t\t\t},\n\t\t\tsimulationVertexShader: _sizeSimulationShaders.sizeSimulationVertexShader,\n\t\t\tsimulationFragmentShader: _sizeSimulationShaders.sizeSimulationFragmentShader\n\t\t});\n\n\t\tthis.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n\n\t\tvar uniforms = Object.assign({}, configUniforms, {\n\t\t\ttDefaultPosition: { type: 't', value: this.positionFBO.simulationShader.uniforms.tDefaultPosition.value },\n\t\t\ttText: { type: 't', value: 0 },\n\t\t\ttPosition: { type: 't', value: this.positionFBO.targets[0] },\n\t\t\ttSize: { type: 't', value: this.sizeFBO.targets[0] },\n\t\t\ttextColourDivider: { type: 'f', value: this.textColourDivider },\n\t\t\ttextSizeMultiplier: { type: 'f', value: this.textSizeMultiplier },\n\n\t\t\ttColour: { type: 't', value: (0, _utils.createDataTexture)({\n\t\t\t\t\tdata: this.getColours(),\n\t\t\t\t\ttWidth: tWidth,\n\t\t\t\t\ttHeight: tHeight,\n\t\t\t\t\tformat: this.positionFBO.format,\n\t\t\t\t\tfilterType: this.positionFBO.filterType\n\t\t\t\t}) }\n\t\t});\n\n\t\tthis.material = new THREE.ShaderMaterial({\n\t\t\tuniforms: uniforms,\n\t\t\tvertexShader: _shaders.vertexShader,\n\t\t\tfragmentShader: _shaders.fragmentShader,\n\t\t\tblending: blending,\n\t\t\ttransparent: transparent,\n\t\t\tdepthTest: depthTest,\n\t\t\tdepthWrite: depthWrite\n\t\t});\n\n\t\t// set uv coords of particles in texture as positions\n\t\tvar geometry = new THREE.Geometry();\n\n\t\tfor (var i = 0; i < this.numParticles; i++) {\n\t\t\tvar vertex = new THREE.Vector3();\n\t\t\tvertex.x = i % tWidth / tWidth;\n\t\t\tvertex.y = Math.floor(i / tWidth) / tHeight;\n\t\t\tgeometry.vertices.push(vertex);\n\t\t}\n\n\t\tthis.particles = new THREE.Points(geometry, this.material);\n\t\tthis.particles.frustumCulled = false;\n\n\t\tthis.text = '';\n\t\tdocument.onkeydown = this.onTextInput.bind(this);\n\n\t\twindow.addEventListener('resize', this.onWindowResize.bind(this));\n\t\t// document.addEventListener('touchmove', this.onMouseMove.bind(this), false);\n\t\tdocument.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n\t}\n\n\t_createClass(Particles, [{\n\t\tkey: 'setAnimation',\n\t\tvalue: function setAnimation() {\n\t\t\tvar _this = this;\n\n\t\t\tthis.animationFrames.forEach(function (animationFrame) {\n\t\t\t\treturn setTimeout(function () {\n\t\t\t\t\treturn _this.createCanvasAnimation(animationFrame);\n\t\t\t\t}, animationFrame.animationDelay || 0);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'onWindowResize',\n\t\tvalue: function onWindowResize() {\n\t\t\tthis.windowHalfX = window.innerWidth / 2;\n\t\t\tthis.windowHalfY = window.innerHeight / 2;\n\t\t}\n\t}, {\n\t\tkey: 'onMouseMove',\n\t\tvalue: function onMouseMove(event) {\n\t\t\tvar xMultiplier = this.cameraZ / (this.windowHalfY * 2.8);\n\t\t\tvar yMultiplier = this.cameraZ / (this.windowHalfY * 2.65);\n\t\t\tvar mouseX = event.clientX - this.windowHalfX;\n\t\t\tvar mouseY = this.windowHalfY - event.clientY;\n\n\t\t\tthis.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0);\n\t\t}\n\t}, {\n\t\tkey: 'setTextTexture',\n\t\tvalue: function setTextTexture(textCanvas) {\n\t\t\tvar textTexture = new THREE.Texture(textCanvas);\n\t\t\ttextTexture.minFilter = textTexture.magFilter = THREE.NearestFilter;\n\t\t\ttextTexture.needsUpdate = true;\n\t\t\ttextTexture.flipY = true;\n\t\t\tthis.positionFBO.simulationShader.uniforms.tText.value = this.material.uniforms.tText.value = textTexture;\n\t\t}\n\t}, {\n\t\tkey: 'onTextInput',\n\t\tvalue: function onTextInput(_ref2) {\n\t\t\tvar _ref2$key = _ref2.key,\n\t\t\t    key = _ref2$key === undefined ? '' : _ref2$key;\n\n\t\t\tvar canvasDepth = 1;\n\t\t\tvar textCanvas = document.createElement('canvas');\n\n\t\t\tif (key !== 'Backspace' && (key.length !== 1 || !key.match(/[a-z ]?/i))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (key === 'Backspace') {\n\t\t\t\tthis.text = this.text.slice(0, -1);\n\t\t\t} else {\n\t\t\t\tthis.text += key;\n\t\t\t}\n\n\t\t\ttextCanvas.width = textCanvas.height = Math.sqrt(this.numParticles) * canvasDepth;\n\n\t\t\tvar canvasCenterV = textCanvas.height / 2;\n\t\t\tvar canvasCenterH = textCanvas.width / 2;\n\t\t\tvar ctx = textCanvas.getContext('2d', {\n\t\t\t\talpha: false\n\t\t\t});\n\n\t\t\tctx.font = '80px bold serif';\n\t\t\tctx.fillStyle = 'white';\n\t\t\tctx.fillText(this.text, 0, canvasCenterV, textCanvas.width);\n\n\t\t\tthis.setTextTexture(textCanvas);\n\t\t}\n\t}, {\n\t\tkey: 'getPositions',\n\t\tvalue: function getPositions() {\n\t\t\tvar vertices = new Float32Array(this.numParticles * 4);\n\t\t\tfor (var i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n\t\t\t\tvar vertice = this.calcPosition();\n\n\t\t\t\tthis.positions[i3] = vertices[i4] = vertice[0];\n\t\t\t\tthis.positions[i3 + 1] = vertices[i4 + 1] = vertice[1];\n\t\t\t\tthis.positions[i3 + 2] = vertices[i4 + 2] = vertice[2];\n\n\t\t\t\tvertices[i4 + 3] = 0.0; // stores whether particle is representing text or not\n\t\t\t}\n\t\t\treturn vertices;\n\t\t}\n\t}, {\n\t\tkey: 'calcPosition',\n\t\tvalue: function calcPosition() {\n\t\t\tvar radius = this.radius;\n\t\t\tvar x = Math.random() - 0.5;\n\t\t\tvar y = Math.random() - 0.5;\n\t\t\tvar z = 0;\n\t\t\tvar d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n\n\t\t\treturn [x * d, y * d, z];\n\t\t}\n\t}, {\n\t\tkey: 'getSizes',\n\t\tvalue: function getSizes() {\n\t\t\tvar sizes = new Float32Array(this.numParticles * 4);\n\t\t\tfor (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n\t\t\t\tsizes[i4 + 3] = this.calcSize();\n\t\t\t}\n\t\t\treturn sizes;\n\t\t}\n\t}, {\n\t\tkey: 'calcSize',\n\t\tvalue: function calcSize() {\n\t\t\tvar sizeRange = this.maxSize - this.minSize;\n\t\t\tvar size = this.minSize + sizeRange * Math.pow(Math.random(), this.skew);\n\n\t\t\treturn size;\n\t\t}\n\t}, {\n\t\tkey: 'getColours',\n\t\tvalue: function getColours() {\n\t\t\tvar colours = new Float32Array(this.numParticles * 4);\n\t\t\tfor (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n\t\t\t\tvar colour = this.calcColour();\n\n\t\t\t\tcolours[i4] = colour[0];\n\t\t\t\tcolours[i4 + 1] = colour[1];\n\t\t\t\tcolours[i4 + 2] = colour[2];\n\t\t\t\tcolours[i4 + 3] = colour[3];\n\t\t\t}\n\n\t\t\treturn colours;\n\t\t}\n\t}, {\n\t\tkey: 'calcColour',\n\t\tvalue: function calcColour() {\n\t\t\tvar randomVal = Math.random();\n\t\t\tvar r = void 0;\n\t\t\tvar g = void 0;\n\t\t\tvar b = void 0;\n\n\t\t\tif (randomVal > 0.7) {\n\t\t\t\tvar highRandomVal = Math.ceil((1 - randomVal) * 10);\n\n\t\t\t\tswitch (highRandomVal) {\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tr = randomVal * 2.1;\n\t\t\t\t\t\tg = randomVal * 1.6;\n\t\t\t\t\t\tb = randomVal * 1.2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tr = randomVal * 1.6;\n\t\t\t\t\t\tg = randomVal * 4;\n\t\t\t\t\t\tb = randomVal * 4;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tr = randomVal * 3;\n\t\t\t\t\t\tg = randomVal * 3;\n\t\t\t\t\t\tb = randomVal * 1.6;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tr = randomVal * 1.6;\n\t\t\t\tg = randomVal * 1.6;\n\t\t\t\tb = randomVal * 1.2;\n\t\t\t}\n\n\t\t\treturn [r, g, b, randomVal];\n\t\t}\n\t}, {\n\t\tkey: 'update',\n\t\tvalue: function update() {\n\t\t\tthis.positionFBO.simulate();\n\t\t\tthis.sizeFBO.simulate();\n\t\t\tthis.sizeFBO.simulationShader.uniforms.tPosition.value = this.material.uniforms.tPosition.value = this.positionFBO.getCurrentFrame();\n\t\t\tthis.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame();\n\t\t}\n\t}, {\n\t\tkey: 'get',\n\t\tvalue: function get() {\n\t\t\treturn this.particles;\n\t\t}\n\t}, {\n\t\tkey: 'setCameraZ',\n\t\tvalue: function setCameraZ(newCameraZ) {\n\t\t\tthis.cameraZ = newCameraZ;\n\t\t}\n\t}]);\n\n\treturn Particles;\n}();\n\nexports.default = Particles;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar positionSimulationFragmentShader = \"\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\n\\tuniform sampler2D tDefaultPosition;\\n\\tuniform sampler2D tText;\\n\\n\\tuniform float topSpeed;\\n\\tuniform float acceleration;\\n\\tuniform float textPositionMultiplier;\\n\\n\\tvec3 setTopSpeed(vec3 speed, float topSpeed) {\\n\\t\\treturn vec3(\\n\\t\\t\\tspeed.x > topSpeed ? topSpeed : speed.x < -topSpeed ? -topSpeed : speed.x,\\n\\t\\t\\tspeed.y > topSpeed ? topSpeed : speed.y < -topSpeed ? -topSpeed : speed.y,\\n\\t\\t\\tspeed.z > topSpeed ? topSpeed : speed.z < -topSpeed ? -topSpeed : speed.z\\n\\t\\t);\\n\\t}\\n\\n\\tvec3 moveParticleToGoal(vec3 currPos, vec3 prevPos, vec3 goal) {\\n\\t\\tvec3 distanceToGoal = goal - currPos;\\n\\t\\tvec3 acceleration = normalize(distanceToGoal) * acceleration;\\n\\t\\tfloat distanceToGoalL = length(distanceToGoal);\\n\\n\\t\\tvec3 currVelocity = currPos - prevPos;\\n\\t\\tfloat currVelocityL = length(currVelocity);\\n\\n\\t\\tif (distanceToGoalL > currVelocityL) {\\n\\t\\t\\tvec3 velocity = currVelocity + acceleration;\\n\\n\\t\\t\\tvelocity = setTopSpeed(velocity, topSpeed);\\n\\n\\t\\t\\treturn currPos + velocity;\\n\\t\\t} else {\\n\\t\\t\\treturn goal;\\n\\t\\t}\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tvec3 defaultPos = texture2D(tDefaultPosition, vUv).xyz;\\n\\t\\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\\n\\t\\tvec3 position = texture2D(tCurr, vUv).xyz;\\n\\t\\tfloat textOpacity = texture2D(tText, vUv).r;\\n\\t\\tfloat isTextParticle = 0.0;\\n\\n\\t\\tif (prevPos == vec3(0.0, 0.0, 0.0)) {\\n\\t\\t\\tposition = defaultPos;\\n\\t\\t}\\n\\n\\t\\tif (textOpacity > 0.0) {\\n\\t\\t\\tposition = moveParticleToGoal(position, prevPos, vec3((vUv - 0.5) * textPositionMultiplier, 0.0));\\n\\n\\t\\t\\tisTextParticle = 1.0;\\n\\t\\t} else {\\n\\t\\t\\tposition = moveParticleToGoal(position, prevPos, defaultPos);\\n\\t\\t}\\n\\n\\t\\t// write new positions out\\n\\t\\tgl_FragColor = vec4(position, isTextParticle);\\n\\t}\\n\";\n\nvar positionSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\nexports.positionSimulationFragmentShader = positionSimulationFragmentShader;\nexports.positionSimulationVertexShader = positionSimulationVertexShader;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar sizeSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tDefaultSize;\\n\\n\\tuniform vec3 mouse;\\n\\tuniform float incSize;\\n\\tuniform float sizeDif;\\n\\n\\tuniform float hoverDist;\\n\\tuniform float hoverSizeInc;\\n\\tuniform float hoverMaxSizeMultiplier;\\n\\n\\tfloat getSize() {\\n\\t\\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\\n\\t\\tfloat prevSize = texture2D(tPrev, vUv).w;\\n\\t\\tfloat size = texture2D(tCurr, vUv).w;\\n\\t\\tfloat sizeRange = defaultSize / sizeDif;\\n\\n\\t\\tif (size == 0.0) {\\n\\t\\t\\tsize = defaultSize;\\n\\t\\t} else if (prevSize == 0.0 || size == prevSize) {\\n\\t\\t\\tsize = rand(vUv) > 0.5 ? size + incSize : size - incSize;\\n\\t\\t} else if (size < (defaultSize - sizeRange)) {\\n\\t\\t\\tsize += incSize;\\n\\t\\t} else if (size > (defaultSize + sizeRange)) {\\n\\t\\t\\tsize -= incSize;\\n\\t\\t} else {\\n\\t\\t\\tsize += size - prevSize;\\n\\t\\t}\\n\\n\\t\\tfloat dist = length(currPosition.xy - mouse.xy);\\n\\n\\t\\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\\n\\t\\t\\tsize += hoverSizeInc;\\n\\t\\t}\\n\\n\\t\\treturn size;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\t// write new size out\\n\\t\\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\\n\\t}\\n\";\n\nvar sizeSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\nexports.sizeSimulationFragmentShader = sizeSimulationFragmentShader;\nexports.sizeSimulationVertexShader = sizeSimulationVertexShader;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar fragmentShader = \"\\n\\tuniform sampler2D tDefaultPosition;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D starImg;\\n\\tuniform sampler2D tColour;\\n\\n\\tuniform float textColourDivider;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tfloat setFloatVal(float myFloat) {\\n\\t\\treturn myFloat + 0.1;\\n\\t}\\n\\n\\tvec4 setFragVal(vec4 frag) {\\n\\t\\tfrag.r = setFloatVal(frag.r);\\n\\t\\tfrag.g = setFloatVal(frag.g);\\n\\t\\tfrag.b = setFloatVal(frag.b);\\n\\t\\tfrag.a = setFloatVal(frag.a);\\n\\n\\t\\treturn frag;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\\n\\t\\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\\n\\t\\tvec3 position = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat distanceTravelled = length(position - defaultPosition);\\n\\t\\tfloat distanceToTravel = length(goal - defaultPosition);\\n\\t\\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\\n\\n\\t\\tvec4 colour = texture2D(tColour, vUv).rgba;\\n\\n\\t\\tgl_FragColor = setFragVal(colour);\\n\\t\\tgl_FragColor = distanceTravelledRatio <= 0.3 ? (colour / textColourDivider) : setFragVal(colour);\\n\\t\\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\\n\\t}\\n\";\n\nvar vertexShader = \"\\n\\tuniform sampler2D tDefaultPosition;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tSize;\\n\\tuniform sampler2D tText;\\n\\n\\tuniform float sizeMultiplierForScreen;\\n\\tuniform float textSizeMultiplier;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvUv = position.xy;\\n\\t\\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\\n\\n\\t\\t// position saved as rgba / xyzw value in a texture object in memory\\n\\t\\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\\n\\t\\tvec3 position = texture2D(tPosition, vUv).xyz;\\n\\t\\tfloat distanceToTravel = length(goal - defaultPosition);\\n\\t\\tfloat distanceTravelled = length(position - defaultPosition);\\n\\t\\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\\n\\n\\t\\t// set size based on red value (to add depth to B&W images)\\n\\t\\tfloat textSizeMultiplierBasedOnColor = texture2D(tText, vUv).r;\\n\\t\\tfloat finalTextSizeMultiplier = textSizeMultiplierBasedOnColor > 0.0 ? textSizeMultiplierBasedOnColor * textSizeMultiplier : textSizeMultiplier;\\n\\n\\t\\t// if distanceTravelled > 0.0 then this particle has moved from default position and therefore is a text star\\n\\t\\tfloat size = texture2D(tSize, vUv).a;\\n\\t\\tsize = distanceTravelled > 0.0 ? mix(size, size * finalTextSizeMultiplier, distanceTravelledRatio > 1.0 ? 1.0 : distanceTravelledRatio) : size;\\n\\n\\t\\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n\\t\\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\\n\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t}\\n\";\n\nexports.fragmentShader = fragmentShader;\nexports.vertexShader = vertexShader;\n\n/***/ })\n],[4]);\n\n\n// WEBPACK FOOTER //\n// bundle.js","export function getParameterByName(name, url) {\n\tif (!url) {\n\t\turl = window.location.href;\n\t}\n\n\tname = name.replace(/[\\[\\]]/g, '\\\\$&');\n\tconst regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`);\n\tconst results = regex.exec(url);\n\n\tif (!results) return null;\n\tif (!results[2]) return '';\n\n\treturn decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nexport function getZRatio() {\n  if (window.innerWidth > 1100) {\n    return 170;\n  } else if (window.innerWidth > 700) {\n    return 100;\n  } else if (window.innerWidth > 500) {\n    return 85;\n  } else {\n    return 50;\n  }\n}\n\nexport function createDataTexture({\n\tdata,\n\ttWidth,\n\ttHeight,\n\tformat,\n\tfilterType\n}) {\n\tconst dataTexture = new THREE.DataTexture(\n\t\tdata,\n\t\ttWidth,\n\t\ttHeight,\n\t\tformat,\n\t\tTHREE.FloatType\n\t);\n\n\tdataTexture.minFilter = dataTexture.magFilter = filterType;\n\tdataTexture.needsUpdate = true;\n\tdataTexture.flipY = false;\n\n\treturn dataTexture;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","import isWebglEnabled from 'detector-webgl';\nimport { getParameterByName, getZRatio } from './utils';\nimport Camera from './io/camera';\nimport Renderer from './io/renderer';\nimport Scene from './objects/scene';\nimport Particles from './objects/particles';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tif (isWebglEnabled) {\n\t\tconst container = document.getElementById('stars-simulation-container');\n\t\tconst renderer = new Renderer({ container });\n\t\tconst scene = new Scene();\n\t\tconst particles = new Particles({\n\t\t\trenderer,\n\t\t\tskew: \t\t\t\t\t\t\t\t\t\t\t\t\t10,\n\t\t  hoverDist: \t\t\t\t\t\t\t\t\t\t\t0.04,\n\t\t  hoverSizeInc: \t\t\t\t\t\t\t\t\t0.01,\n\t\t  hoverMaxSizeMultiplier: \t\t\t\t3,\n\t\t\ttextColourDivider:\t\t \t\t\t\t\t2,\n\t\t  textSizeMultiplier: \t\t\t\t\t\t7.5,\n\t\t  textPositionMultiplier:\t\t\t\t\t6,\n\t\t  minSize:\t\t\t\t\t\t\t\t\t\t\t\t0.02,\n\t\t  maxSize: \t\t\t\t\t\t\t\t\t\t\t\t0.05,\n\t\t  sizeDif:\t\t\t\t\t\t\t\t\t\t\t\t2,\n\t\t  incSize: \t\t\t\t\t\t\t\t\t\t\t\t0.0001,\n\t\t\tnumParticles: \t\t\t\t\t\t\t\t\t150000,\n\t\t  radius: \t\t\t\t\t\t\t\t\t\t\t\t4,\n\t\t  topSpeed:\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t  acceleration:\t\t\t\t\t\t\t\t\t\t0.0001\n\t\t});\n\t\tconst camera = new Camera({\n\t\t\tparticles,\n\t\t\tposition: {\n\t\t    x: \t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t    y: \t\t\t\t\t\t\t\t\t\t\t\t\t\t-0.001,\n\t\t    z: \t\t\t\t\t\t\t\t\t\t\t\t\t\t4.5\n\t\t  }\n\t\t});\n\n\t\tconst init = () => {\n\t\t\tscene.add(particles.get());\n\t\t};\n\n\t\tconst animate = () => {\n\t\t\trequestAnimationFrame(animate);\n\t\t\trender();\n\t\t};\n\n\t\tconst render = () => {\n\t\t\tparticles.update();\n\n\t\t\trenderer.render({\n\t\t\t\tscene: scene.get(),\n\t\t\t\tcamera: camera.get()\n\t\t\t});\n\t\t};\n\n\t\tinit();\n\t\tanimate();\n\t} else {\n\t\tconst info = document.getElementById('info');\n\t\tinfo.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.';\n\t}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { getZRatio } from '../utils';\n\nexport default class Camera {\n\tconstructor({\n\t\tparticles,\n\t\tfov = 400,\n\t\taspectRatio = window.innerWidth / window.innerHeight,\n\t\tnear = 0.1,\n\t\tfar = 2000,\n\t\tposition = {\n\t\t\tx: 0, y: 0, z: 0\n\t\t},\n\t\tup = [0, 0, 1]\n\t}) {\n\t\tthis.particles = particles;\n\t\tthis.particles.setCameraZ(position.z);\n\t\tthis.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n\t\tthis.up = up;\n\n\t\tthis.setPosition(position);\n\t\tthis.setUp(...this.up);\n\t\tthis.setLookAt();\n\n\t\t// window.addEventListener('resize', this.onWindowResize.bind(this));\n\t}\n\n\tonWindowResize() {\n\t\tconst WIDTH = window.innerWidth;\n\t\tconst HEIGHT = window.innerHeight;\n\n\t\tthis.camera.aspect = WIDTH / HEIGHT;\n\t\tthis.setZ(window.innerHeight / getZRatio());\n\t\tthis.camera.updateProjectionMatrix();\n\t}\n\n\tsetUp(x, y, z) {\n\t\tthis.camera.up.set(x, y, z);\n\t}\n\n\tsetPosition({\n\t\tx = this.camera.position.x,\n\t\ty = this.camera.position.y,\n\t\tz = this.camera.position.z\n\t}) {\n\t\tthis.setX(x);\n\t\tthis.setY(y);\n\t\tthis.setZ(z);\n\t}\n\n\tsetX(x) {\n\t\tthis.camera.position.x = x;\n\t\tthis.setLookAt();\n\t}\n\n\tsetY(y) {\n\t\tthis.camera.position.y = y;\n\t\tthis.setLookAt();\n\t}\n\n\tsetZ(z) {\n\t\tthis.camera.position.z = z;\n\t\tthis.setLookAt();\n\t\tthis.setUp(0, 0, 1);\n\t\tthis.particles.setCameraZ(z);\n\t}\n\n\tsetLookAt() {\n\t\tthis.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\t}\n\n\tget() {\n\t\treturn this.camera;\n\t}\n\n\tgetPosition() {\n\t\treturn this.camera.position;\n\t}\n\n\tgetZ() {\n\t\treturn this.camera.position.z;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/camera.js","export default class Renderer {\n\tconstructor({\n\t\talpha = true,\n\t\tpixelRatio = window.devicePixelRatio,\n\t\twidth = window.innerWidth,\n\t\theight =  window.innerHeight,\n\t\tcontainer\n\t}) {\n\t\tthis.renderer = new THREE.WebGLRenderer({ alpha });\n\t\tconst gl = this.renderer.context;\n  \tgl.enable(gl.BLEND);\n  \tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tthis.setPixelRatio(pixelRatio);\n\n\t\tthis.setSize(width, height);\n\n\t\tcontainer.appendChild(this.getDomElement());\n\t\twindow.addEventListener('resize', this.onWindowResize.bind(this));\n\t}\n\n\tgetDomElement() {\n\t\treturn this.renderer.domElement;\n\t}\n\n\tonWindowResize() {\n\t\tconst WIDTH = window.innerWidth;\n\t\tconst HEIGHT = window.innerHeight;\n\n\t\tthis.renderer.setSize(WIDTH, HEIGHT);\n\t}\n\n\tsetPixelRatio(pixelRatio) {\n\t\tthis.renderer.setPixelRatio(pixelRatio);\n\t}\n\n\tsetSize(w, h) {\n\t\tthis.renderer.setSize(w, h);\n\t}\n\n\trender({\n\t\tscene,\n\t\tcamera,\n\t\trenderTarget = null,\n\t\tforce = false\n\t} = {}) {\n\t\tthis.renderer.render(scene, camera, renderTarget, force);\n\t}\n\n\tget() {\n\t\treturn this.renderer;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/renderer.js","export default class Canvas {\n\tconstructor() {\n\t\tthis.scene = new THREE.Scene();\n\t}\n\n\tadd(obj) {\n\t\tthis.scene.add(obj);\n\t}\n\n\tremove(obj) {\n\t\tthis.scene.remove(obj);\n\t}\n\n\tget() {\n\t\treturn this.scene;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/scene.js","import FBO from 'three.js-fbo';\nimport { createDataTexture } from '../utils';\nimport { positionSimulationVertexShader, positionSimulationFragmentShader } from '../shaders/positionSimulationShaders';\nimport { sizeSimulationVertexShader, sizeSimulationFragmentShader } from '../shaders/sizeSimulationShaders';\nimport { vertexShader, fragmentShader } from '../shaders/shaders';\n\nexport default class Particles {\n\tconstructor({\n\t\tnumParticles = 10000,\n\t\tconfigUniforms = {\n\t\t\tcolor: { value: new THREE.Color( 0xffffff ) },\n\t\t\tsizeMultiplierForScreen: { value: (window.innerHeight * window.devicePixelRatio) / 2 },\n\t\t\tstarImg: { value: new THREE.TextureLoader().load('assets/images/star.png') }\n\t\t},\n\t\tblending = THREE.AdditiveBlending,\n\t\ttransparent = true,\n\t\tdepthTest = true,\n\t\tdepthWrite = false,\n\n\t\trenderer,\n\n\t\tradius = 100, // radius of outer particle\n\n\t\t// used to define and animate sizes\n\t\tsizeDif = 0.5, // the amount the size is allowed to fluxuate in animation\n\t\tminSize = 1,\n\t\tmaxSize = 3,\n\t\tincSize = 0.01, // the amount the size is increased / decreased per frame\n\n\t\t// used to define raycasting boundries\n\t\thoverDist = 10,\n\t\thoverSizeInc = 0.05,\n\t\thoverMaxSizeMultiplier = 5,\n\t\tskew = 1,\n\n\t\t// values to use when stars form text\n\t\tanimationFrames = [],\n\t\ttopSpeed = 0.07,\n\t\tacceleration = 0.01,\n\t\ttextColourDivider = 2,\n\t\ttextSizeMultiplier = 2,\n\t\ttextPositionMultiplier = 2,\n\t}) {\n\t\tthis.renderer = renderer;\n\n\t\tthis.numParticles = numParticles;\n\t\tthis.radius = radius;\n\t\tthis.skew = skew; // skews the median size\n\n\t\t// used to define star glinting\n\t\tthis.sizeDif = sizeDif;\n\t\tthis.minSize = minSize;\n\t\tthis.maxSize = maxSize;\n\t\tthis.incSize = incSize;\n\n\t\t// used to define mouse interaction animation\n\t\tthis.hoverDist = hoverDist;\n\t\tthis.hoverSizeInc = hoverSizeInc;\n\t\tthis.hoverMaxSizeMultiplier = hoverMaxSizeMultiplier;\n\n\t\t// use to define moving particles\n\t\tthis.topSpeed = topSpeed;\n\t\tthis.acceleration = acceleration;\n\t\tthis.textColourDivider = textColourDivider;\n\t\tthis.textSizeMultiplier = textSizeMultiplier;\n\t\tthis.textPositionMultiplier = textPositionMultiplier;\n\t\tthis.animationFrames = animationFrames;\n\n\t\t// used to define mouse interaction\n\t\tthis.windowHalfX = window.innerWidth / 2;\n\t\tthis.windowHalfY = window.innerHeight / 2;\n\n\t\t// height and width that set up a texture in memory\n\t\t// this texture is used to store particle position values\n\t\tconst tHeight = Math.ceil(Math.sqrt(this.numParticles));\n\t\tconst tWidth = tHeight;\n\t\tthis.numParticles = tWidth * tHeight;\n\n\t\tthis.positions = new Float32Array(this.numParticles * 3);\n\n\t\tthis.positionFBO = new FBO({\n\t\t\ttWidth,\n\t\t\ttHeight,\n\t\t\trenderer: renderer.get(),\n\t\t\tuniforms: {\n\t\t\t\ttDefaultPosition: { type: 't', value: 0 }, // default star positions\n\t\t\t\ttText: { type: 't', value: 0 }, // texture holding text\n\n\t\t\t\ttopSpeed: { type: 'f', value: this.topSpeed }, // the top speed of stars\n\t\t\t\tacceleration: { type: 'f', value: this.acceleration }, // the star particle acceleration\n\n\t\t\t\ttextPositionMultiplier: { type: 'f', value: this.textPositionMultiplier }\n\t\t\t},\n\t\t\tsimulationVertexShader: positionSimulationVertexShader,\n\t\t\tsimulationFragmentShader: positionSimulationFragmentShader\n\t\t});\n\n\t\tthis.positionFBO.setTextureUniform('tDefaultPosition', this.getPositions());\n\n\t\tthis.sizeFBO = new FBO({\n\t\t\ttWidth,\n\t\t\ttHeight,\n\t\t\trenderer: renderer.get(),\n\t\t\tuniforms: {\n\t\t\t\ttPosition: { type: 't', value: 0 },\n\t\t\t\ttDefaultSize: { type: 't', value: 0 },\n\n\t\t\t\tmouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n\n\t\t\t\tsizeDif: { type: 'f', value: this.sizeDif },\n\t\t\t\tincSize: { type: 'f', value: this.incSize },\n\n\t\t\t\thoverDist: { type: 'f', value: this.hoverDist },\n\t\t\t\thoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n\t\t\t\thoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n\t\t\t},\n\t\t\tsimulationVertexShader: sizeSimulationVertexShader,\n\t\t\tsimulationFragmentShader: sizeSimulationFragmentShader\n\t\t});\n\n\t\tthis.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n\n\t\tconst uniforms = Object.assign({}, configUniforms, {\n\t\t\ttDefaultPosition: { type: 't', value: this.positionFBO.simulationShader.uniforms.tDefaultPosition.value },\n\t\t\ttText: { type: 't', value: 0 },\n\t\t\ttPosition: { type: 't', value: this.positionFBO.targets[0] },\n\t\t\ttSize: { type: 't', value: this.sizeFBO.targets[0] },\n\t\t\ttextColourDivider: { type: 'f', value: this.textColourDivider },\n\t\t\ttextSizeMultiplier: { type: 'f', value: this.textSizeMultiplier },\n\n\t\t\ttColour: { type: 't', value: createDataTexture({\n\t\t\t\tdata: this.getColours(),\n\t\t\t\ttWidth,\n\t\t\t\ttHeight,\n\t\t\t\tformat: this.positionFBO.format,\n\t\t\t\tfilterType: this.positionFBO.filterType\n\t\t\t}) }\n\t\t});\n\n\t\tthis.material = new THREE.ShaderMaterial({\n\t\t\tuniforms,\n\t\t\tvertexShader,\n\t\t\tfragmentShader,\n\t\t\tblending,\n\t\t\ttransparent,\n\t\t\tdepthTest,\n\t\t\tdepthWrite\n\t\t});\n\n\t\t// set uv coords of particles in texture as positions\n\t\tconst geometry = new THREE.Geometry();\n\n\t\tfor (let i = 0; i < this.numParticles; i++) {\n\t\t\tconst vertex = new THREE.Vector3();\n\t\t\tvertex.x = (i % tWidth) / tWidth;\n\t\t\tvertex.y = Math.floor(i / tWidth) / tHeight;\n\t\t\tgeometry.vertices.push(vertex);\n\t\t}\n\n\t\tthis.particles = new THREE.Points(geometry, this.material);\n\t\tthis.particles.frustumCulled = false;\n\t\t\n\t\tthis.text = ''\n\t\tdocument.onkeydown = this.onTextInput.bind(this);\n\n\t\twindow.addEventListener('resize', this.onWindowResize.bind(this));\n\t\t// document.addEventListener('touchmove', this.onMouseMove.bind(this), false);\n\t\tdocument.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n\t}\n\n\tsetAnimation() {\n\t\tthis.animationFrames.forEach(animationFrame =>\n\t\t\tsetTimeout(() => this.createCanvasAnimation(animationFrame), animationFrame.animationDelay || 0)\n\t\t);\n\t}\n\n\tonWindowResize() {\n\t\tthis.windowHalfX = window.innerWidth / 2;\n\t\tthis.windowHalfY = window.innerHeight / 2;\n\t}\n\n\tonMouseMove(event) {\n\t\tconst xMultiplier = this.cameraZ / (this.windowHalfY * 2.8);\n\t\tconst yMultiplier = this.cameraZ / (this.windowHalfY * 2.65);\n\t\tconst mouseX = event.clientX - this.windowHalfX;\n\t\tconst mouseY = this.windowHalfY - event.clientY;\n\n\t\tthis.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0);\n\t}\n\t\n\tsetTextTexture(textCanvas) {\n\t\tconst textTexture = new THREE.Texture(textCanvas);\n\t\ttextTexture.minFilter = textTexture.magFilter = THREE.NearestFilter;\n\t\ttextTexture.needsUpdate = true;\n\t\ttextTexture.flipY = true;\n\t\tthis.positionFBO.simulationShader.uniforms.tText.value = this.material.uniforms.tText.value = textTexture;\n\t}\n\n\tonTextInput({\n\t\tkey = ''\n\t}) {\n\t\tconst canvasDepth = 1;\n\t\tconst textCanvas = document.createElement('canvas');\n\t\t\n\t\tif (key !== 'Backspace' && (key.length !== 1 || !key.match(/[a-z ]?/i))) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (key === 'Backspace') {\n\t\t\tthis.text = this.text.slice(0, -1)\n\t\t} else {\n\t\t\tthis.text += key;\n\t\t}\n\t\t\n\t\ttextCanvas.width = textCanvas.height = Math.sqrt(this.numParticles) * canvasDepth;\n\t\t\n\t\tconst canvasCenterV = textCanvas.height / 2;\n\t\tconst canvasCenterH = textCanvas.width / 2;\n\t\tconst ctx = textCanvas.getContext('2d', {\n\t\t\talpha: false\n\t\t});\n\n\t\tctx.font = `80px bold serif`;\n\t\tctx.fillStyle = 'white';\n\t\tctx.fillText(this.text, 0, canvasCenterV, textCanvas.width);\n\t\t\n\t\tthis.setTextTexture(textCanvas);\n\t}\n\n\tgetPositions() {\n\t\tconst vertices = new Float32Array(this.numParticles * 4);\n\t\tfor (let i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n\t\t\tconst vertice = this.calcPosition();\n\n\t\t\tthis.positions[i3] = vertices[i4] = vertice[0];\n\t\t\tthis.positions[i3 + 1] = vertices[i4 + 1] = vertice[1];\n\t\t\tthis.positions[i3 + 2] = vertices[i4 + 2] = vertice[2];\n\n\t\t\tvertices[i4 + 3] = 0.0; // stores whether particle is representing text or not\n\t\t}\n\t\treturn vertices;\n\t}\n\n\tcalcPosition() {\n\t\tconst radius = this.radius;\n\t\tconst x = Math.random() - 0.5;\n\t\tconst y = Math.random() - 0.5;\n\t\tconst z = 0;\n\t\tconst d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n\n\t\treturn [\n\t\t\tx * d,\n\t\t\ty * d,\n\t\t\tz\n\t\t];\n\t}\n\n\tgetSizes() {\n\t\tconst sizes = new Float32Array(this.numParticles * 4);\n\t\tfor (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n\t\t\tsizes[i4 + 3] = this.calcSize();\n\t\t}\n\t\treturn sizes;\n\t}\n\n\tcalcSize() {\n\t\tconst sizeRange = this.maxSize - this.minSize;\n\t\tconst size = this.minSize + (sizeRange * Math.pow(Math.random(), this.skew));\n\n\t\treturn size;\n\t}\n\n\tgetColours() {\n\t\tconst colours = new Float32Array(this.numParticles * 4);\n\t\tfor (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n\t\t\tconst colour = this.calcColour();\n\n\t\t\tcolours[i4] = colour[0];\n\t\t\tcolours[i4 + 1] = colour[1];\n\t\t\tcolours[i4 + 2] = colour[2];\n\t\t\tcolours[i4 + 3] = colour[3];\n\t\t}\n\n\t\treturn colours;\n\t}\n\n\tcalcColour() {\n\t\tconst randomVal = Math.random();\n\t\tlet r;\n\t\tlet g;\n\t\tlet b;\n\n\t\tif (randomVal > 0.7) {\n\t\t\tconst highRandomVal = Math.ceil((1 - randomVal) * 10);\n\n\t\t\tswitch (highRandomVal) {\n\t\t\t\tcase 3:\n\t\t\t\t\tr = randomVal * 2.1;\n\t\t\t\t\tg = randomVal * 1.6;\n\t\t\t\t\tb = randomVal * 1.2;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tr = randomVal * 1.6;\n\t\t\t\t\tg = randomVal * 4;\n\t\t\t\t\tb = randomVal * 4;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tr = randomVal * 3;\n\t\t\t\t\tg = randomVal * 3;\n\t\t\t\t\tb = randomVal * 1.6;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tr = randomVal * 1.6;\n\t\t\tg = randomVal * 1.6;\n\t\t\tb = randomVal * 1.2;\n\t\t}\n\n\t\treturn [r, g, b, randomVal];\n\t}\n\n\tupdate() {\n\t\tthis.positionFBO.simulate();\n\t\tthis.sizeFBO.simulate();\n\t\tthis.sizeFBO.simulationShader.uniforms.tPosition.value = this.material.uniforms.tPosition.value = this.positionFBO.getCurrentFrame();\n\t\tthis.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame();\n\t}\n\n\tget() {\n\t\treturn this.particles;\n\t}\n\n\tsetCameraZ(newCameraZ) {\n\t\tthis.cameraZ = newCameraZ;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/particles.js","const positionSimulationFragmentShader = `\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\n\tuniform sampler2D tDefaultPosition;\n\tuniform sampler2D tText;\n\n\tuniform float topSpeed;\n\tuniform float acceleration;\n\tuniform float textPositionMultiplier;\n\n\tvec3 setTopSpeed(vec3 speed, float topSpeed) {\n\t\treturn vec3(\n\t\t\tspeed.x > topSpeed ? topSpeed : speed.x < -topSpeed ? -topSpeed : speed.x,\n\t\t\tspeed.y > topSpeed ? topSpeed : speed.y < -topSpeed ? -topSpeed : speed.y,\n\t\t\tspeed.z > topSpeed ? topSpeed : speed.z < -topSpeed ? -topSpeed : speed.z\n\t\t);\n\t}\n\n\tvec3 moveParticleToGoal(vec3 currPos, vec3 prevPos, vec3 goal) {\n\t\tvec3 distanceToGoal = goal - currPos;\n\t\tvec3 acceleration = normalize(distanceToGoal) * acceleration;\n\t\tfloat distanceToGoalL = length(distanceToGoal);\n\n\t\tvec3 currVelocity = currPos - prevPos;\n\t\tfloat currVelocityL = length(currVelocity);\n\n\t\tif (distanceToGoalL > currVelocityL) {\n\t\t\tvec3 velocity = currVelocity + acceleration;\n\n\t\t\tvelocity = setTopSpeed(velocity, topSpeed);\n\n\t\t\treturn currPos + velocity;\n\t\t} else {\n\t\t\treturn goal;\n\t\t}\n\t}\n\n\tvoid main() {\n\t\tvec3 defaultPos = texture2D(tDefaultPosition, vUv).xyz;\n\t\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\n\t\tvec3 position = texture2D(tCurr, vUv).xyz;\n\t\tfloat textOpacity = texture2D(tText, vUv).r;\n\t\tfloat isTextParticle = 0.0;\n\n\t\tif (prevPos == vec3(0.0, 0.0, 0.0)) {\n\t\t\tposition = defaultPos;\n\t\t}\n\n\t\tif (textOpacity > 0.0) {\n\t\t\tposition = moveParticleToGoal(position, prevPos, vec3((vUv - 0.5) * textPositionMultiplier, 0.0));\n\n\t\t\tisTextParticle = 1.0;\n\t\t} else {\n\t\t\tposition = moveParticleToGoal(position, prevPos, defaultPos);\n\t\t}\n\n\t\t// write new positions out\n\t\tgl_FragColor = vec4(position, isTextParticle);\n\t}\n`;\n\nconst positionSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`;\n\nexport {\n\tpositionSimulationFragmentShader,\n\tpositionSimulationVertexShader\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/positionSimulationShaders.js","const sizeSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tDefaultSize;\n\n\tuniform vec3 mouse;\n\tuniform float incSize;\n\tuniform float sizeDif;\n\n\tuniform float hoverDist;\n\tuniform float hoverSizeInc;\n\tuniform float hoverMaxSizeMultiplier;\n\n\tfloat getSize() {\n\t\tvec3 currPosition = texture2D(tPosition, vUv).xyz;\n\t\tfloat defaultSize = texture2D(tDefaultSize, vUv).w;\n\t\tfloat prevSize = texture2D(tPrev, vUv).w;\n\t\tfloat size = texture2D(tCurr, vUv).w;\n\t\tfloat sizeRange = defaultSize / sizeDif;\n\n\t\tif (size == 0.0) {\n\t\t\tsize = defaultSize;\n\t\t} else if (prevSize == 0.0 || size == prevSize) {\n\t\t\tsize = rand(vUv) > 0.5 ? size + incSize : size - incSize;\n\t\t} else if (size < (defaultSize - sizeRange)) {\n\t\t\tsize += incSize;\n\t\t} else if (size > (defaultSize + sizeRange)) {\n\t\t\tsize -= incSize;\n\t\t} else {\n\t\t\tsize += size - prevSize;\n\t\t}\n\n\t\tfloat dist = length(currPosition.xy - mouse.xy);\n\n\t\tif (dist < hoverDist && size < (defaultSize * hoverMaxSizeMultiplier)) {\n\t\t\tsize += hoverSizeInc;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\tvoid main() {\n\t\t// write new size out\n\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\n\t}\n`;\n\nconst sizeSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`;\n\nexport {\n\tsizeSimulationFragmentShader,\n\tsizeSimulationVertexShader\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/sizeSimulationShaders.js","const fragmentShader = `\n\tuniform sampler2D tDefaultPosition;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D starImg;\n\tuniform sampler2D tColour;\n\n\tuniform float textColourDivider;\n\n\tvarying vec2 vUv;\n\n\tfloat setFloatVal(float myFloat) {\n\t\treturn myFloat + 0.1;\n\t}\n\n\tvec4 setFragVal(vec4 frag) {\n\t\tfrag.r = setFloatVal(frag.r);\n\t\tfrag.g = setFloatVal(frag.g);\n\t\tfrag.b = setFloatVal(frag.b);\n\t\tfrag.a = setFloatVal(frag.a);\n\n\t\treturn frag;\n\t}\n\n\tvoid main() {\n\t\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\n\t\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\n\t\tvec3 position = texture2D(tPosition, vUv).xyz;\n\t\tfloat distanceTravelled = length(position - defaultPosition);\n\t\tfloat distanceToTravel = length(goal - defaultPosition);\n\t\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\n\n\t\tvec4 colour = texture2D(tColour, vUv).rgba;\n\n\t\tgl_FragColor = setFragVal(colour);\n\t\tgl_FragColor = distanceTravelledRatio <= 0.3 ? (colour / textColourDivider) : setFragVal(colour);\n\t\tgl_FragColor = gl_FragColor * texture2D(starImg, gl_PointCoord);\n\t}\n`;\n\nconst vertexShader = `\n\tuniform sampler2D tDefaultPosition;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tSize;\n\tuniform sampler2D tText;\n\n\tuniform float sizeMultiplierForScreen;\n\tuniform float textSizeMultiplier;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvUv = position.xy;\n\t\tvec3 goal = vec3((vUv - 0.5) * 4.0, 0);\n\n\t\t// position saved as rgba / xyzw value in a texture object in memory\n\t\tvec3 defaultPosition = texture2D(tDefaultPosition, vUv).xyz;\n\t\tvec3 position = texture2D(tPosition, vUv).xyz;\n\t\tfloat distanceToTravel = length(goal - defaultPosition);\n\t\tfloat distanceTravelled = length(position - defaultPosition);\n\t\tfloat distanceTravelledRatio = distanceTravelled / distanceToTravel;\n\n\t\t// set size based on red value (to add depth to B&W images)\n\t\tfloat textSizeMultiplierBasedOnColor = texture2D(tText, vUv).r;\n\t\tfloat finalTextSizeMultiplier = textSizeMultiplierBasedOnColor > 0.0 ? textSizeMultiplierBasedOnColor * textSizeMultiplier : textSizeMultiplier;\n\n\t\t// if distanceTravelled > 0.0 then this particle has moved from default position and therefore is a text star\n\t\tfloat size = texture2D(tSize, vUv).a;\n\t\tsize = distanceTravelled > 0.0 ? mix(size, size * finalTextSizeMultiplier, distanceTravelledRatio > 1.0 ? 1.0 : distanceTravelledRatio) : size;\n\n\t\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\t\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t}\n`;\n\nexport {\n\tfragmentShader,\n\tvertexShader\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/shaders.js"],"sourceRoot":""}