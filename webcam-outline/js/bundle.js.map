{"version":3,"sources":["webpack:///js/bundle.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/io/controls.js","webpack:///./src/js/main.js","webpack:///./src/js/io/camera.js","webpack:///./src/js/io/renderer.js","webpack:///./src/js/objects/scene.js","webpack:///./src/js/objects/particles.js","webpack:///./src/js/shaders/size-simulation-shaders.js","webpack:///./src/js/shaders/black-and-white-webcam.js","webpack:///./src/js/shaders/difference-webcam.js","webpack:///./src/js/shaders/shaders.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","THREE","getZRatio","window","innerWidth","createDataTexture","_ref","data","tWidth","tHeight","format","filterType","dataTexture","DataTexture","FloatType","minFilter","magFilter","needsUpdate","flipY","call","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","detector_webgl","detector_webgl_default","n","stats_min","stats_min_default","io_camera","dat_gui","dat_gui_default","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","controls_Controls","Controls","arguments","undefined","particles","scene","this","gui","a","GUI","addColor","add","keys","fonts","onFinishChange","updateTextTexture","min","max","step","updateParticleVars","minSize","maxSize","updateSizes","updateColours","controls","io_renderer","objects_scene","objects_particles","document","addEventListener","container","getElementById","renderer","numParticles","matchMedia","matches","radius","sizeRange","sizeInc","skew","brightness","opacity","webcamOutlineStrength","camera","aspectRatio","position","x","y","z","stats","render","begin","update","get","end","showPanel","body","appendChild","dom","animate","requestAnimationFrame","innerHTML","_toConsumableArray","arr","Array","isArray","arr2","from","__WEBPACK_IMPORTED_MODULE_0__utils__","Camera","_ref$fov","fov","_ref$aspectRatio","innerHeight","_ref$near","near","_ref$far","far","_ref$position","_ref$up","up","setCameraZ","PerspectiveCamera","setPosition","setUp","apply","setLookAt","WIDTH","HEIGHT","aspect","setZ","updateProjectionMatrix","set","_ref2","_ref2$x","_ref2$y","_ref2$z","setX","setY","lookAt","Vector3","Renderer","_ref$alpha","alpha","_ref$pixelRatio","pixelRatio","devicePixelRatio","_ref$width","width","_ref$height","height","WebGLRenderer","gl","context","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setPixelRatio","setSize","getDomElement","onWindowResize","bind","domElement","w","h","_ref2$renderTarget","renderTarget","_ref2$force","force","Canvas","Scene","obj","remove","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__","__WEBPACK_IMPORTED_MODULE_3__shaders_black_and_white_webcam__","__WEBPACK_IMPORTED_MODULE_4__shaders_difference_webcam__","__WEBPACK_IMPORTED_MODULE_5__shaders_shaders__","Particles","_this","_ref$configUniforms","configUniforms","color","Color","sizeMultiplierForScreen","_ref$blending","blending","AdditiveBlending","_ref$transparent","transparent","_ref$depthTest","depthTest","_ref$depthWrite","depthWrite","_ref$bgColorTop","bgColorTop","_ref$bgColorBottom","bgColorBottom","_ref$numParticles","_ref$radius","_ref$minSize","_ref$maxSize","_ref$sizeRange","_ref$sizeInc","_ref$skew","_ref$brightness","_ref$opacity","_ref$webcamOutlineStr","windowHalfX","windowHalfY","videoEl","createElement","noSupport","navigator","getUserMedia","video","stream","src","URL","createObjectURL","autoplay","addStars","console","error","getElementsByTagName","append","Math","ceil","sqrt","webcamEl","webcamElContext","getContext","webcamTexture","Texture","NearestFilter","webcamDiffEl","webcamDiffElContext","webcamDiffTexture","positions","Float32Array","blackAndWhiteFBO","uniforms","tWebcam","type","simulationVertexShader","simulationFragmentShader","webcamDifferenceFBO","webcamWidth","webcamHeight","sizeFBO","tPosition","tDefaultSize","hoverDist","hoverSizeInc","hoverMaxSizeMultiplier","setTextureUniform","getPositions","getSizes","assign","simulationShader","tSize","targets","tColour","material","ShaderMaterial","vertexShader","fragmentShader","geometry","Geometry","vertex","floor","vertices","push","Points","frustumCulled","ready","event","xMultiplier","cameraZ","yMultiplier","mouseX","clientX","mouseY","clientY","mouse","i3","i4","vertice","calcPosition","random","d","pow","sizes","calcSize","colours","colour","calcColour","_this2","randomVal","getColor","r","g","b","_webcamEl","videoWidth","videoHeight","readyState","HAVE_ENOUGH_DATA","drawImage","simulate","getCurrentFrame","newCameraZ","getColours","_bgColorTop","newVal","style","background","_bgColorBottom","sizeSimulationFragmentShader","sizeSimulationVertexShader","blackAndWhiteSimulationFragmentShader","blackAndWhiteSimulationVertexShader","differenceSimulationFragmentShader","differenceSimulationVertexShader"],"mappings":"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","file":"js/bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* unused harmony export getParameterByName */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getZRatio;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createDataTexture;\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(url);\n\n  if (!results) return null;\n  if (!results[2]) return '';\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getZRatio() {\n  if (window.innerWidth > 1100) {\n    return 170;\n  } else if (window.innerWidth > 700) {\n    return 100;\n  } else if (window.innerWidth > 500) {\n    return 85;\n  } else {\n    return 50;\n  }\n}\n\nfunction createDataTexture(_ref) {\n  var data = _ref.data,\n      tWidth = _ref.tWidth,\n      tHeight = _ref.tHeight,\n      format = _ref.format,\n      filterType = _ref.filterType;\n\n  var dataTexture = new THREE.DataTexture(data, tWidth, tHeight, format, THREE.FloatType);\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType;\n  dataTexture.needsUpdate = true;\n  dataTexture.flipY = false;\n\n  return dataTexture;\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/detector-webgl/index.js\nvar detector_webgl = __webpack_require__(1);\nvar detector_webgl_default = /*#__PURE__*/__webpack_require__.n(detector_webgl);\n\n// EXTERNAL MODULE: ./node_modules/stats.js/build/stats.min.js\nvar stats_min = __webpack_require__(2);\nvar stats_min_default = /*#__PURE__*/__webpack_require__.n(stats_min);\n\n// EXTERNAL MODULE: ./src/js/io/camera.js\nvar io_camera = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/dat-gui/index.js\nvar dat_gui = __webpack_require__(4);\nvar dat_gui_default = /*#__PURE__*/__webpack_require__.n(dat_gui);\n\n// CONCATENATED MODULE: ./src/js/io/controls.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar controls_Controls = function () {\n  function Controls() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        particles = _ref.particles,\n        scene = _ref.scene;\n\n    _classCallCheck(this, Controls);\n\n    this.gui = new dat_gui_default.a.GUI();\n\n    // this.addBgControls(particles)\n    // this.addTextControls(particles)\n    // this.addMouseControls(particles)\n    // this.addSizeControls(particles)\n    // this.addColourStrengthControls(particles)\n    // this.addOpacityControls(particles)\n  }\n\n  _createClass(Controls, [{\n    key: 'addBgControls',\n    value: function addBgControls(particles) {\n      this.gui.addColor(particles, 'bgColorTop');\n\n      this.gui.addColor(particles, 'bgColorBottom');\n    }\n  }, {\n    key: 'addTextControls',\n    value: function addTextControls(particles) {\n      this.gui.add(particles, 'font', Object.keys(fonts)).onFinishChange(function () {\n        particles.updateTextTexture();\n      });\n\n      this.gui.add(particles, 'fontSize').min(10).max(200).step(5).onFinishChange(function () {\n        particles.updateTextTexture();\n      });\n\n      this.gui.add(particles, 'textAlign', ['left', 'center']).onFinishChange(function () {\n        particles.updateTextTexture();\n      });\n\n      this.gui.add(particles, 'textSizeMultiplier').min(1).max(1000).step(10).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'topSpeed').min(0.1).max(10).step(0.1).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'acceleration').min(0.00001).max(0.01).step(0.00001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addMouseControls',\n    value: function addMouseControls(particles) {\n      this.gui.add(particles, 'hoverDist').min(0).max(0.5).step(0.01).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverSizeInc').min(0).max(0.03).step(0.001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n\n      this.gui.add(particles, 'hoverMaxSizeMultiplier').min(1).max(3).step(0.05).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addSizeControls',\n    value: function addSizeControls(particles) {\n      this.gui.add(particles, 'minSize').min(0.01).max(0.04).step(0.001).onFinishChange(function () {\n        if (particles.minSize > particles.maxSize) {\n          particles.minSize = particles.maxSize;\n        }\n\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'maxSize').min(0.01).max(0.04).step(0.001).onFinishChange(function () {\n        if (particles.maxSize < particles.minSize) {\n          particles.maxSize = particles.minSize;\n        }\n\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeInc').min(0.00001).max(0.0002).step(0.00001).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'sizeRange').min(0).max(0.02).step(0.0005).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'skew').min(1).max(100).step(1).onFinishChange(function () {\n        particles.updateSizes();\n      });\n    }\n  }, {\n    key: 'addColourStrengthControls',\n    value: function addColourStrengthControls(particles) {\n      this.gui.add(particles, 'brightness').min(0.1).max(3).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }, {\n    key: 'addOpacityControls',\n    value: function addOpacityControls(particles) {\n      this.gui.add(particles, 'opacity').min(0.1).max(1.5).step(0.05).onFinishChange(function () {\n        particles.updateColours();\n      });\n    }\n  }]);\n\n  return Controls;\n}();\n\n/* harmony default export */ var controls = (controls_Controls);\n// EXTERNAL MODULE: ./src/js/io/renderer.js\nvar io_renderer = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./src/js/objects/scene.js\nvar objects_scene = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./src/js/objects/particles.js\nvar objects_particles = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./src/js/main.js\n\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (detector_webgl_default.a) {\n    var container = document.getElementById('stars-simulation-container');\n    var renderer = new io_renderer[\"a\" /* default */]({ container: container });\n    var scene = new objects_scene[\"a\" /* default */]();\n    var particles = new objects_particles[\"a\" /* default */]({\n      scene: scene,\n      renderer: renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 4000 : 100000,\n      radius: 3,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 35,\n      brightness: 0.9,\n      opacity: 1,\n      webcamOutlineStrength: 1000\n    });\n    var camera = new io_camera[\"a\" /* default */]({\n      aspectRatio: 1,\n      particles: particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -1.37\n      }\n    });\n    var stats = new stats_min_default.a();\n\n    var init = function init() {\n      new controls({ particles: particles }); // eslint-disable-line\n\n      stats.showPanel(0);\n      document.body.appendChild(stats.dom);\n    };\n\n    var animate = function animate() {\n      requestAnimationFrame(animate); // eslint-disable-line\n      render();\n    };\n\n    var render = function render() {\n      stats.begin();\n\n      particles.update();\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      });\n\n      stats.end();\n    };\n\n    init();\n    animate();\n  } else {\n    var info = document.getElementById('info');\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.';\n  }\n});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar Camera = function () {\n  function Camera(_ref) {\n    var particles = _ref.particles,\n        _ref$fov = _ref.fov,\n        fov = _ref$fov === undefined ? 400 : _ref$fov,\n        _ref$aspectRatio = _ref.aspectRatio,\n        aspectRatio = _ref$aspectRatio === undefined ? window.innerWidth / window.innerHeight : _ref$aspectRatio,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 0.1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 2000 : _ref$far,\n        _ref$position = _ref.position,\n        position = _ref$position === undefined ? {\n      x: 0, y: 0, z: 0\n    } : _ref$position,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 0, 1] : _ref$up;\n\n    _classCallCheck(this, Camera);\n\n    this.particles = particles;\n    this.particles.setCameraZ(position.z);\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n    this.up = up;\n\n    this.setPosition(position);\n    this.setUp.apply(this, _toConsumableArray(this.up));\n    this.setLookAt();\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Camera, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.camera.aspect = WIDTH / HEIGHT;\n      this.setZ(window.innerHeight / Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* getZRatio */])());\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: 'setUp',\n    value: function setUp(x, y, z) {\n      this.camera.up.set(x, y, z);\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(_ref2) {\n      var _ref2$x = _ref2.x,\n          x = _ref2$x === undefined ? this.camera.position.x : _ref2$x,\n          _ref2$y = _ref2.y,\n          y = _ref2$y === undefined ? this.camera.position.y : _ref2$y,\n          _ref2$z = _ref2.z,\n          z = _ref2$z === undefined ? this.camera.position.z : _ref2$z;\n\n      this.setX(x);\n      this.setY(y);\n      this.setZ(z);\n    }\n  }, {\n    key: 'setX',\n    value: function setX(x) {\n      this.camera.position.x = x;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setY',\n    value: function setY(y) {\n      this.camera.position.y = y;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setZ',\n    value: function setZ(z) {\n      this.camera.position.z = z;\n      this.setLookAt();\n      this.setUp(0, 0, 1);\n      this.particles.setCameraZ(z);\n    }\n  }, {\n    key: 'setLookAt',\n    value: function setLookAt() {\n      this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.camera;\n    }\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return this.camera.position;\n    }\n  }, {\n    key: 'getZ',\n    value: function getZ() {\n      return this.camera.position.z;\n    }\n  }]);\n\n  return Camera;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n  function Renderer(_ref) {\n    var _ref$alpha = _ref.alpha,\n        alpha = _ref$alpha === undefined ? true : _ref$alpha,\n        _ref$pixelRatio = _ref.pixelRatio,\n        pixelRatio = _ref$pixelRatio === undefined ? window.devicePixelRatio : _ref$pixelRatio,\n        _ref$width = _ref.width,\n        width = _ref$width === undefined ? window.innerWidth : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === undefined ? window.innerHeight : _ref$height,\n        container = _ref.container;\n\n    _classCallCheck(this, Renderer);\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: alpha });\n    var gl = this.renderer.context;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    this.setPixelRatio(pixelRatio);\n\n    this.setSize(width, height);\n\n    container.appendChild(this.getDomElement());\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Renderer, [{\n    key: 'getDomElement',\n    value: function getDomElement() {\n      return this.renderer.domElement;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.renderer.setSize(WIDTH, HEIGHT);\n    }\n  }, {\n    key: 'setPixelRatio',\n    value: function setPixelRatio(pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio);\n    }\n  }, {\n    key: 'setSize',\n    value: function setSize(w, h) {\n      this.renderer.setSize(w, h);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          scene = _ref2.scene,\n          camera = _ref2.camera,\n          _ref2$renderTarget = _ref2.renderTarget,\n          renderTarget = _ref2$renderTarget === undefined ? null : _ref2$renderTarget,\n          _ref2$force = _ref2.force,\n          force = _ref2$force === undefined ? false : _ref2$force;\n\n      this.renderer.render(scene, camera, renderTarget, force);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.renderer;\n    }\n  }]);\n\n  return Renderer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderer);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Canvas = function () {\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    this.scene = new THREE.Scene();\n  }\n\n  _createClass(Canvas, [{\n    key: \"add\",\n    value: function add(obj) {\n      this.scene.add(obj);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(obj) {\n      this.scene.remove(obj);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.scene;\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Canvas);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaders_black_and_white_webcam__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shaders_difference_webcam__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shaders_shaders__ = __webpack_require__(17);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\nvar Particles = function () {\n  function Particles(_ref) {\n    var _this = this;\n\n    var scene = _ref.scene,\n        _ref$configUniforms = _ref.configUniforms,\n        configUniforms = _ref$configUniforms === undefined ? {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: window.innerHeight * window.devicePixelRatio / 2 }\n    } : _ref$configUniforms,\n        _ref$blending = _ref.blending,\n        blending = _ref$blending === undefined ? THREE.AdditiveBlending : _ref$blending,\n        _ref$transparent = _ref.transparent,\n        transparent = _ref$transparent === undefined ? true : _ref$transparent,\n        _ref$depthTest = _ref.depthTest,\n        depthTest = _ref$depthTest === undefined ? true : _ref$depthTest,\n        _ref$depthWrite = _ref.depthWrite,\n        depthWrite = _ref$depthWrite === undefined ? false : _ref$depthWrite,\n        renderer = _ref.renderer,\n        _ref$bgColorTop = _ref.bgColorTop,\n        bgColorTop = _ref$bgColorTop === undefined ? '#000000' : _ref$bgColorTop,\n        _ref$bgColorBottom = _ref.bgColorBottom,\n        bgColorBottom = _ref$bgColorBottom === undefined ? '#000000' : _ref$bgColorBottom,\n        _ref$numParticles = _ref.numParticles,\n        numParticles = _ref$numParticles === undefined ? 10000 : _ref$numParticles,\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? 100 : _ref$radius,\n        _ref$minSize = _ref.minSize,\n        minSize = _ref$minSize === undefined ? 1 : _ref$minSize,\n        _ref$maxSize = _ref.maxSize,\n        maxSize = _ref$maxSize === undefined ? 3 : _ref$maxSize,\n        _ref$sizeRange = _ref.sizeRange,\n        sizeRange = _ref$sizeRange === undefined ? 0.5 : _ref$sizeRange,\n        _ref$sizeInc = _ref.sizeInc,\n        sizeInc = _ref$sizeInc === undefined ? 0.01 : _ref$sizeInc,\n        _ref$skew = _ref.skew,\n        skew = _ref$skew === undefined ? 1 : _ref$skew,\n        _ref$brightness = _ref.brightness,\n        brightness = _ref$brightness === undefined ? 1 : _ref$brightness,\n        _ref$opacity = _ref.opacity,\n        opacity = _ref$opacity === undefined ? 1 : _ref$opacity,\n        _ref$webcamOutlineStr = _ref.webcamOutlineStrength,\n        webcamOutlineStrength = _ref$webcamOutlineStr === undefined ? 50 : _ref$webcamOutlineStr;\n\n    _classCallCheck(this, Particles);\n\n    this.renderer = renderer;\n\n    this.bgColorTop = bgColorTop;\n    this.bgColorBottom = bgColorBottom;\n\n    this.numParticles = numParticles;\n    this.radius = radius;\n\n    // used to define star glinting\n    this.minSize = minSize;\n    this.maxSize = maxSize;\n    this.sizeRange = sizeRange;\n    this.sizeInc = sizeInc;\n    this.skew = skew; // skews the median size\n\n    // webcm particle controls\n    this.webcamOutlineStrength = webcamOutlineStrength;\n\n    // use to define particle colours\n    this.brightness = brightness;\n    this.opacity = opacity;\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2;\n    this.windowHalfY = window.innerHeight / 2;\n\n    this.videoEl = document.createElement('video');\n\n    var noSupport = document.createElement('h1');\n    noSupport.innerHTML = 'Your browser is not supported. Please use Google Chrome (v21 or above).';\n\n    navigator.getUserMedia ? navigator.getUserMedia({ video: { width: 1280, height: 720 } }, function (stream) {\n      var videoEl = _this.videoEl;\n      videoEl.src = URL.createObjectURL(stream); // eslint-disable-line\n      videoEl.width = 480;\n      videoEl.height = 480;\n      videoEl.autoplay = true;\n\n      _this.addStars({\n        scene: scene,\n        renderer: renderer,\n        configUniforms: configUniforms,\n        blending: blending,\n        transparent: transparent,\n        depthTest: depthTest,\n        depthWrite: depthWrite\n      });\n    }, function () {\n      return console.error('video failed to load');\n    }) : document.getElementsByTagName('body')[0].append(noSupport);\n\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Particles, [{\n    key: 'addStars',\n    value: function addStars(_ref2) {\n      var scene = _ref2.scene,\n          renderer = _ref2.renderer,\n          configUniforms = _ref2.configUniforms,\n          blending = _ref2.blending,\n          transparent = _ref2.transparent,\n          depthTest = _ref2.depthTest,\n          depthWrite = _ref2.depthWrite;\n\n      // height and width that set up a texture in memory\n      // this texture is used to store particle position values\n      var tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles));\n      var tWidth = this.tWidth = tHeight;\n      this.numParticles = tWidth * tHeight;\n\n      var webcamEl = this.webcamEl = document.createElement('canvas');\n      this.webcamElContext = webcamEl.getContext('2d');\n\n      var webcamTexture = this.webcamTexture = new THREE.Texture(webcamEl);\n      webcamTexture.minFilter = webcamTexture.magFilter = THREE.NearestFilter;\n      webcamTexture.needsUpdate = true;\n\n      var webcamDiffEl = this.webcamDiffEl = document.createElement('canvas');\n      this.webcamDiffElContext = webcamDiffEl.getContext('2d');\n\n      var webcamDiffTexture = this.webcamDiffTexture = new THREE.Texture(webcamDiffEl);\n      webcamDiffTexture.minFilter = webcamDiffTexture.magFilter = THREE.NearestFilter;\n      webcamDiffTexture.needsUpdate = true;\n\n      this.positions = new Float32Array(this.numParticles * 3);\n\n      this.blackAndWhiteFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: this.webcamEl.width,\n        tHeight: this.webcamEl.height,\n        renderer: renderer.get(),\n        uniforms: {\n          tWebcam: { type: 't', value: webcamTexture }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_3__shaders_black_and_white_webcam__[\"b\" /* blackAndWhiteSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_3__shaders_black_and_white_webcam__[\"a\" /* blackAndWhiteSimulationFragmentShader */]\n      });\n\n      this.webcamDifferenceFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: this.webcamEl.width,\n        tHeight: this.webcamEl.height,\n        renderer: renderer.get(),\n        uniforms: {\n          webcamWidth: { type: 'f', value: this.webcamEl.width },\n          webcamHeight: { type: 'f', value: this.webcamEl.height },\n          tWebcam: { type: 't', value: 0 },\n          webcamOutlineStrength: { type: 'f', value: this.webcamOutlineStrength }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_4__shaders_difference_webcam__[\"b\" /* differenceSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_4__shaders_difference_webcam__[\"a\" /* differenceSimulationFragmentShader */]\n      });\n\n      this.sizeFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: tWidth,\n        tHeight: tHeight,\n        renderer: renderer.get(),\n        uniforms: {\n          tPosition: { type: 't', value: 0 },\n          tDefaultSize: { type: 't', value: 0 },\n          tWebcam: { type: 't', value: 0 },\n\n          sizeRange: { type: 'f', value: this.sizeRange },\n          sizeInc: { type: 'f', value: this.sizeInc },\n\n          hoverDist: { type: 'f', value: this.hoverDist },\n          hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n          hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__[\"b\" /* sizeSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_2__shaders_size_simulation_shaders__[\"a\" /* sizeSimulationFragmentShader */]\n      });\n\n      this.sizeFBO.setTextureUniform('tPosition', this.getPositions());\n      this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n\n      var uniforms = Object.assign({}, configUniforms, {\n        tPosition: { type: 't', value: this.sizeFBO.simulationShader.uniforms.tPosition.value },\n        tSize: { type: 't', value: this.sizeFBO.targets[0] },\n        tWebcam: { type: 't', value: webcamDiffTexture },\n\n        // tColour: { type: 't', value: this.getColours() }\n        tColour: { type: 't', value: webcamTexture }\n      });\n\n      this.material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: __WEBPACK_IMPORTED_MODULE_5__shaders_shaders__[\"b\" /* vertexShader */],\n        fragmentShader: __WEBPACK_IMPORTED_MODULE_5__shaders_shaders__[\"a\" /* fragmentShader */],\n        blending: blending,\n        depthTest: depthTest,\n        depthWrite: depthWrite,\n        transparent: transparent\n      });\n\n      // set uv coords of particles in texture as positions\n      var geometry = new THREE.Geometry();\n\n      for (var i = 0; i < this.numParticles; i++) {\n        var vertex = new THREE.Vector3();\n        vertex.x = i % tWidth / tWidth;\n        vertex.y = Math.floor(i / tWidth) / tHeight;\n        geometry.vertices.push(vertex);\n      }\n\n      this.particles = new THREE.Points(geometry, this.material);\n      this.particles.frustumCulled = false;\n\n      scene.add(this.get());\n\n      this.ready = true;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      this.windowHalfX = window.innerWidth / 2;\n      this.windowHalfY = window.innerHeight / 2;\n    }\n  }, {\n    key: 'onMouseMove',\n    value: function onMouseMove(event) {\n      var xMultiplier = this.cameraZ / (this.windowHalfY * 2.8);\n      var yMultiplier = this.cameraZ / (this.windowHalfY * 2.65);\n      var mouseX = event.clientX - this.windowHalfX;\n      var mouseY = this.windowHalfY - event.clientY;\n\n      this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0);\n    }\n  }, {\n    key: 'getPositions',\n    value: function getPositions() {\n      var vertices = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n        var vertice = this.calcPosition();\n\n        this.positions[i3] = vertices[i4] = vertice[0];\n        this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1];\n        this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2];\n\n        vertices[i4 + 3] = 1.0;\n      }\n\n      return vertices;\n    }\n  }, {\n    key: 'calcPosition',\n    value: function calcPosition() {\n      var radius = this.radius;\n      var x = Math.random() - 0.5;\n      var y = Math.random() - 0.5;\n      var z = 0;\n      var d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n\n      return [x * d, y * d, z];\n    }\n  }, {\n    key: 'getSizes',\n    value: function getSizes() {\n      var sizes = new Float32Array(this.numParticles * 4);\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        sizes[i4 + 3] = this.calcSize();\n      }\n      return sizes;\n    }\n  }, {\n    key: 'calcSize',\n    value: function calcSize() {\n      var sizeRange = this.maxSize - this.minSize;\n      var size = this.minSize + sizeRange * Math.pow(Math.random(), this.skew);\n\n      return size;\n    }\n  }, {\n    key: 'getColours',\n    value: function getColours() {\n      var colours = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        var colour = this.calcColour();\n\n        colours[i4] = colour[0];\n        colours[i4 + 1] = colour[1];\n        colours[i4 + 2] = colour[2];\n        colours[i4 + 3] = colour[3];\n      }\n\n      return Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* createDataTexture */])({\n        data: colours,\n        tWidth: this.tWidth,\n        tHeight: this.tHeight,\n        format: this.sizeFBO.format,\n        filterType: this.sizeFBO.filterType\n      });\n    }\n  }, {\n    key: 'calcColour',\n    value: function calcColour() {\n      var _this2 = this;\n\n      var randomVal = Math.ceil(Math.random() * 10);\n\n      var getColor = function getColor(r, g, b, a) {\n        return [_this2.brightness * r / 255, _this2.brightness * g / 255, _this2.brightness * b / 255, _this2.opacity];\n      };\n\n      switch (randomVal) {\n        case 1:\n          return getColor(155, 176, 255);\n\n        case 2:\n          return getColor(170, 191, 255);\n\n        case 3:\n          return getColor(202, 215, 255);\n\n        case 4:\n          return getColor(248, 247, 255);\n\n        case 5:\n          return getColor(255, 244, 234);\n\n        case 6:\n          return getColor(255, 210, 161);\n\n        case 7:\n          return getColor(255, 204, 111);\n\n        default:\n          return getColor(255, 255, 255);\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      if (this.ready) {\n        var videoEl = this.videoEl,\n            webcamElContext = this.webcamElContext,\n            _webcamEl = this.webcamEl,\n            videoWidth = _webcamEl.width,\n            videoHeight = _webcamEl.height,\n            webcamTexture = this.webcamTexture;\n\n        if (videoEl.readyState === videoEl.HAVE_ENOUGH_DATA) {\n          webcamElContext.drawImage(videoEl, 0, 0, videoWidth, videoHeight);\n          webcamTexture.needsUpdate = true;\n        }\n\n        this.blackAndWhiteFBO.simulate();\n        this.webcamDifferenceFBO.simulationShader.uniforms.tWebcam.value = this.blackAndWhiteFBO.getCurrentFrame();\n        this.webcamDifferenceFBO.simulate();\n        this.sizeFBO.simulationShader.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame();\n        this.sizeFBO.simulate();\n        this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame();\n      }\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.particles;\n    }\n  }, {\n    key: 'setCameraZ',\n    value: function setCameraZ(newCameraZ) {\n      this.cameraZ = newCameraZ;\n    }\n  }, {\n    key: 'updateColours',\n    value: function updateColours() {\n      this.material.uniforms.tColour.value = this.getColours();\n    }\n  }, {\n    key: 'updateSizes',\n    value: function updateSizes() {\n      this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange;\n      this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc;\n      this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes());\n    }\n  }, {\n    key: 'updateParticleVars',\n    value: function updateParticleVars() {\n      this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist;\n      this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc;\n      this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier;\n    }\n  }, {\n    key: 'bgColorTop',\n    get: function get() {\n      return this._bgColorTop;\n    },\n    set: function set(newVal) {\n      this._bgColorTop = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }, {\n    key: 'bgColorBottom',\n    get: function get() {\n      return this._bgColorBottom;\n    },\n    set: function set(newVal) {\n      this._bgColorBottom = newVal;\n      document.getElementsByTagName('body')[0].style.background = 'linear-gradient(' + this._bgColorTop + ', ' + this._bgColorBottom + ')';\n    }\n  }]);\n\n  return Particles;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Particles);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 13 */,\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return sizeSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sizeSimulationVertexShader; });\n/* eslint-disable */\n\nvar sizeSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tDefaultSize;\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeInc;\\n\\tuniform float sizeRange;\\n\\n\\tfloat getSize() {\\n\\t\\tvec4 currPosition = vec4((vUv.x * 1.0), (vUv.y * 1.0), 0.0, 1.0);\\n\\t\\tfloat webcamParticleVal = texture2D(tWebcam, vec2(currPosition.x, currPosition.y)).r;\\n\\t\\tfloat size = 0.0003 * webcamParticleVal;\\n\\n\\t\\treturn size;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\\n\\t}\\n\";\n\nvar sizeSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = vec2(uv);\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return blackAndWhiteSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return blackAndWhiteSimulationVertexShader; });\n/* eslint-disable */\n\nvar blackAndWhiteSimulationFragmentShader = \"\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeInc;\\n\\tuniform float sizeRange;\\n\\n\\tvoid main() {\\n\\t\\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\\n    float avg = (webcamParticle.x + webcamParticle.y + webcamParticle.z) / 3.0;\\n\\n\\t\\tgl_FragColor = vec4(avg, avg, avg, 1.0);\\n\\t}\\n\";\n\nvar blackAndWhiteSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return differenceSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return differenceSimulationVertexShader; });\n/* eslint-disable */\n\nvar differenceSimulationFragmentShader = \"\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeInc;\\n  uniform float sizeRange;\\n  uniform float webcamWidth;\\n\\tuniform float webcamHeight;\\n\\tuniform float webcamOutlineStrength;\\n\\n\\tvoid main() {\\n\\t\\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\\n\\t\\tvec3 webcamParticleAbove = texture2D(tWebcam, vec2(vUv.x, vUv.y - (1.0 / webcamWidth))).xyz;\\n\\t\\tvec3 webcamParticleBelow = texture2D(tWebcam, vec2(vUv.x, vUv.y + (1.0 / webcamWidth))).xyz;\\n\\t\\tvec3 webcamParticleLeft = texture2D(tWebcam, vec2(vUv.x - (1.0 / webcamHeight), vUv.y)).xyz;\\n\\t\\tvec3 webcamParticleRight = texture2D(tWebcam, vec2(vUv.x + (1.0 / webcamHeight), vUv.y)).xyz;\\n\\n    float average = (\\n\\t\\t\\twebcamParticleAbove.x +\\n      webcamParticleBelow.x +\\n      webcamParticleLeft.x +\\n\\t\\t\\twebcamParticleRight.x\\n\\t\\t) / 4.0;\\n\\n    webcamParticle.x -= average;\\n    webcamParticle.y -= average;\\n    webcamParticle.z -= average;\\n\\n    webcamParticle.x *= webcamOutlineStrength;\\n    webcamParticle.y *= webcamOutlineStrength;\\n    webcamParticle.z *= webcamOutlineStrength;\\n\\n\\t\\tgl_FragColor = vec4(webcamParticle, 1.0);\\n\\t}\\n\";\n\nvar differenceSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return vertexShader; });\n/* eslint-disable */\n\nvar fragmentShader = \"\\n\\tuniform sampler2D tColour;\\n\\tuniform sampler2D starImg;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvec4 colour = texture2D(tColour, vUv).rgba;\\n\\n\\t\\tgl_FragColor = colour;\\n\\t}\\n\";\n\nvar vertexShader = \"\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tSize;\\n\\n\\tuniform float sizeMultiplierForScreen;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvUv = position.xy;\\n\\n\\t\\tvec4 position = vec4((vUv.x * 1.0) - 0.5, (vUv.y * 1.0) - 0.5, 0.0, 1.0);\\n\\t\\tfloat size = texture2D(tSize, vUv).w;\\n\\n\\t\\tvec4 mvPosition = modelViewMatrix * position;\\n\\t\\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\\n\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t}\\n\";\n\n\n\n/***/ })\n],[6]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js","export function getParameterByName (name, url) {\n  if (!url) {\n    url = window.location.href\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`)\n  const results = regex.exec(url)\n\n  if (!results) return null\n  if (!results[2]) return ''\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport function getZRatio () {\n  if (window.innerWidth > 1100) {\n    return 170\n  } else if (window.innerWidth > 700) {\n    return 100\n  } else if (window.innerWidth > 500) {\n    return 85\n  } else {\n    return 50\n  }\n}\n\nexport function createDataTexture ({\n  data,\n  tWidth,\n  tHeight,\n  format,\n  filterType\n}) {\n  const dataTexture = new THREE.DataTexture(\n    data,\n    tWidth,\n    tHeight,\n    format,\n    THREE.FloatType\n  )\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType\n  dataTexture.needsUpdate = true\n  dataTexture.flipY = false\n\n  return dataTexture\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","import DatGUI from 'dat-gui'\n\nexport default class Controls {\n  constructor ({\n    particles,\n    scene\n  } = {}) {\n    this.gui = new DatGUI.GUI()\n\n    // this.addBgControls(particles)\n    // this.addTextControls(particles)\n    // this.addMouseControls(particles)\n    // this.addSizeControls(particles)\n    // this.addColourStrengthControls(particles)\n    // this.addOpacityControls(particles)\n  }\n\n  addBgControls (particles) {\n    this.gui\n      .addColor(particles, 'bgColorTop')\n\n    this.gui\n      .addColor(particles, 'bgColorBottom')\n  }\n\n  addTextControls (particles) {\n    this.gui\n      .add(particles, 'font', Object.keys(fonts))\n      .onFinishChange(() => {\n        particles.updateTextTexture()\n      })\n\n    this.gui\n      .add(particles, 'fontSize')\n      .min(10)\n      .max(200)\n      .step(5)\n      .onFinishChange(() => {\n        particles.updateTextTexture()\n      })\n\n    this.gui\n      .add(particles, 'textAlign', ['left', 'center'])\n      .onFinishChange(() => {\n        particles.updateTextTexture()\n      })\n\n    this.gui\n      .add(particles, 'textSizeMultiplier')\n      .min(1)\n      .max(1000)\n      .step(10)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'topSpeed')\n      .min(0.1)\n      .max(10)\n      .step(0.1)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'acceleration')\n      .min(0.00001)\n      .max(0.01)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addMouseControls (particles) {\n    this.gui\n      .add(particles, 'hoverDist')\n      .min(0)\n      .max(0.5)\n      .step(0.01)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverSizeInc')\n      .min(0)\n      .max(0.03)\n      .step(0.001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n\n    this.gui\n      .add(particles, 'hoverMaxSizeMultiplier')\n      .min(1)\n      .max(3)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addSizeControls (particles) {\n    this.gui\n      .add(particles, 'minSize')\n      .min(0.01)\n      .max(0.04)\n      .step(0.001)\n      .onFinishChange(() => {\n        if (particles.minSize > particles.maxSize) {\n          particles.minSize = particles.maxSize\n        }\n\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'maxSize')\n      .min(0.01)\n      .max(0.04)\n      .step(0.001)\n      .onFinishChange(() => {\n        if (particles.maxSize < particles.minSize) {\n          particles.maxSize = particles.minSize\n        }\n\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeInc')\n      .min(0.00001)\n      .max(0.0002)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'sizeRange')\n      .min(0)\n      .max(0.02)\n      .step(0.0005)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'skew')\n      .min(1)\n      .max(100)\n      .step(1)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n  }\n\n  addColourStrengthControls (particles) {\n    this.gui\n      .add(particles, 'brightness')\n      .min(0.1)\n      .max(3)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n\n  addOpacityControls (particles) {\n    this.gui\n      .add(particles, 'opacity')\n      .min(0.1)\n      .max(1.5)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateColours()\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/controls.js","import isWebglEnabled from 'detector-webgl'\nimport Stats from 'stats.js'\nimport Camera from './io/camera'\nimport Controls from './io/controls'\nimport Renderer from './io/renderer'\nimport Scene from './objects/scene'\nimport Particles from './objects/particles'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (isWebglEnabled) {\n    const container = document.getElementById('stars-simulation-container')\n    const renderer = new Renderer({ container })\n    const scene = new Scene()\n    const particles = new Particles({\n      scene,\n      renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 4000 : 100000,\n      radius: 3,\n      minSize: 0.015,\n      maxSize: 0.03,\n      sizeRange: 0.003,\n      sizeInc: 0.00005,\n      skew: 35,\n      brightness: 0.9,\n      opacity: 1,\n      webcamOutlineStrength: 1000\n    })\n    const camera = new Camera({\n      aspectRatio: 1,\n      particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -1.37\n      }\n    })\n    const stats = new Stats()\n\n    const init = () => {\n      new Controls({ particles }) // eslint-disable-line\n\n      stats.showPanel(0)\n      document.body.appendChild(stats.dom)\n    }\n\n    const animate = () => {\n      requestAnimationFrame(animate) // eslint-disable-line\n      render()\n    }\n\n    const render = () => {\n      stats.begin()\n\n      particles.update()\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      })\n\n      stats.end()\n    }\n\n    init()\n    animate()\n  } else {\n    const info = document.getElementById('info')\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.'\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { getZRatio } from '../utils'\n\nexport default class Camera {\n  constructor ({\n    particles,\n    fov = 400,\n    aspectRatio = window.innerWidth / window.innerHeight,\n    near = 0.1,\n    far = 2000,\n    position = {\n      x: 0, y: 0, z: 0\n    },\n    up = [0, 0, 1]\n  }) {\n    this.particles = particles\n    this.particles.setCameraZ(position.z)\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far)\n    this.up = up\n\n    this.setPosition(position)\n    this.setUp(...this.up)\n    this.setLookAt()\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.camera.aspect = WIDTH / HEIGHT\n    this.setZ(window.innerHeight / getZRatio())\n    this.camera.updateProjectionMatrix()\n  }\n\n  setUp (x, y, z) {\n    this.camera.up.set(x, y, z)\n  }\n\n  setPosition ({\n    x = this.camera.position.x,\n    y = this.camera.position.y,\n    z = this.camera.position.z\n  }) {\n    this.setX(x)\n    this.setY(y)\n    this.setZ(z)\n  }\n\n  setX (x) {\n    this.camera.position.x = x\n    this.setLookAt()\n  }\n\n  setY (y) {\n    this.camera.position.y = y\n    this.setLookAt()\n  }\n\n  setZ (z) {\n    this.camera.position.z = z\n    this.setLookAt()\n    this.setUp(0, 0, 1)\n    this.particles.setCameraZ(z)\n  }\n\n  setLookAt () {\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0))\n  }\n\n  get () {\n    return this.camera\n  }\n\n  getPosition () {\n    return this.camera.position\n  }\n\n  getZ () {\n    return this.camera.position.z\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/camera.js","export default class Renderer {\n  constructor ({\n    alpha = true,\n    pixelRatio = window.devicePixelRatio,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    container\n  }) {\n    this.renderer = new THREE.WebGLRenderer({ alpha })\n    const gl = this.renderer.context\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.setPixelRatio(pixelRatio)\n\n    this.setSize(width, height)\n\n    container.appendChild(this.getDomElement())\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  getDomElement () {\n    return this.renderer.domElement\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.renderer.setSize(WIDTH, HEIGHT)\n  }\n\n  setPixelRatio (pixelRatio) {\n    this.renderer.setPixelRatio(pixelRatio)\n  }\n\n  setSize (w, h) {\n    this.renderer.setSize(w, h)\n  }\n\n  render ({\n    scene,\n    camera,\n    renderTarget = null,\n    force = false\n  } = {}) {\n    this.renderer.render(scene, camera, renderTarget, force)\n  }\n\n  get () {\n    return this.renderer\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/renderer.js","export default class Canvas {\n  constructor () {\n    this.scene = new THREE.Scene()\n  }\n\n  add (obj) {\n    this.scene.add(obj)\n  }\n\n  remove (obj) {\n    this.scene.remove(obj)\n  }\n\n  get () {\n    return this.scene\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/scene.js","import FBO from 'three.js-fbo'\nimport { createDataTexture } from '../utils'\nimport { sizeSimulationVertexShader, sizeSimulationFragmentShader } from '../shaders/size-simulation-shaders'\nimport { blackAndWhiteSimulationVertexShader, blackAndWhiteSimulationFragmentShader } from '../shaders/black-and-white-webcam'\nimport { differenceSimulationVertexShader, differenceSimulationFragmentShader } from '../shaders/difference-webcam'\nimport { vertexShader, fragmentShader } from '../shaders/shaders'\n\nexport default class Particles {\n  constructor ({\n    scene,\n    configUniforms = {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: (window.innerHeight * window.devicePixelRatio) / 2 }\n    },\n    blending = THREE.AdditiveBlending,\n    transparent = true,\n    depthTest = true,\n    depthWrite = false,\n\n    renderer,\n\n    // background colors\n    bgColorTop = '#000000',\n    bgColorBottom = '#000000',\n\n    numParticles = 10000,\n    radius = 100, // radius of outer particle\n\n    // used to define and animate sizes\n    minSize = 1,\n    maxSize = 3,\n    sizeRange = 0.5, // the amount the size is allowed to fluxuate in animation\n    sizeInc = 0.01, // the amount the size is increased / decreased per frame\n    skew = 1,\n\n    // particle colours\n    brightness = 1,\n    opacity = 1,\n\n    // webcam particle values\n    webcamOutlineStrength = 50\n  }) {\n    this.renderer = renderer\n\n    this.bgColorTop = bgColorTop\n    this.bgColorBottom = bgColorBottom\n\n    this.numParticles = numParticles\n    this.radius = radius\n\n    // used to define star glinting\n    this.minSize = minSize\n    this.maxSize = maxSize\n    this.sizeRange = sizeRange\n    this.sizeInc = sizeInc\n    this.skew = skew // skews the median size\n\n    // webcm particle controls\n    this.webcamOutlineStrength = webcamOutlineStrength\n\n    // use to define particle colours\n    this.brightness = brightness\n    this.opacity = opacity\n\n    // used to define mouse interaction\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n\n    this.videoEl = document.createElement('video')\n\n    const noSupport = document.createElement('h1')\n    noSupport.innerHTML = 'Your browser is not supported. Please use Google Chrome (v21 or above).'\n\n    navigator.getUserMedia\n      ? navigator.getUserMedia({ video: { width: 1280, height: 720 } }, stream => {\n        const videoEl = this.videoEl\n        videoEl.src = URL.createObjectURL(stream) // eslint-disable-line\n        videoEl.width = 480\n        videoEl.height = 480\n        videoEl.autoplay = true\n\n        this.addStars({\n          scene,\n          renderer,\n          configUniforms,\n          blending,\n          transparent,\n          depthTest,\n          depthWrite\n        })\n      }, () => console.error('video failed to load'))\n      : document.getElementsByTagName('body')[0].append(noSupport)\n\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  addStars ({\n    scene,\n    renderer,\n    configUniforms,\n    blending,\n    transparent,\n    depthTest,\n    depthWrite\n  }) {\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    const tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles))\n    const tWidth = this.tWidth = tHeight\n    this.numParticles = tWidth * tHeight\n\n    const webcamEl = this.webcamEl = document.createElement('canvas')\n    this.webcamElContext = webcamEl.getContext('2d')\n\n    const webcamTexture = this.webcamTexture = new THREE.Texture(webcamEl)\n    webcamTexture.minFilter = webcamTexture.magFilter = THREE.NearestFilter\n    webcamTexture.needsUpdate = true\n\n    const webcamDiffEl = this.webcamDiffEl = document.createElement('canvas')\n    this.webcamDiffElContext = webcamDiffEl.getContext('2d')\n\n    const webcamDiffTexture = this.webcamDiffTexture = new THREE.Texture(webcamDiffEl)\n    webcamDiffTexture.minFilter = webcamDiffTexture.magFilter = THREE.NearestFilter\n    webcamDiffTexture.needsUpdate = true\n\n    this.positions = new Float32Array(this.numParticles * 3)\n\n    this.blackAndWhiteFBO = new FBO({\n      tWidth: this.webcamEl.width,\n      tHeight: this.webcamEl.height,\n      renderer: renderer.get(),\n      uniforms: {\n        tWebcam: { type: 't', value: webcamTexture }\n      },\n      simulationVertexShader: blackAndWhiteSimulationVertexShader,\n      simulationFragmentShader: blackAndWhiteSimulationFragmentShader\n    })\n\n    this.webcamDifferenceFBO = new FBO({\n      tWidth: this.webcamEl.width,\n      tHeight: this.webcamEl.height,\n      renderer: renderer.get(),\n      uniforms: {\n        webcamWidth: { type: 'f', value: this.webcamEl.width },\n        webcamHeight: { type: 'f', value: this.webcamEl.height },\n        tWebcam: { type: 't', value: 0 },\n        webcamOutlineStrength: { type: 'f', value: this.webcamOutlineStrength }\n      },\n      simulationVertexShader: differenceSimulationVertexShader,\n      simulationFragmentShader: differenceSimulationFragmentShader\n    })\n\n    this.sizeFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tPosition: { type: 't', value: 0 },\n        tDefaultSize: { type: 't', value: 0 },\n        tWebcam: { type: 't', value: 0 },\n\n        sizeRange: { type: 'f', value: this.sizeRange },\n        sizeInc: { type: 'f', value: this.sizeInc },\n\n        hoverDist: { type: 'f', value: this.hoverDist },\n        hoverSizeInc: { type: 'f', value: this.hoverSizeInc },\n        hoverMaxSizeMultiplier: { type: 'f', value: this.hoverMaxSizeMultiplier }\n      },\n      simulationVertexShader: sizeSimulationVertexShader,\n      simulationFragmentShader: sizeSimulationFragmentShader\n    })\n\n    this.sizeFBO.setTextureUniform('tPosition', this.getPositions())\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n\n    const uniforms = Object.assign({}, configUniforms, {\n      tPosition: { type: 't', value: this.sizeFBO.simulationShader.uniforms.tPosition.value },\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      tWebcam: { type: 't', value: webcamDiffTexture },\n\n      // tColour: { type: 't', value: this.getColours() }\n      tColour: { type: 't', value: webcamTexture }\n    })\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader,\n      fragmentShader,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent\n    })\n\n    // set uv coords of particles in texture as positions\n    const geometry = new THREE.Geometry()\n\n    for (let i = 0; i < this.numParticles; i++) {\n      const vertex = new THREE.Vector3()\n      vertex.x = (i % tWidth) / tWidth\n      vertex.y = Math.floor(i / tWidth) / tHeight\n      geometry.vertices.push(vertex)\n    }\n\n    this.particles = new THREE.Points(geometry, this.material)\n    this.particles.frustumCulled = false\n\n    scene.add(this.get())\n\n    this.ready = true\n  }\n\n  get bgColorTop () {\n    return this._bgColorTop\n  }\n\n  set bgColorTop (newVal) {\n    this._bgColorTop = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  get bgColorBottom () {\n    return this._bgColorBottom\n  }\n\n  set bgColorBottom (newVal) {\n    this._bgColorBottom = newVal\n    document.getElementsByTagName('body')[0].style.background = `linear-gradient(${this._bgColorTop}, ${this._bgColorBottom})`\n  }\n\n  onWindowResize () {\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n  }\n\n  onMouseMove (event) {\n    const xMultiplier = this.cameraZ / (this.windowHalfY * 2.8)\n    const yMultiplier = this.cameraZ / (this.windowHalfY * 2.65)\n    const mouseX = event.clientX - this.windowHalfX\n    const mouseY = this.windowHalfY - event.clientY\n\n    this.sizeFBO.simulationShader.uniforms.mouse.value.set(xMultiplier * mouseX, yMultiplier * mouseY, 0)\n  }\n\n  getPositions () {\n    const vertices = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i3 = 0, i4 = 0; i < this.numParticles; i++, i3 += 3, i4 += 4) {\n      const vertice = this.calcPosition()\n\n      this.positions[i3] = vertices[i4] = vertice[0]\n      this.positions[i3 + 1] = vertices[i4 + 1] = vertice[1]\n      this.positions[i3 + 2] = vertices[i4 + 2] = vertice[2]\n\n      vertices[i4 + 3] = 1.0\n    }\n\n    return vertices\n  }\n\n  calcPosition () {\n    const radius = this.radius\n    const x = Math.random() - 0.5\n    const y = Math.random() - 0.5\n    const z = 0\n    const d = Math.pow(Math.random(), 0.6) * radius * (1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)))\n\n    return [\n      x * d,\n      y * d,\n      z\n    ]\n  }\n\n  getSizes () {\n    const sizes = new Float32Array(this.numParticles * 4)\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      sizes[i4 + 3] = this.calcSize()\n    }\n    return sizes\n  }\n\n  calcSize () {\n    const sizeRange = this.maxSize - this.minSize\n    const size = this.minSize + (sizeRange * Math.pow(Math.random(), this.skew))\n\n    return size\n  }\n\n  getColours () {\n    const colours = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      const colour = this.calcColour()\n\n      colours[i4] = colour[0]\n      colours[i4 + 1] = colour[1]\n      colours[i4 + 2] = colour[2]\n      colours[i4 + 3] = colour[3]\n    }\n\n    return createDataTexture({\n      data: colours,\n      tWidth: this.tWidth,\n      tHeight: this.tHeight,\n      format: this.sizeFBO.format,\n      filterType: this.sizeFBO.filterType\n    })\n  }\n\n  calcColour () {\n    const randomVal = Math.ceil(Math.random() * 10)\n\n    const getColor = (r, g, b, a) => [\n      this.brightness * r / 255,\n      this.brightness * g / 255,\n      this.brightness * b / 255,\n      this.opacity\n    ]\n\n    switch (randomVal) {\n      case 1:\n        return getColor(155, 176, 255)\n\n      case 2:\n        return getColor(170, 191, 255)\n\n      case 3:\n        return getColor(202, 215, 255)\n\n      case 4:\n        return getColor(248, 247, 255)\n\n      case 5:\n        return getColor(255, 244, 234)\n\n      case 6:\n        return getColor(255, 210, 161)\n\n      case 7:\n        return getColor(255, 204, 111)\n\n      default:\n        return getColor(255, 255, 255)\n    }\n  }\n\n  update () {\n    if (this.ready) {\n      const { videoEl, webcamElContext, webcamEl: { width: videoWidth, height: videoHeight }, webcamTexture } = this\n      if (videoEl.readyState === videoEl.HAVE_ENOUGH_DATA) {\n        webcamElContext.drawImage(videoEl, 0, 0, videoWidth, videoHeight)\n        webcamTexture.needsUpdate = true\n      }\n\n      this.blackAndWhiteFBO.simulate()\n      this.webcamDifferenceFBO.simulationShader.uniforms.tWebcam.value = this.blackAndWhiteFBO.getCurrentFrame()\n      this.webcamDifferenceFBO.simulate()\n      this.sizeFBO.simulationShader.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame()\n      this.sizeFBO.simulate()\n      this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame()\n    }\n  }\n\n  get () {\n    return this.particles\n  }\n\n  setCameraZ (newCameraZ) {\n    this.cameraZ = newCameraZ\n  }\n\n  updateColours () {\n    this.material.uniforms.tColour.value = this.getColours()\n  }\n\n  updateSizes () {\n    this.sizeFBO.simulationShader.uniforms.sizeRange.value = this.sizeRange\n    this.sizeFBO.simulationShader.uniforms.sizeInc.value = this.sizeInc\n    this.sizeFBO.setTextureUniform('tDefaultSize', this.getSizes())\n  }\n\n  updateParticleVars () {\n    this.sizeFBO.simulationShader.uniforms.hoverDist.value = this.hoverDist\n    this.sizeFBO.simulationShader.uniforms.hoverSizeInc.value = this.hoverSizeInc\n    this.sizeFBO.simulationShader.uniforms.hoverMaxSizeMultiplier.value = this.hoverMaxSizeMultiplier\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/particles.js","/* eslint-disable */\n\nconst sizeSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tDefaultSize;\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeInc;\n\tuniform float sizeRange;\n\n\tfloat getSize() {\n\t\tvec4 currPosition = vec4((vUv.x * 1.0), (vUv.y * 1.0), 0.0, 1.0);\n\t\tfloat webcamParticleVal = texture2D(tWebcam, vec2(currPosition.x, currPosition.y)).r;\n\t\tfloat size = 0.0003 * webcamParticleVal;\n\n\t\treturn size;\n\t}\n\n\tvoid main() {\n\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\n\t}\n`\n\nconst sizeSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = vec2(uv);\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  sizeSimulationFragmentShader,\n  sizeSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/size-simulation-shaders.js","/* eslint-disable */\n\nconst blackAndWhiteSimulationFragmentShader = `\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeInc;\n\tuniform float sizeRange;\n\n\tvoid main() {\n\t\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\n    float avg = (webcamParticle.x + webcamParticle.y + webcamParticle.z) / 3.0;\n\n\t\tgl_FragColor = vec4(avg, avg, avg, 1.0);\n\t}\n`\n\nconst blackAndWhiteSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  blackAndWhiteSimulationFragmentShader,\n  blackAndWhiteSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/black-and-white-webcam.js","/* eslint-disable */\n\nconst differenceSimulationFragmentShader = `\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeInc;\n  uniform float sizeRange;\n  uniform float webcamWidth;\n\tuniform float webcamHeight;\n\tuniform float webcamOutlineStrength;\n\n\tvoid main() {\n\t\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\n\t\tvec3 webcamParticleAbove = texture2D(tWebcam, vec2(vUv.x, vUv.y - (1.0 / webcamWidth))).xyz;\n\t\tvec3 webcamParticleBelow = texture2D(tWebcam, vec2(vUv.x, vUv.y + (1.0 / webcamWidth))).xyz;\n\t\tvec3 webcamParticleLeft = texture2D(tWebcam, vec2(vUv.x - (1.0 / webcamHeight), vUv.y)).xyz;\n\t\tvec3 webcamParticleRight = texture2D(tWebcam, vec2(vUv.x + (1.0 / webcamHeight), vUv.y)).xyz;\n\n    float average = (\n\t\t\twebcamParticleAbove.x +\n      webcamParticleBelow.x +\n      webcamParticleLeft.x +\n\t\t\twebcamParticleRight.x\n\t\t) / 4.0;\n\n    webcamParticle.x -= average;\n    webcamParticle.y -= average;\n    webcamParticle.z -= average;\n\n    webcamParticle.x *= webcamOutlineStrength;\n    webcamParticle.y *= webcamOutlineStrength;\n    webcamParticle.z *= webcamOutlineStrength;\n\n\t\tgl_FragColor = vec4(webcamParticle, 1.0);\n\t}\n`\n\nconst differenceSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  differenceSimulationFragmentShader,\n  differenceSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/difference-webcam.js","/* eslint-disable */\n\nconst fragmentShader = `\n\tuniform sampler2D tColour;\n\tuniform sampler2D starImg;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvec4 colour = texture2D(tColour, vUv).rgba;\n\n\t\tgl_FragColor = colour;\n\t}\n`\n\nconst vertexShader = `\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tSize;\n\n\tuniform float sizeMultiplierForScreen;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvUv = position.xy;\n\n\t\tvec4 position = vec4((vUv.x * 1.0) - 0.5, (vUv.y * 1.0) - 0.5, 0.0, 1.0);\n\t\tfloat size = texture2D(tSize, vUv).w;\n\n\t\tvec4 mvPosition = modelViewMatrix * position;\n\t\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t}\n`\n\nexport {\n  fragmentShader,\n  vertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/shaders.js"],"sourceRoot":""}