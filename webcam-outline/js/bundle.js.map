{"version":3,"sources":["webpack:///js/bundle.js","webpack:///./src/js/objects/particles.js","webpack:///./src/js/io/controls.js","webpack:///./src/js/main.js","webpack:///./src/js/io/camera.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/shaders/position-size-simulation-shaders.js","webpack:///./src/js/shaders/difference-webcam.js","webpack:///./src/js/shaders/shaders.js","webpack:///./src/js/io/renderer.js","webpack:///./src/js/objects/scene.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","THREE","_classCallCheck","instance","Constructor","TypeError","d","SHAPES","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default","n","__WEBPACK_IMPORTED_MODULE_1__shaders_position_size_simulation_shaders__","__WEBPACK_IMPORTED_MODULE_2__shaders_difference_webcam__","__WEBPACK_IMPORTED_MODULE_3__shaders_shaders__","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","CIRCLE","SQUARE","Particles","_ref","_this","this","scene","_ref$configUniforms","configUniforms","undefined","color","value","Color","sizeMultiplierForScreen","window","innerHeight","devicePixelRatio","_ref$blending","blending","AdditiveBlending","_ref$transparent","transparent","_ref$depthTest","depthTest","_ref$depthWrite","depthWrite","renderer","_ref$numParticles","numParticles","_ref$mouseRadius","mouseRadius","_ref$mousePush","mousePush","_ref$particleShape","particleShape","_ref$defaultSize","defaultSize","_ref$outlineMultiplie","outlineMultiplier","_ref$xSpeed","xSpeed","_ref$ySpeed","ySpeed","_ref$yThreshold","yThreshold","windowHalfX","innerWidth","windowHalfY","videoEl","document","createElement","videoWidth","videoHeight","navigator","getUserMedia","video","width","height","stream","srcObject","autoplay","addParticles","console","error","getElementById","innerHTML","_ref2","tHeight","Math","ceil","sqrt","tWidth","webcamEl","webcamElContext","getContext","webcamTexture","Texture","minFilter","magFilter","NearestFilter","needsUpdate","webcamDifferenceFBO","a","get","uniforms","webcamWidth","type","webcamHeight","tWebcam","simulationVertexShader","simulationFragmentShader","positionSizeFBO","tParams","mouse","Vector3","updateParticleParams","assign","isCircle","tSize","targets","tColour","material","ShaderMaterial","vertexShader","fragmentShader","geometry","Geometry","vertex","x","y","floor","vertices","push","particles","Points","frustumCulled","add","ready","addEventListener","onDocumentMouseMove","bind","params","Float32Array","i4","velocity","getVelocity","setTextureUniform","random","particleSize","particleSizeInc","event","mouseX","clientX","mouseY","clientY","simulationShader","set","_webcamEl","readyState","HAVE_ENOUGH_DATA","drawImage","simulate","getCurrentFrame","newCameraZ","cameraZ","call","detector_webgl","detector_webgl_default","stats_min","stats_min_default","io_camera","dat_gui","dat_gui_default","objects_particles","controls_Controls","Controls","arguments","gui","GUI","addShapeControls","addMouseRadiusControls","addMousePushControls","addYThresholdControls","addSpeedControls","addSizeControls","onFinishChange","updateParticleVars","min","max","step","updateSizes","controls","io_renderer","objects_scene","isNotMobileScreen","matchMedia","matches","isTabletScreen","container","camera","aspectRatio","position","z","stats","render","begin","update","end","showPanel","body","appendChild","dom","animate","requestAnimationFrame","_toConsumableArray","arr","Array","isArray","arr2","from","__WEBPACK_IMPORTED_MODULE_0__utils__","Camera","_ref$fov","fov","_ref$aspectRatio","_ref$near","near","_ref$far","far","_ref$position","_ref$up","up","setCameraZ","PerspectiveCamera","setPosition","setUp","apply","setLookAt","WIDTH","HEIGHT","aspect","setZ","updateProjectionMatrix","_ref2$x","_ref2$y","_ref2$z","setX","setY","lookAt","getZRatio","positionSizeSimulationFragmentShader","positionSizeSimulationVertexShader","differenceSimulationFragmentShader","differenceSimulationVertexShader","Renderer","_ref$alpha","alpha","_ref$pixelRatio","pixelRatio","_ref$width","_ref$height","WebGLRenderer","gl","context","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setPixelRatio","setSize","getDomElement","onWindowResize","domElement","w","h","_ref2$renderTarget","renderTarget","_ref2$force","force","Canvas","Scene","obj","remove"],"mappings":"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","file":"js/bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SHAPES; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaders_position_size_simulation_shaders__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaders_difference_webcam__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaders_shaders__ = __webpack_require__(14);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\nvar SHAPES = {\n  CIRCLE: 'CIRCLE',\n  SQUARE: 'SQUARE'\n};\n\nvar Particles = function () {\n  function Particles(_ref) {\n    var _this = this;\n\n    var scene = _ref.scene,\n        _ref$configUniforms = _ref.configUniforms,\n        configUniforms = _ref$configUniforms === undefined ? {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: window.innerHeight * window.devicePixelRatio / 2 }\n    } : _ref$configUniforms,\n        _ref$blending = _ref.blending,\n        blending = _ref$blending === undefined ? THREE.AdditiveBlending : _ref$blending,\n        _ref$transparent = _ref.transparent,\n        transparent = _ref$transparent === undefined ? true : _ref$transparent,\n        _ref$depthTest = _ref.depthTest,\n        depthTest = _ref$depthTest === undefined ? true : _ref$depthTest,\n        _ref$depthWrite = _ref.depthWrite,\n        depthWrite = _ref$depthWrite === undefined ? false : _ref$depthWrite,\n        renderer = _ref.renderer,\n        _ref$numParticles = _ref.numParticles,\n        numParticles = _ref$numParticles === undefined ? 10000 : _ref$numParticles,\n        _ref$mouseRadius = _ref.mouseRadius,\n        mouseRadius = _ref$mouseRadius === undefined ? 0.05 : _ref$mouseRadius,\n        _ref$mousePush = _ref.mousePush,\n        mousePush = _ref$mousePush === undefined ? 0.0004 : _ref$mousePush,\n        _ref$particleShape = _ref.particleShape,\n        particleShape = _ref$particleShape === undefined ? SHAPES.CIRCLE : _ref$particleShape,\n        _ref$defaultSize = _ref.defaultSize,\n        defaultSize = _ref$defaultSize === undefined ? 0.1 : _ref$defaultSize,\n        _ref$outlineMultiplie = _ref.outlineMultiplier,\n        outlineMultiplier = _ref$outlineMultiplie === undefined ? 0.04 : _ref$outlineMultiplie,\n        _ref$xSpeed = _ref.xSpeed,\n        xSpeed = _ref$xSpeed === undefined ? 0.00003 : _ref$xSpeed,\n        _ref$ySpeed = _ref.ySpeed,\n        ySpeed = _ref$ySpeed === undefined ? 0.00006 : _ref$ySpeed,\n        _ref$yThreshold = _ref.yThreshold,\n        yThreshold = _ref$yThreshold === undefined ? 0.03 : _ref$yThreshold;\n\n    _classCallCheck(this, Particles);\n\n    this.renderer = renderer;\n\n    this.numParticles = numParticles;\n\n    // webcm particle controls\n    this.mouseRadius = mouseRadius;\n    this.mousePush = mousePush;\n\n    this.particleShape = particleShape;\n    this.defaultSize = defaultSize;\n    this.outlineMultiplier = outlineMultiplier;\n\n    this.xSpeed = xSpeed;\n    this.ySpeed = ySpeed;\n    this.yThreshold = yThreshold;\n\n    this.windowHalfX = window.innerWidth / 2;\n    this.windowHalfY = window.innerHeight / 2;\n\n    this.videoEl = document.createElement('video');\n    this.videoWidth = 1280;\n    this.videoHeight = 720;\n\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({ video: { width: this.videoWidth, height: this.videoHeight } }, function (stream) {\n        var videoEl = _this.videoEl;\n        videoEl.srcObject = stream;\n        videoEl.autoplay = true;\n\n        _this.addParticles({\n          scene: scene,\n          renderer: renderer,\n          configUniforms: configUniforms,\n          blending: blending,\n          transparent: transparent,\n          depthTest: depthTest,\n          depthWrite: depthWrite\n        });\n      }, function () {\n        return console.error('video failed to load');\n      });\n    } else {\n      var info = document.getElementById('info');\n      info.innerHTML = 'Requires use of webcam. Please use the latest version of Chrome.';\n    }\n  }\n\n  _createClass(Particles, [{\n    key: 'addParticles',\n    value: function addParticles(_ref2) {\n      var scene = _ref2.scene,\n          renderer = _ref2.renderer,\n          configUniforms = _ref2.configUniforms,\n          blending = _ref2.blending,\n          transparent = _ref2.transparent,\n          depthTest = _ref2.depthTest,\n          depthWrite = _ref2.depthWrite;\n\n      // height and width that set up a texture in memory\n      // this texture is used to store particle values\n      var tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles));\n      var tWidth = this.tWidth = tHeight;\n      this.numParticles = tWidth * tHeight;\n\n      var webcamEl = this.webcamEl = document.createElement('canvas');\n      this.webcamElContext = webcamEl.getContext('2d');\n\n      var webcamTexture = this.webcamTexture = new THREE.Texture(webcamEl);\n      webcamTexture.minFilter = webcamTexture.magFilter = THREE.NearestFilter;\n      webcamTexture.needsUpdate = true;\n\n      this.webcamDifferenceFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: this.webcamEl.width,\n        tHeight: this.webcamEl.height,\n        renderer: renderer.get(),\n        uniforms: {\n          webcamWidth: { type: 'f', value: this.webcamEl.width },\n          webcamHeight: { type: 'f', value: this.webcamEl.height },\n          tWebcam: { type: 't', value: webcamTexture }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_2__shaders_difference_webcam__[\"b\" /* differenceSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_2__shaders_difference_webcam__[\"a\" /* differenceSimulationFragmentShader */]\n      });\n\n      this.positionSizeFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: this.webcamEl.width,\n        tHeight: this.webcamEl.height,\n        renderer: renderer.get(),\n        uniforms: {\n          tWebcam: { type: 't', value: 0 },\n\n          tParams: { type: 't', value: 0 },\n          mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n          mouseRadius: { type: 'f', value: this.mouseRadius },\n          mousePush: { type: 'f', value: this.mousePush },\n          yThreshold: { type: 'f', value: this.yThreshold },\n\n          defaultSize: { type: 'f', value: this.defaultSize },\n          outlineMultiplier: { type: 'f', value: this.outlineMultiplier }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_1__shaders_position_size_simulation_shaders__[\"b\" /* positionSizeSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_1__shaders_position_size_simulation_shaders__[\"a\" /* positionSizeSimulationFragmentShader */]\n      });\n\n      this.updateParticleParams();\n\n      var uniforms = Object.assign({}, configUniforms, {\n        isCircle: { type: 'b', value: this.particleShape === SHAPES.CIRCLE },\n        tSize: { type: 't', value: this.positionSizeFBO.targets[0] },\n        tWebcam: { type: 't', value: 0 },\n\n        tColour: { type: 't', value: webcamTexture }\n      });\n\n      this.material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: __WEBPACK_IMPORTED_MODULE_3__shaders_shaders__[\"b\" /* vertexShader */],\n        fragmentShader: __WEBPACK_IMPORTED_MODULE_3__shaders_shaders__[\"a\" /* fragmentShader */],\n        blending: blending,\n        depthTest: depthTest,\n        depthWrite: depthWrite,\n        transparent: transparent\n      });\n\n      // set uv coords of particles in texture as positions\n      var geometry = new THREE.Geometry();\n\n      for (var i = 0; i < this.numParticles; i++) {\n        var vertex = new THREE.Vector3();\n        vertex.x = i % tWidth / tWidth;\n        vertex.y = Math.floor(i / tWidth) / tHeight;\n        geometry.vertices.push(vertex);\n      }\n\n      this.particles = new THREE.Points(geometry, this.material);\n      this.particles.frustumCulled = false;\n\n      scene.add(this.get());\n\n      this.ready = true;\n      document.addEventListener('mousemove', this.onDocumentMouseMove.bind(this), false);\n    }\n  }, {\n    key: 'updateParticleParams',\n    value: function updateParticleParams() {\n      var params = new Float32Array(this.numParticles * 4);\n\n      for (var i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n        var velocity = this.getVelocity();\n\n        params[i4] = velocity.x;\n        params[i4 + 1] = velocity.y;\n        // params[i4 + 2] = this.getSize()\n        // params[i4 + 3] = this.getSizeInc()\n      }\n\n      this.positionSizeFBO.setTextureUniform('tParams', params);\n    }\n  }, {\n    key: 'getVelocity',\n    value: function getVelocity() {\n      return {\n        x: this.xSpeed * Math.random(),\n        y: this.ySpeed * (Math.random() / 2 + 0.5)\n      };\n    }\n  }, {\n    key: 'getSize',\n    value: function getSize() {\n      return this.particleSize * Math.random() / 2;\n    }\n  }, {\n    key: 'getSizeInc',\n    value: function getSizeInc() {\n      return this.particleSizeInc * Math.random() * 2;\n    }\n  }, {\n    key: 'onDocumentMouseMove',\n    value: function onDocumentMouseMove(event) {\n      this.mouseX = this.windowHalfX - event.clientX;\n      this.mouseY = event.clientY - this.windowHalfY;\n\n      this.positionSizeFBO.simulationShader.uniforms.mouse.value.set(0.5 * this.mouseX / this.windowHalfX, -0.5 * this.mouseY / this.windowHalfY, 0);\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      if (this.ready) {\n        var videoEl = this.videoEl,\n            webcamElContext = this.webcamElContext,\n            _webcamEl = this.webcamEl,\n            videoWidth = _webcamEl.width,\n            videoHeight = _webcamEl.height,\n            webcamTexture = this.webcamTexture;\n\n        if (videoEl.readyState === videoEl.HAVE_ENOUGH_DATA) {\n          webcamElContext.drawImage(videoEl, 0, 0, videoWidth, videoHeight);\n          webcamTexture.needsUpdate = true;\n        }\n\n        this.webcamDifferenceFBO.simulate();\n        this.positionSizeFBO.simulationShader.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame();\n        this.positionSizeFBO.simulate();\n        this.material.uniforms.tSize.value = this.positionSizeFBO.getCurrentFrame();\n      }\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.particles;\n    }\n  }, {\n    key: 'setCameraZ',\n    value: function setCameraZ(newCameraZ) {\n      this.cameraZ = newCameraZ;\n    }\n  }, {\n    key: 'updateParticleVars',\n    value: function updateParticleVars() {\n      this.positionSizeFBO.simulationShader.uniforms.mouseRadius.value = this.mouseRadius;\n      this.positionSizeFBO.simulationShader.uniforms.mousePush.value = this.mousePush;\n      this.positionSizeFBO.simulationShader.uniforms.yThreshold.value = this.yThreshold;\n      this.material.uniforms.isCircle.value = this.particleShape === SHAPES.CIRCLE;\n    }\n  }, {\n    key: 'updateSizes',\n    value: function updateSizes() {\n      this.positionSizeFBO.simulationShader.uniforms.defaultSize.value = this.defaultSize;\n      this.positionSizeFBO.simulationShader.uniforms.outlineMultiplier.value = this.outlineMultiplier;\n    }\n  }]);\n\n  return Particles;\n}();\n\n/* harmony default export */ __webpack_exports__[\"b\"] = (Particles);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 5 */,\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/detector-webgl/index.js\nvar detector_webgl = __webpack_require__(1);\nvar detector_webgl_default = /*#__PURE__*/__webpack_require__.n(detector_webgl);\n\n// EXTERNAL MODULE: ./node_modules/stats.js/build/stats.min.js\nvar stats_min = __webpack_require__(2);\nvar stats_min_default = /*#__PURE__*/__webpack_require__.n(stats_min);\n\n// EXTERNAL MODULE: ./src/js/io/camera.js\nvar io_camera = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/dat-gui/index.js\nvar dat_gui = __webpack_require__(3);\nvar dat_gui_default = /*#__PURE__*/__webpack_require__.n(dat_gui);\n\n// EXTERNAL MODULE: ./src/js/objects/particles.js\nvar objects_particles = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/js/io/controls.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\nvar controls_Controls = function () {\n  function Controls() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        particles = _ref.particles,\n        scene = _ref.scene;\n\n    _classCallCheck(this, Controls);\n\n    this.gui = new dat_gui_default.a.GUI();\n\n    this.addShapeControls(particles);\n    this.addMouseRadiusControls(particles);\n    this.addMousePushControls(particles);\n    this.addYThresholdControls(particles);\n    this.addSpeedControls(particles);\n    this.addSizeControls(particles);\n  }\n\n  _createClass(Controls, [{\n    key: 'addShapeControls',\n    value: function addShapeControls(particles) {\n      this.gui.add(particles, 'particleShape', objects_particles[\"a\" /* SHAPES */]).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addYThresholdControls',\n    value: function addYThresholdControls(particles) {\n      this.gui.add(particles, 'yThreshold').min(0).max(0.5).step(0.005).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addMouseRadiusControls',\n    value: function addMouseRadiusControls(particles) {\n      this.gui.add(particles, 'mouseRadius').min(0).max(0.3).step(0.01).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addMousePushControls',\n    value: function addMousePushControls(particles) {\n      this.gui.add(particles, 'mousePush').min(0).max(0.002).step(0.00001).onFinishChange(function () {\n        particles.updateParticleVars();\n      });\n    }\n  }, {\n    key: 'addSpeedControls',\n    value: function addSpeedControls(particles) {\n      this.gui.add(particles, 'xSpeed').min(0).max(0.0005).step(0.000001).onFinishChange(function () {\n        particles.updateParticleParams();\n      });\n\n      this.gui.add(particles, 'ySpeed').min(0).max(0.0005).step(0.000001).onFinishChange(function () {\n        particles.updateParticleParams();\n      });\n    }\n  }, {\n    key: 'addSizeControls',\n    value: function addSizeControls(particles) {\n      this.gui.add(particles, 'defaultSize').min(0).max(0.025).step(0.0005).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'outlineMultiplier').min(0).max(1).step(0.05).onFinishChange(function () {\n        particles.updateSizes();\n      });\n    }\n  }]);\n\n  return Controls;\n}();\n\n/* harmony default export */ var controls = (controls_Controls);\n// EXTERNAL MODULE: ./src/js/io/renderer.js\nvar io_renderer = __webpack_require__(15);\n\n// EXTERNAL MODULE: ./src/js/objects/scene.js\nvar objects_scene = __webpack_require__(16);\n\n// CONCATENATED MODULE: ./src/js/main.js\n\n\n\n\n\n\n\n\nvar isNotMobileScreen = function isNotMobileScreen() {\n  return window.matchMedia('(min-width: 480px)').matches;\n};\nvar isTabletScreen = function isTabletScreen() {\n  return window.matchMedia('(max-width: 1000px)').matches;\n};\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (detector_webgl_default.a && isNotMobileScreen()) {\n    var container = document.getElementById('webcam-simulation-container');\n    var renderer = new io_renderer[\"a\" /* default */]({ container: container });\n    var scene = new objects_scene[\"a\" /* default */]();\n    var particles = new objects_particles[\"b\" /* default */]({\n      scene: scene,\n      renderer: renderer,\n      numParticles: isTabletScreen() ? 50000 : 100000,\n      defaultSize: 0.005,\n      outlineMultiplier: 0.2,\n      ySpeed: 0.000092,\n      yThreshold: 0.075\n    });\n    var camera = new io_camera[\"a\" /* default */]({\n      aspectRatio: 1,\n      particles: particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -1.37\n      }\n    });\n    var stats = new stats_min_default.a();\n\n    var init = function init() {\n      new controls({ particles: particles }); // eslint-disable-line\n\n      stats.showPanel(0);\n      document.body.appendChild(stats.dom);\n    };\n\n    var animate = function animate() {\n      requestAnimationFrame(animate); // eslint-disable-line\n      render();\n    };\n\n    var render = function render() {\n      stats.begin();\n\n      particles.update();\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      });\n\n      stats.end();\n    };\n\n    init();\n    animate();\n  } else {\n    var info = document.getElementById('info');\n    info.innerHTML = 'This browser is not supported. Please use the latest version of Chrome on desktop.';\n  }\n});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(8);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar Camera = function () {\n  function Camera(_ref) {\n    var particles = _ref.particles,\n        _ref$fov = _ref.fov,\n        fov = _ref$fov === undefined ? 400 : _ref$fov,\n        _ref$aspectRatio = _ref.aspectRatio,\n        aspectRatio = _ref$aspectRatio === undefined ? window.innerWidth / window.innerHeight : _ref$aspectRatio,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 0.1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 2000 : _ref$far,\n        _ref$position = _ref.position,\n        position = _ref$position === undefined ? {\n      x: 0, y: 0, z: 0\n    } : _ref$position,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 0, 1] : _ref$up;\n\n    _classCallCheck(this, Camera);\n\n    this.particles = particles;\n    this.particles.setCameraZ(position.z);\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n    this.up = up;\n\n    this.setPosition(position);\n    this.setUp.apply(this, _toConsumableArray(this.up));\n    this.setLookAt();\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Camera, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.camera.aspect = WIDTH / HEIGHT;\n      this.setZ(window.innerHeight / Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* getZRatio */])());\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: 'setUp',\n    value: function setUp(x, y, z) {\n      this.camera.up.set(x, y, z);\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(_ref2) {\n      var _ref2$x = _ref2.x,\n          x = _ref2$x === undefined ? this.camera.position.x : _ref2$x,\n          _ref2$y = _ref2.y,\n          y = _ref2$y === undefined ? this.camera.position.y : _ref2$y,\n          _ref2$z = _ref2.z,\n          z = _ref2$z === undefined ? this.camera.position.z : _ref2$z;\n\n      this.setX(x);\n      this.setY(y);\n      this.setZ(z);\n    }\n  }, {\n    key: 'setX',\n    value: function setX(x) {\n      this.camera.position.x = x;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setY',\n    value: function setY(y) {\n      this.camera.position.y = y;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setZ',\n    value: function setZ(z) {\n      this.camera.position.z = z;\n      this.setLookAt();\n      this.setUp(0, 0, 1);\n      this.particles.setCameraZ(z);\n    }\n  }, {\n    key: 'setLookAt',\n    value: function setLookAt() {\n      this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.camera;\n    }\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return this.camera.position;\n    }\n  }, {\n    key: 'getZ',\n    value: function getZ() {\n      return this.camera.position.z;\n    }\n  }]);\n\n  return Camera;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* unused harmony export getParameterByName */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getZRatio;\n/* unused harmony export createDataTexture */\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(url);\n\n  if (!results) return null;\n  if (!results[2]) return '';\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getZRatio() {\n  if (window.innerWidth > 1100) {\n    return 170;\n  } else if (window.innerWidth > 700) {\n    return 100;\n  } else if (window.innerWidth > 500) {\n    return 85;\n  } else {\n    return 50;\n  }\n}\n\nfunction createDataTexture(_ref) {\n  var data = _ref.data,\n      tWidth = _ref.tWidth,\n      tHeight = _ref.tHeight,\n      format = _ref.format,\n      filterType = _ref.filterType;\n\n  var dataTexture = new THREE.DataTexture(data, tWidth, tHeight, format, THREE.FloatType);\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType;\n  dataTexture.needsUpdate = true;\n  dataTexture.flipY = false;\n\n  return dataTexture;\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return positionSizeSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return positionSizeSimulationVertexShader; });\n/* eslint-disable */\n\nvar positionSizeSimulationFragmentShader = \"\\n\\t/** generates a random number between 0 and 1 **/\\n\\thighp float rand(vec2 co) {\\n\\t\\thighp float a = 12.9898;\\n\\t\\thighp float b = 78.233;\\n\\t\\thighp float c = 43758.5453;\\n\\t\\thighp float dt= dot(co.xy ,vec2(a,b));\\n\\t\\thighp float sn= mod(dt,3.14);\\n\\t\\treturn fract(sin(sn) * c);\\n\\t}\\n\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tWebcam;\\n\\tuniform sampler2D tPrev;\\n\\tuniform sampler2D tCurr;\\n\\n\\tuniform vec3 mouse;\\n\\tuniform sampler2D tParams;\\n\\tuniform float yThreshold;\\n\\tuniform float mouseRadius;\\n\\tuniform float mousePush;\\n\\n\\tuniform float defaultSize;\\n\\tuniform float outlineMultiplier;\\n\\n\\tvec3 getPos() {\\n\\t\\tvec3 defaultPos = vec3((vUv.x * 1.0) - 0.5, (vUv.y * 1.0) - 0.5, 0.0);\\n\\t\\tvec3 deacceleration = vec3(1.1);\\n\\t\\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\\n\\t\\tvec3 currPos = texture2D(tCurr, vUv).xyz;\\n\\t\\tvec3 velocity = currPos == defaultPos ? vec3(0.0) : (currPos - prevPos) / deacceleration;\\n\\t\\tvec3 pos = currPos;\\n\\t\\tfloat distanceToMouse = length(pos - mouse);\\n\\n\\t\\tif (distanceToMouse < mouseRadius) {\\n\\t\\t\\tvelocity += (normalize(pos - mouse) * mousePush);\\n\\t\\t}\\n\\n\\t\\tfloat xSpeed = texture2D(tParams, vUv).x;\\n\\t\\tfloat ySpeed = texture2D(tParams, vUv).y;\\n\\t\\tvelocity.y += ySpeed;\\n\\t\\tvelocity.x += rand(vec2(defaultPos.x, defaultPos.y)) > 0.5 ? xSpeed : -xSpeed;\\n\\n\\t\\tif (pos == vec3(0.0) || pos.y > yThreshold + defaultPos.y) {\\n\\t\\t\\tpos = defaultPos;\\n\\t\\t} else {\\n\\t\\t\\tpos += velocity;\\n\\t\\t}\\n\\n\\t\\treturn pos;\\n\\t}\\n\\n\\tfloat getSize() {\\n\\t\\tvec2 defaultPixel = vec2((vUv.x * 1.0), (vUv.y * 1.0));\\n\\t\\tfloat webcamParticleVal = texture2D(tWebcam, vec2(defaultPixel.x, defaultPixel.y)).r;\\n\\t\\tfloat size = defaultSize + (outlineMultiplier * webcamParticleVal);\\n\\n\\t\\treturn size;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tgl_FragColor = vec4(getPos(), getSize());\\n\\t}\\n\";\n\nvar positionSizeSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = vec2(uv);\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return differenceSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return differenceSimulationVertexShader; });\n/* eslint-disable */\n\nvar differenceSimulationFragmentShader = \"\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeInc;\\n  uniform float sizeRange;\\n  uniform float webcamWidth;\\n\\tuniform float webcamHeight;\\n\\n\\tvoid main() {\\n\\t\\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\\n\\t\\tvec3 webcamParticleAbove = texture2D(tWebcam, vec2(vUv.x, vUv.y - (1.0 / webcamWidth))).xyz;\\n\\t\\tvec3 webcamParticleBelow = texture2D(tWebcam, vec2(vUv.x, vUv.y + (1.0 / webcamWidth))).xyz;\\n\\t\\tvec3 webcamParticleLeft = texture2D(tWebcam, vec2(vUv.x - (1.0 / webcamHeight), vUv.y)).xyz;\\n\\t\\tvec3 webcamParticleRight = texture2D(tWebcam, vec2(vUv.x + (1.0 / webcamHeight), vUv.y)).xyz;\\n\\n    float average = (\\n\\t\\t\\twebcamParticleAbove.r +\\n      webcamParticleBelow.r +\\n      webcamParticleLeft.r +\\n\\t\\t\\twebcamParticleRight.r\\n\\t\\t) / 4.0;\\n\\n    webcamParticle.x -= average;\\n    webcamParticle.y -= average;\\n    webcamParticle.z -= average;\\n\\n\\t\\tgl_FragColor = vec4(webcamParticle, 1.0);\\n\\t}\\n\";\n\nvar differenceSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return vertexShader; });\n/* eslint-disable */\n\nvar fragmentShader = \"\\n\\tuniform sampler2D tColour;\\n\\tuniform bool isCircle;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvec4 colour = texture2D(tColour, vUv).rgba;\\n\\n\\t\\tgl_FragColor = colour;\\n\\n\\t\\tif (isCircle) {\\n\\t\\t\\tif (length(gl_PointCoord - vec2(0.5, 0.5)) > 0.475) discard; // makes particles a circle\\n\\t\\t}\\n\\t}\\n\";\n\nvar vertexShader = \"\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tSize;\\n\\n\\tuniform float sizeMultiplierForScreen;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvUv = position.xy;\\n\\n\\t\\tvec3 position = texture2D(tSize, vUv).xyz;\\n\\t\\tfloat size = texture2D(tSize, vUv).w;\\n\\n\\t\\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n\\t\\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\\n\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n  function Renderer(_ref) {\n    var _ref$alpha = _ref.alpha,\n        alpha = _ref$alpha === undefined ? true : _ref$alpha,\n        _ref$pixelRatio = _ref.pixelRatio,\n        pixelRatio = _ref$pixelRatio === undefined ? window.devicePixelRatio : _ref$pixelRatio,\n        _ref$width = _ref.width,\n        width = _ref$width === undefined ? window.innerWidth : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === undefined ? window.innerHeight : _ref$height,\n        container = _ref.container;\n\n    _classCallCheck(this, Renderer);\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: alpha });\n    var gl = this.renderer.context;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    this.setPixelRatio(pixelRatio);\n\n    this.setSize(width, height);\n\n    container.appendChild(this.getDomElement());\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Renderer, [{\n    key: 'getDomElement',\n    value: function getDomElement() {\n      return this.renderer.domElement;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.renderer.setSize(WIDTH, HEIGHT);\n    }\n  }, {\n    key: 'setPixelRatio',\n    value: function setPixelRatio(pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio);\n    }\n  }, {\n    key: 'setSize',\n    value: function setSize(w, h) {\n      this.renderer.setSize(w, h);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          scene = _ref2.scene,\n          camera = _ref2.camera,\n          _ref2$renderTarget = _ref2.renderTarget,\n          renderTarget = _ref2$renderTarget === undefined ? null : _ref2$renderTarget,\n          _ref2$force = _ref2.force,\n          force = _ref2$force === undefined ? false : _ref2$force;\n\n      this.renderer.render(scene, camera, renderTarget, force);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.renderer;\n    }\n  }]);\n\n  return Renderer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderer);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Canvas = function () {\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    this.scene = new THREE.Scene();\n  }\n\n  _createClass(Canvas, [{\n    key: \"add\",\n    value: function add(obj) {\n      this.scene.add(obj);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(obj) {\n      this.scene.remove(obj);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.scene;\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Canvas);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ })\n],[6]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js","import FBO from 'three.js-fbo'\nimport { positionSizeSimulationFragmentShader, positionSizeSimulationVertexShader } from '../shaders/position-size-simulation-shaders'\nimport { differenceSimulationVertexShader, differenceSimulationFragmentShader } from '../shaders/difference-webcam'\nimport { vertexShader, fragmentShader } from '../shaders/shaders'\n\nexport const SHAPES = {\n  CIRCLE: 'CIRCLE',\n  SQUARE: 'SQUARE'\n}\n\nexport default class Particles {\n  constructor ({\n    scene,\n    configUniforms = {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: (window.innerHeight * window.devicePixelRatio) / 2 }\n    },\n    blending = THREE.AdditiveBlending,\n    transparent = true,\n    depthTest = true,\n    depthWrite = false,\n\n    renderer,\n\n    numParticles = 10000,\n\n    // webcam particle values\n    mouseRadius = 0.05,\n    mousePush = 0.0004,\n\n    particleShape = SHAPES.CIRCLE,\n    defaultSize = 0.1,\n    outlineMultiplier = 0.04,\n    xSpeed = 0.00003,\n    ySpeed = 0.00006,\n    yThreshold = 0.03\n  }) {\n    this.renderer = renderer\n\n    this.numParticles = numParticles\n\n    // webcm particle controls\n    this.mouseRadius = mouseRadius\n    this.mousePush = mousePush\n\n    this.particleShape = particleShape\n    this.defaultSize = defaultSize\n    this.outlineMultiplier = outlineMultiplier\n\n    this.xSpeed = xSpeed\n    this.ySpeed = ySpeed\n    this.yThreshold = yThreshold\n\n    this.windowHalfX = window.innerWidth / 2\n    this.windowHalfY = window.innerHeight / 2\n\n    this.videoEl = document.createElement('video')\n    this.videoWidth = 1280\n    this.videoHeight = 720\n\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({ video: { width: this.videoWidth, height: this.videoHeight } }, stream => {\n        const videoEl = this.videoEl\n        videoEl.srcObject = stream\n        videoEl.autoplay = true\n\n        this.addParticles({\n          scene,\n          renderer,\n          configUniforms,\n          blending,\n          transparent,\n          depthTest,\n          depthWrite\n        })\n      }, () => console.error('video failed to load'))\n    } else {\n      const info = document.getElementById('info')\n      info.innerHTML = 'Requires use of webcam. Please use the latest version of Chrome.'\n    }\n  }\n\n  addParticles ({\n    scene,\n    renderer,\n    configUniforms,\n    blending,\n    transparent,\n    depthTest,\n    depthWrite\n  }) {\n    // height and width that set up a texture in memory\n    // this texture is used to store particle values\n    const tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles))\n    const tWidth = this.tWidth = tHeight\n    this.numParticles = tWidth * tHeight\n\n    const webcamEl = this.webcamEl = document.createElement('canvas')\n    this.webcamElContext = webcamEl.getContext('2d')\n\n    const webcamTexture = this.webcamTexture = new THREE.Texture(webcamEl)\n    webcamTexture.minFilter = webcamTexture.magFilter = THREE.NearestFilter\n    webcamTexture.needsUpdate = true\n\n    this.webcamDifferenceFBO = new FBO({\n      tWidth: this.webcamEl.width,\n      tHeight: this.webcamEl.height,\n      renderer: renderer.get(),\n      uniforms: {\n        webcamWidth: { type: 'f', value: this.webcamEl.width },\n        webcamHeight: { type: 'f', value: this.webcamEl.height },\n        tWebcam: { type: 't', value: webcamTexture }\n      },\n      simulationVertexShader: differenceSimulationVertexShader,\n      simulationFragmentShader: differenceSimulationFragmentShader\n    })\n\n    this.positionSizeFBO = new FBO({\n      tWidth: this.webcamEl.width,\n      tHeight: this.webcamEl.height,\n      renderer: renderer.get(),\n      uniforms: {\n        tWebcam: { type: 't', value: 0 },\n\n        tParams: { type: 't', value: 0 },\n        mouse: { value: new THREE.Vector3(10000, 10000, 10000) },\n        mouseRadius: { type: 'f', value: this.mouseRadius },\n        mousePush: { type: 'f', value: this.mousePush },\n        yThreshold: { type: 'f', value: this.yThreshold },\n\n        defaultSize: { type: 'f', value: this.defaultSize },\n        outlineMultiplier: { type: 'f', value: this.outlineMultiplier }\n      },\n      simulationVertexShader: positionSizeSimulationVertexShader,\n      simulationFragmentShader: positionSizeSimulationFragmentShader\n    })\n\n    this.updateParticleParams()\n\n    const uniforms = Object.assign({}, configUniforms, {\n      isCircle: { type: 'b', value: this.particleShape === SHAPES.CIRCLE },\n      tSize: { type: 't', value: this.positionSizeFBO.targets[0] },\n      tWebcam: { type: 't', value: 0 },\n\n      tColour: { type: 't', value: webcamTexture }\n    })\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader,\n      fragmentShader,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent\n    })\n\n    // set uv coords of particles in texture as positions\n    const geometry = new THREE.Geometry()\n\n    for (let i = 0; i < this.numParticles; i++) {\n      const vertex = new THREE.Vector3()\n      vertex.x = (i % tWidth) / tWidth\n      vertex.y = Math.floor(i / tWidth) / tHeight\n      geometry.vertices.push(vertex)\n    }\n\n    this.particles = new THREE.Points(geometry, this.material)\n    this.particles.frustumCulled = false\n\n    scene.add(this.get())\n\n    this.ready = true\n    document.addEventListener('mousemove', this.onDocumentMouseMove.bind(this), false)\n  }\n\n  updateParticleParams () {\n    const params = new Float32Array(this.numParticles * 4)\n\n    for (let i = 0, i4 = 0; i < this.numParticles; i++, i4 += 4) {\n      const velocity = this.getVelocity()\n\n      params[i4] = velocity.x\n      params[i4 + 1] = velocity.y\n      // params[i4 + 2] = this.getSize()\n      // params[i4 + 3] = this.getSizeInc()\n    }\n\n    this.positionSizeFBO.setTextureUniform('tParams', params)\n  }\n\n  getVelocity () {\n    return {\n      x: this.xSpeed * Math.random(),\n      y: this.ySpeed * (Math.random() / 2 + 0.5)\n    }\n  }\n\n  getSize () {\n    return this.particleSize * Math.random() / 2\n  }\n\n  getSizeInc () {\n    return this.particleSizeInc * Math.random() * 2\n  }\n\n  onDocumentMouseMove (event) {\n    this.mouseX = this.windowHalfX - event.clientX\n    this.mouseY = event.clientY - this.windowHalfY\n\n    this.positionSizeFBO.simulationShader.uniforms.mouse.value.set(0.5 * this.mouseX / this.windowHalfX, -0.5 * this.mouseY / this.windowHalfY, 0)\n  }\n\n  update () {\n    if (this.ready) {\n      const { videoEl, webcamElContext, webcamEl: { width: videoWidth, height: videoHeight }, webcamTexture } = this\n      if (videoEl.readyState === videoEl.HAVE_ENOUGH_DATA) {\n        webcamElContext.drawImage(videoEl, 0, 0, videoWidth, videoHeight)\n        webcamTexture.needsUpdate = true\n      }\n\n      this.webcamDifferenceFBO.simulate()\n      this.positionSizeFBO.simulationShader.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame()\n      this.positionSizeFBO.simulate()\n      this.material.uniforms.tSize.value = this.positionSizeFBO.getCurrentFrame()\n    }\n  }\n\n  get () {\n    return this.particles\n  }\n\n  setCameraZ (newCameraZ) {\n    this.cameraZ = newCameraZ\n  }\n\n  updateParticleVars () {\n    this.positionSizeFBO.simulationShader.uniforms.mouseRadius.value = this.mouseRadius\n    this.positionSizeFBO.simulationShader.uniforms.mousePush.value = this.mousePush\n    this.positionSizeFBO.simulationShader.uniforms.yThreshold.value = this.yThreshold\n    this.material.uniforms.isCircle.value = this.particleShape === SHAPES.CIRCLE\n  }\n\n  updateSizes () {\n    this.positionSizeFBO.simulationShader.uniforms.defaultSize.value = this.defaultSize\n    this.positionSizeFBO.simulationShader.uniforms.outlineMultiplier.value = this.outlineMultiplier\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/particles.js","import DatGUI from 'dat-gui'\n\nimport { SHAPES } from '../objects/particles'\n\nexport default class Controls {\n  constructor ({\n    particles,\n    scene\n  } = {}) {\n    this.gui = new DatGUI.GUI()\n\n    this.addShapeControls(particles)\n    this.addMouseRadiusControls(particles)\n    this.addMousePushControls(particles)\n    this.addYThresholdControls(particles)\n    this.addSpeedControls(particles)\n    this.addSizeControls(particles)\n  }\n\n  addShapeControls (particles) {\n    this.gui.add(particles, 'particleShape', SHAPES)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addYThresholdControls (particles) {\n    this.gui.add(particles, 'yThreshold')\n      .min(0)\n      .max(0.5)\n      .step(0.005)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addMouseRadiusControls (particles) {\n    this.gui.add(particles, 'mouseRadius')\n      .min(0)\n      .max(0.3)\n      .step(0.01)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addMousePushControls (particles) {\n    this.gui.add(particles, 'mousePush')\n      .min(0)\n      .max(0.002)\n      .step(0.00001)\n      .onFinishChange(() => {\n        particles.updateParticleVars()\n      })\n  }\n\n  addSpeedControls (particles) {\n    this.gui.add(particles, 'xSpeed')\n      .min(0)\n      .max(0.0005)\n      .step(0.000001)\n      .onFinishChange(() => {\n        particles.updateParticleParams()\n      })\n\n    this.gui.add(particles, 'ySpeed')\n      .min(0)\n      .max(0.0005)\n      .step(0.000001)\n      .onFinishChange(() => {\n        particles.updateParticleParams()\n      })\n  }\n\n  addSizeControls (particles) {\n    this.gui\n      .add(particles, 'defaultSize')\n      .min(0)\n      .max(0.025)\n      .step(0.0005)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'outlineMultiplier')\n      .min(0)\n      .max(1)\n      .step(0.05)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/controls.js","import isWebglEnabled from 'detector-webgl'\nimport Stats from 'stats.js'\nimport Camera from './io/camera'\nimport Controls from './io/controls'\nimport Renderer from './io/renderer'\nimport Scene from './objects/scene'\nimport Particles from './objects/particles'\n\nconst isNotMobileScreen = () => window.matchMedia('(min-width: 480px)').matches\nconst isTabletScreen = () => window.matchMedia('(max-width: 1000px)').matches\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (isWebglEnabled && isNotMobileScreen()) {\n    const container = document.getElementById('webcam-simulation-container')\n    const renderer = new Renderer({ container })\n    const scene = new Scene()\n    const particles = new Particles({\n      scene,\n      renderer,\n      numParticles: isTabletScreen() ? 50000 : 100000,\n      defaultSize: 0.005,\n      outlineMultiplier: 0.2,\n      ySpeed: 0.000092,\n      yThreshold: 0.075\n    })\n    const camera = new Camera({\n      aspectRatio: 1,\n      particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -1.37\n      }\n    })\n    const stats = new Stats()\n\n    const init = () => {\n      new Controls({ particles }) // eslint-disable-line\n\n      stats.showPanel(0)\n      document.body.appendChild(stats.dom)\n    }\n\n    const animate = () => {\n      requestAnimationFrame(animate) // eslint-disable-line\n      render()\n    }\n\n    const render = () => {\n      stats.begin()\n\n      particles.update()\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      })\n\n      stats.end()\n    }\n\n    init()\n    animate()\n  } else {\n    const info = document.getElementById('info')\n    info.innerHTML = 'This browser is not supported. Please use the latest version of Chrome on desktop.'\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { getZRatio } from '../utils'\n\nexport default class Camera {\n  constructor ({\n    particles,\n    fov = 400,\n    aspectRatio = window.innerWidth / window.innerHeight,\n    near = 0.1,\n    far = 2000,\n    position = {\n      x: 0, y: 0, z: 0\n    },\n    up = [0, 0, 1]\n  }) {\n    this.particles = particles\n    this.particles.setCameraZ(position.z)\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far)\n    this.up = up\n\n    this.setPosition(position)\n    this.setUp(...this.up)\n    this.setLookAt()\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.camera.aspect = WIDTH / HEIGHT\n    this.setZ(window.innerHeight / getZRatio())\n    this.camera.updateProjectionMatrix()\n  }\n\n  setUp (x, y, z) {\n    this.camera.up.set(x, y, z)\n  }\n\n  setPosition ({\n    x = this.camera.position.x,\n    y = this.camera.position.y,\n    z = this.camera.position.z\n  }) {\n    this.setX(x)\n    this.setY(y)\n    this.setZ(z)\n  }\n\n  setX (x) {\n    this.camera.position.x = x\n    this.setLookAt()\n  }\n\n  setY (y) {\n    this.camera.position.y = y\n    this.setLookAt()\n  }\n\n  setZ (z) {\n    this.camera.position.z = z\n    this.setLookAt()\n    this.setUp(0, 0, 1)\n    this.particles.setCameraZ(z)\n  }\n\n  setLookAt () {\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0))\n  }\n\n  get () {\n    return this.camera\n  }\n\n  getPosition () {\n    return this.camera.position\n  }\n\n  getZ () {\n    return this.camera.position.z\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/camera.js","export function getParameterByName (name, url) {\n  if (!url) {\n    url = window.location.href\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`)\n  const results = regex.exec(url)\n\n  if (!results) return null\n  if (!results[2]) return ''\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport function getZRatio () {\n  if (window.innerWidth > 1100) {\n    return 170\n  } else if (window.innerWidth > 700) {\n    return 100\n  } else if (window.innerWidth > 500) {\n    return 85\n  } else {\n    return 50\n  }\n}\n\nexport function createDataTexture ({\n  data,\n  tWidth,\n  tHeight,\n  format,\n  filterType\n}) {\n  const dataTexture = new THREE.DataTexture(\n    data,\n    tWidth,\n    tHeight,\n    format,\n    THREE.FloatType\n  )\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType\n  dataTexture.needsUpdate = true\n  dataTexture.flipY = false\n\n  return dataTexture\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","/* eslint-disable */\n\nconst positionSizeSimulationFragmentShader = `\n\t/** generates a random number between 0 and 1 **/\n\thighp float rand(vec2 co) {\n\t\thighp float a = 12.9898;\n\t\thighp float b = 78.233;\n\t\thighp float c = 43758.5453;\n\t\thighp float dt= dot(co.xy ,vec2(a,b));\n\t\thighp float sn= mod(dt,3.14);\n\t\treturn fract(sin(sn) * c);\n\t}\n\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tWebcam;\n\tuniform sampler2D tPrev;\n\tuniform sampler2D tCurr;\n\n\tuniform vec3 mouse;\n\tuniform sampler2D tParams;\n\tuniform float yThreshold;\n\tuniform float mouseRadius;\n\tuniform float mousePush;\n\n\tuniform float defaultSize;\n\tuniform float outlineMultiplier;\n\n\tvec3 getPos() {\n\t\tvec3 defaultPos = vec3((vUv.x * 1.0) - 0.5, (vUv.y * 1.0) - 0.5, 0.0);\n\t\tvec3 deacceleration = vec3(1.1);\n\t\tvec3 prevPos = texture2D(tPrev, vUv).xyz;\n\t\tvec3 currPos = texture2D(tCurr, vUv).xyz;\n\t\tvec3 velocity = currPos == defaultPos ? vec3(0.0) : (currPos - prevPos) / deacceleration;\n\t\tvec3 pos = currPos;\n\t\tfloat distanceToMouse = length(pos - mouse);\n\n\t\tif (distanceToMouse < mouseRadius) {\n\t\t\tvelocity += (normalize(pos - mouse) * mousePush);\n\t\t}\n\n\t\tfloat xSpeed = texture2D(tParams, vUv).x;\n\t\tfloat ySpeed = texture2D(tParams, vUv).y;\n\t\tvelocity.y += ySpeed;\n\t\tvelocity.x += rand(vec2(defaultPos.x, defaultPos.y)) > 0.5 ? xSpeed : -xSpeed;\n\n\t\tif (pos == vec3(0.0) || pos.y > yThreshold + defaultPos.y) {\n\t\t\tpos = defaultPos;\n\t\t} else {\n\t\t\tpos += velocity;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tfloat getSize() {\n\t\tvec2 defaultPixel = vec2((vUv.x * 1.0), (vUv.y * 1.0));\n\t\tfloat webcamParticleVal = texture2D(tWebcam, vec2(defaultPixel.x, defaultPixel.y)).r;\n\t\tfloat size = defaultSize + (outlineMultiplier * webcamParticleVal);\n\n\t\treturn size;\n\t}\n\n\tvoid main() {\n\t\tgl_FragColor = vec4(getPos(), getSize());\n\t}\n`\n\nconst positionSizeSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = vec2(uv);\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  positionSizeSimulationFragmentShader,\n  positionSizeSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/position-size-simulation-shaders.js","/* eslint-disable */\n\nconst differenceSimulationFragmentShader = `\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeInc;\n  uniform float sizeRange;\n  uniform float webcamWidth;\n\tuniform float webcamHeight;\n\n\tvoid main() {\n\t\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\n\t\tvec3 webcamParticleAbove = texture2D(tWebcam, vec2(vUv.x, vUv.y - (1.0 / webcamWidth))).xyz;\n\t\tvec3 webcamParticleBelow = texture2D(tWebcam, vec2(vUv.x, vUv.y + (1.0 / webcamWidth))).xyz;\n\t\tvec3 webcamParticleLeft = texture2D(tWebcam, vec2(vUv.x - (1.0 / webcamHeight), vUv.y)).xyz;\n\t\tvec3 webcamParticleRight = texture2D(tWebcam, vec2(vUv.x + (1.0 / webcamHeight), vUv.y)).xyz;\n\n    float average = (\n\t\t\twebcamParticleAbove.r +\n      webcamParticleBelow.r +\n      webcamParticleLeft.r +\n\t\t\twebcamParticleRight.r\n\t\t) / 4.0;\n\n    webcamParticle.x -= average;\n    webcamParticle.y -= average;\n    webcamParticle.z -= average;\n\n\t\tgl_FragColor = vec4(webcamParticle, 1.0);\n\t}\n`\n\nconst differenceSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  differenceSimulationFragmentShader,\n  differenceSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/difference-webcam.js","/* eslint-disable */\n\nconst fragmentShader = `\n\tuniform sampler2D tColour;\n\tuniform bool isCircle;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvec4 colour = texture2D(tColour, vUv).rgba;\n\n\t\tgl_FragColor = colour;\n\n\t\tif (isCircle) {\n\t\t\tif (length(gl_PointCoord - vec2(0.5, 0.5)) > 0.475) discard; // makes particles a circle\n\t\t}\n\t}\n`\n\nconst vertexShader = `\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tSize;\n\n\tuniform float sizeMultiplierForScreen;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvUv = position.xy;\n\n\t\tvec3 position = texture2D(tSize, vUv).xyz;\n\t\tfloat size = texture2D(tSize, vUv).w;\n\n\t\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\t\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t}\n`\n\nexport {\n  fragmentShader,\n  vertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/shaders.js","export default class Renderer {\n  constructor ({\n    alpha = true,\n    pixelRatio = window.devicePixelRatio,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    container\n  }) {\n    this.renderer = new THREE.WebGLRenderer({ alpha })\n    const gl = this.renderer.context\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.setPixelRatio(pixelRatio)\n\n    this.setSize(width, height)\n\n    container.appendChild(this.getDomElement())\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  getDomElement () {\n    return this.renderer.domElement\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.renderer.setSize(WIDTH, HEIGHT)\n  }\n\n  setPixelRatio (pixelRatio) {\n    this.renderer.setPixelRatio(pixelRatio)\n  }\n\n  setSize (w, h) {\n    this.renderer.setSize(w, h)\n  }\n\n  render ({\n    scene,\n    camera,\n    renderTarget = null,\n    force = false\n  } = {}) {\n    this.renderer.render(scene, camera, renderTarget, force)\n  }\n\n  get () {\n    return this.renderer\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/renderer.js","export default class Canvas {\n  constructor () {\n    this.scene = new THREE.Scene()\n  }\n\n  add (obj) {\n    this.scene.add(obj)\n  }\n\n  remove (obj) {\n    this.scene.remove(obj)\n  }\n\n  get () {\n    return this.scene\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/scene.js"],"sourceRoot":""}