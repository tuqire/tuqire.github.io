{"version":3,"sources":["webpack:///js/bundle.js","webpack:///./src/js/io/controls.js","webpack:///./src/js/main.js","webpack:///./src/js/io/camera.js","webpack:///./src/js/utils/index.js","webpack:///./src/js/io/renderer.js","webpack:///./src/js/objects/scene.js","webpack:///./src/js/objects/particles.js","webpack:///./src/js/shaders/size-simulation-shaders.js","webpack:///./src/js/shaders/black-and-white-webcam.js","webpack:///./src/js/shaders/difference-webcam.js","webpack:///./src/js/shaders/shaders.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","detector_webgl","detector_webgl_default","n","stats_min","stats_min_default","io_camera","dat_gui","dat_gui_default","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","controls_Controls","Controls","_ref","arguments","undefined","particles","scene","this","gui","a","GUI","addSizeControls","add","min","max","step","onFinishChange","updateSizes","controls","io_renderer","objects_scene","objects_particles","document","addEventListener","container","getElementById","renderer","numParticles","window","matchMedia","matches","webcamOutlineStrength","defaultSize","outlineMultiplier","camera","aspectRatio","position","x","y","z","stats","render","begin","update","get","end","showPanel","body","appendChild","dom","animate","requestAnimationFrame","innerHTML","THREE","_toConsumableArray","arr","Array","isArray","arr2","from","__WEBPACK_IMPORTED_MODULE_0__utils__","Camera","_ref$fov","fov","_ref$aspectRatio","innerWidth","innerHeight","_ref$near","near","_ref$far","far","_ref$position","_ref$up","up","setCameraZ","PerspectiveCamera","setPosition","setUp","apply","setLookAt","WIDTH","HEIGHT","aspect","setZ","updateProjectionMatrix","set","_ref2","_ref2$x","_ref2$y","_ref2$z","setX","setY","lookAt","Vector3","call","getZRatio","Renderer","_ref$alpha","alpha","_ref$pixelRatio","pixelRatio","devicePixelRatio","_ref$width","width","_ref$height","height","WebGLRenderer","gl","context","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","setPixelRatio","setSize","getDomElement","onWindowResize","bind","domElement","w","h","_ref2$renderTarget","renderTarget","_ref2$force","force","Canvas","Scene","obj","remove","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__","__WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default","__WEBPACK_IMPORTED_MODULE_1__shaders_size_simulation_shaders__","__WEBPACK_IMPORTED_MODULE_2__shaders_black_and_white_webcam__","__WEBPACK_IMPORTED_MODULE_3__shaders_difference_webcam__","__WEBPACK_IMPORTED_MODULE_4__shaders_shaders__","Particles","_this","_ref$configUniforms","configUniforms","color","Color","sizeMultiplierForScreen","_ref$blending","blending","AdditiveBlending","_ref$transparent","transparent","_ref$depthTest","depthTest","_ref$depthWrite","depthWrite","_ref$numParticles","_ref$webcamOutlineStr","_ref$defaultSize","_ref$outlineMultiplie","videoEl","createElement","videoWidth","videoHeight","navigator","getUserMedia","video","stream","srcObject","autoplay","addParticles","console","error","tHeight","Math","ceil","sqrt","tWidth","webcamEl","webcamElContext","getContext","webcamTexture","Texture","minFilter","magFilter","NearestFilter","needsUpdate","webcamDiffEl","webcamDiffElContext","webcamDiffTexture","positions","Float32Array","blackAndWhiteFBO","uniforms","tWebcam","type","simulationVertexShader","simulationFragmentShader","webcamDifferenceFBO","webcamWidth","webcamHeight","sizeFBO","assign","tSize","targets","tColour","material","ShaderMaterial","vertexShader","fragmentShader","geometry","Geometry","vertex","floor","vertices","push","Points","frustumCulled","ready","_webcamEl","readyState","HAVE_ENOUGH_DATA","drawImage","simulate","simulationShader","getCurrentFrame","newCameraZ","cameraZ","d","sizeSimulationFragmentShader","sizeSimulationVertexShader","blackAndWhiteSimulationFragmentShader","blackAndWhiteSimulationVertexShader","differenceSimulationFragmentShader","differenceSimulationVertexShader"],"mappings":"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","file":"js/bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/detector-webgl/index.js\nvar detector_webgl = __webpack_require__(1);\nvar detector_webgl_default = /*#__PURE__*/__webpack_require__.n(detector_webgl);\n\n// EXTERNAL MODULE: ./node_modules/stats.js/build/stats.min.js\nvar stats_min = __webpack_require__(2);\nvar stats_min_default = /*#__PURE__*/__webpack_require__.n(stats_min);\n\n// EXTERNAL MODULE: ./src/js/io/camera.js\nvar io_camera = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./node_modules/dat-gui/index.js\nvar dat_gui = __webpack_require__(3);\nvar dat_gui_default = /*#__PURE__*/__webpack_require__.n(dat_gui);\n\n// CONCATENATED MODULE: ./src/js/io/controls.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar controls_Controls = function () {\n  function Controls() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        particles = _ref.particles,\n        scene = _ref.scene;\n\n    _classCallCheck(this, Controls);\n\n    this.gui = new dat_gui_default.a.GUI();\n\n    this.addSizeControls(particles);\n  }\n\n  _createClass(Controls, [{\n    key: 'addSizeControls',\n    value: function addSizeControls(particles) {\n      this.gui.add(particles, 'defaultSize').min(0).max(0.025).step(0.0005).onFinishChange(function () {\n        particles.updateSizes();\n      });\n\n      this.gui.add(particles, 'outlineMultiplier').min(0).max(0.005).step(0.00005).onFinishChange(function () {\n        particles.updateSizes();\n      });\n    }\n  }]);\n\n  return Controls;\n}();\n\n/* harmony default export */ var controls = (controls_Controls);\n// EXTERNAL MODULE: ./src/js/io/renderer.js\nvar io_renderer = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./src/js/objects/scene.js\nvar objects_scene = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./src/js/objects/particles.js\nvar objects_particles = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./src/js/main.js\n\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (detector_webgl_default.a) {\n    var container = document.getElementById('webcam-simulation-container');\n    var renderer = new io_renderer[\"a\" /* default */]({ container: container });\n    var scene = new objects_scene[\"a\" /* default */]();\n    var particles = new objects_particles[\"a\" /* default */]({\n      scene: scene,\n      renderer: renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 4000 : 100000,\n      webcamOutlineStrength: 1000,\n      defaultSize: 0.005,\n      outlineMultiplier: 0.0003\n    });\n    var camera = new io_camera[\"a\" /* default */]({\n      aspectRatio: 1,\n      particles: particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -1.37\n      }\n    });\n    var stats = new stats_min_default.a();\n\n    var init = function init() {\n      new controls({ particles: particles }); // eslint-disable-line\n\n      stats.showPanel(0);\n      document.body.appendChild(stats.dom);\n    };\n\n    var animate = function animate() {\n      requestAnimationFrame(animate); // eslint-disable-line\n      render();\n    };\n\n    var render = function render() {\n      stats.begin();\n\n      particles.update();\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      });\n\n      stats.end();\n    };\n\n    init();\n    animate();\n  } else {\n    var info = document.getElementById('info');\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.';\n  }\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(7);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar Camera = function () {\n  function Camera(_ref) {\n    var particles = _ref.particles,\n        _ref$fov = _ref.fov,\n        fov = _ref$fov === undefined ? 400 : _ref$fov,\n        _ref$aspectRatio = _ref.aspectRatio,\n        aspectRatio = _ref$aspectRatio === undefined ? window.innerWidth / window.innerHeight : _ref$aspectRatio,\n        _ref$near = _ref.near,\n        near = _ref$near === undefined ? 0.1 : _ref$near,\n        _ref$far = _ref.far,\n        far = _ref$far === undefined ? 2000 : _ref$far,\n        _ref$position = _ref.position,\n        position = _ref$position === undefined ? {\n      x: 0, y: 0, z: 0\n    } : _ref$position,\n        _ref$up = _ref.up,\n        up = _ref$up === undefined ? [0, 0, 1] : _ref$up;\n\n    _classCallCheck(this, Camera);\n\n    this.particles = particles;\n    this.particles.setCameraZ(position.z);\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far);\n    this.up = up;\n\n    this.setPosition(position);\n    this.setUp.apply(this, _toConsumableArray(this.up));\n    this.setLookAt();\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Camera, [{\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.camera.aspect = WIDTH / HEIGHT;\n      this.setZ(window.innerHeight / Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* getZRatio */])());\n      this.camera.updateProjectionMatrix();\n    }\n  }, {\n    key: 'setUp',\n    value: function setUp(x, y, z) {\n      this.camera.up.set(x, y, z);\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(_ref2) {\n      var _ref2$x = _ref2.x,\n          x = _ref2$x === undefined ? this.camera.position.x : _ref2$x,\n          _ref2$y = _ref2.y,\n          y = _ref2$y === undefined ? this.camera.position.y : _ref2$y,\n          _ref2$z = _ref2.z,\n          z = _ref2$z === undefined ? this.camera.position.z : _ref2$z;\n\n      this.setX(x);\n      this.setY(y);\n      this.setZ(z);\n    }\n  }, {\n    key: 'setX',\n    value: function setX(x) {\n      this.camera.position.x = x;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setY',\n    value: function setY(y) {\n      this.camera.position.y = y;\n      this.setLookAt();\n    }\n  }, {\n    key: 'setZ',\n    value: function setZ(z) {\n      this.camera.position.z = z;\n      this.setLookAt();\n      this.setUp(0, 0, 1);\n      this.particles.setCameraZ(z);\n    }\n  }, {\n    key: 'setLookAt',\n    value: function setLookAt() {\n      this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.camera;\n    }\n  }, {\n    key: 'getPosition',\n    value: function getPosition() {\n      return this.camera.position;\n    }\n  }, {\n    key: 'getZ',\n    value: function getZ() {\n      return this.camera.position.z;\n    }\n  }]);\n\n  return Camera;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Camera);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* unused harmony export getParameterByName */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getZRatio;\n/* unused harmony export createDataTexture */\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n  var results = regex.exec(url);\n\n  if (!results) return null;\n  if (!results[2]) return '';\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getZRatio() {\n  if (window.innerWidth > 1100) {\n    return 170;\n  } else if (window.innerWidth > 700) {\n    return 100;\n  } else if (window.innerWidth > 500) {\n    return 85;\n  } else {\n    return 50;\n  }\n}\n\nfunction createDataTexture(_ref) {\n  var data = _ref.data,\n      tWidth = _ref.tWidth,\n      tHeight = _ref.tHeight,\n      format = _ref.format,\n      filterType = _ref.filterType;\n\n  var dataTexture = new THREE.DataTexture(data, tWidth, tHeight, format, THREE.FloatType);\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType;\n  dataTexture.needsUpdate = true;\n  dataTexture.flipY = false;\n\n  return dataTexture;\n}\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Renderer = function () {\n  function Renderer(_ref) {\n    var _ref$alpha = _ref.alpha,\n        alpha = _ref$alpha === undefined ? true : _ref$alpha,\n        _ref$pixelRatio = _ref.pixelRatio,\n        pixelRatio = _ref$pixelRatio === undefined ? window.devicePixelRatio : _ref$pixelRatio,\n        _ref$width = _ref.width,\n        width = _ref$width === undefined ? window.innerWidth : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === undefined ? window.innerHeight : _ref$height,\n        container = _ref.container;\n\n    _classCallCheck(this, Renderer);\n\n    this.renderer = new THREE.WebGLRenderer({ alpha: alpha });\n    var gl = this.renderer.context;\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    this.setPixelRatio(pixelRatio);\n\n    this.setSize(width, height);\n\n    container.appendChild(this.getDomElement());\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  _createClass(Renderer, [{\n    key: 'getDomElement',\n    value: function getDomElement() {\n      return this.renderer.domElement;\n    }\n  }, {\n    key: 'onWindowResize',\n    value: function onWindowResize() {\n      var WIDTH = window.innerWidth;\n      var HEIGHT = window.innerHeight;\n\n      this.renderer.setSize(WIDTH, HEIGHT);\n    }\n  }, {\n    key: 'setPixelRatio',\n    value: function setPixelRatio(pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio);\n    }\n  }, {\n    key: 'setSize',\n    value: function setSize(w, h) {\n      this.renderer.setSize(w, h);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          scene = _ref2.scene,\n          camera = _ref2.camera,\n          _ref2$renderTarget = _ref2.renderTarget,\n          renderTarget = _ref2$renderTarget === undefined ? null : _ref2$renderTarget,\n          _ref2$force = _ref2.force,\n          force = _ref2$force === undefined ? false : _ref2$force;\n\n      this.renderer.render(scene, camera, renderTarget, force);\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.renderer;\n    }\n  }]);\n\n  return Renderer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Renderer);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Canvas = function () {\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    this.scene = new THREE.Scene();\n  }\n\n  _createClass(Canvas, [{\n    key: \"add\",\n    value: function add(obj) {\n      this.scene.add(obj);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(obj) {\n      this.scene.remove(obj);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.scene;\n    }\n  }]);\n\n  return Canvas;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Canvas);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(THREE) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_three_js_fbo__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaders_size_simulation_shaders__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaders_black_and_white_webcam__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaders_difference_webcam__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shaders_shaders__ = __webpack_require__(17);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\nvar Particles = function () {\n  function Particles(_ref) {\n    var _this = this;\n\n    var scene = _ref.scene,\n        _ref$configUniforms = _ref.configUniforms,\n        configUniforms = _ref$configUniforms === undefined ? {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: window.innerHeight * window.devicePixelRatio / 2 }\n    } : _ref$configUniforms,\n        _ref$blending = _ref.blending,\n        blending = _ref$blending === undefined ? THREE.AdditiveBlending : _ref$blending,\n        _ref$transparent = _ref.transparent,\n        transparent = _ref$transparent === undefined ? true : _ref$transparent,\n        _ref$depthTest = _ref.depthTest,\n        depthTest = _ref$depthTest === undefined ? true : _ref$depthTest,\n        _ref$depthWrite = _ref.depthWrite,\n        depthWrite = _ref$depthWrite === undefined ? false : _ref$depthWrite,\n        renderer = _ref.renderer,\n        _ref$numParticles = _ref.numParticles,\n        numParticles = _ref$numParticles === undefined ? 10000 : _ref$numParticles,\n        _ref$webcamOutlineStr = _ref.webcamOutlineStrength,\n        webcamOutlineStrength = _ref$webcamOutlineStr === undefined ? 1000 : _ref$webcamOutlineStr,\n        _ref$defaultSize = _ref.defaultSize,\n        defaultSize = _ref$defaultSize === undefined ? 0.1 : _ref$defaultSize,\n        _ref$outlineMultiplie = _ref.outlineMultiplier,\n        outlineMultiplier = _ref$outlineMultiplie === undefined ? 0.04 : _ref$outlineMultiplie;\n\n    _classCallCheck(this, Particles);\n\n    this.renderer = renderer;\n\n    this.numParticles = numParticles;\n\n    // webcm particle controls\n    this.webcamOutlineStrength = webcamOutlineStrength;\n    this.defaultSize = defaultSize;\n    this.outlineMultiplier = outlineMultiplier;\n\n    this.videoEl = document.createElement('video');\n    this.videoWidth = 1280;\n    this.videoHeight = 720;\n\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({ video: { width: this.videoWidth, height: this.videoHeight } }, function (stream) {\n        var videoEl = _this.videoEl;\n        videoEl.srcObject = stream;\n        videoEl.autoplay = true;\n\n        _this.addParticles({\n          scene: scene,\n          renderer: renderer,\n          configUniforms: configUniforms,\n          blending: blending,\n          transparent: transparent,\n          depthTest: depthTest,\n          depthWrite: depthWrite\n        });\n      }, function () {\n        return console.error('video failed to load');\n      });\n    } else {\n      var info = document.getElementById('info');\n      info.innerHTML = 'Requires use of webcam. Please use the latest version of Chrome.';\n    }\n  }\n\n  _createClass(Particles, [{\n    key: 'addParticles',\n    value: function addParticles(_ref2) {\n      var scene = _ref2.scene,\n          renderer = _ref2.renderer,\n          configUniforms = _ref2.configUniforms,\n          blending = _ref2.blending,\n          transparent = _ref2.transparent,\n          depthTest = _ref2.depthTest,\n          depthWrite = _ref2.depthWrite;\n\n      // height and width that set up a texture in memory\n      // this texture is used to store particle position values\n      var tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles));\n      var tWidth = this.tWidth = tHeight;\n      this.numParticles = tWidth * tHeight;\n\n      var webcamEl = this.webcamEl = document.createElement('canvas');\n      this.webcamElContext = webcamEl.getContext('2d');\n\n      var webcamTexture = this.webcamTexture = new THREE.Texture(webcamEl);\n      webcamTexture.minFilter = webcamTexture.magFilter = THREE.NearestFilter;\n      webcamTexture.needsUpdate = true;\n\n      var webcamDiffEl = this.webcamDiffEl = document.createElement('canvas');\n      this.webcamDiffElContext = webcamDiffEl.getContext('2d');\n\n      var webcamDiffTexture = this.webcamDiffTexture = new THREE.Texture(webcamDiffEl);\n      webcamDiffTexture.minFilter = webcamDiffTexture.magFilter = THREE.NearestFilter;\n      webcamDiffTexture.needsUpdate = true;\n\n      this.positions = new Float32Array(this.numParticles * 3);\n\n      this.blackAndWhiteFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: this.webcamEl.width,\n        tHeight: this.webcamEl.height,\n        renderer: renderer.get(),\n        uniforms: {\n          tWebcam: { type: 't', value: webcamTexture }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_2__shaders_black_and_white_webcam__[\"b\" /* blackAndWhiteSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_2__shaders_black_and_white_webcam__[\"a\" /* blackAndWhiteSimulationFragmentShader */]\n      });\n\n      this.webcamDifferenceFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: this.webcamEl.width,\n        tHeight: this.webcamEl.height,\n        renderer: renderer.get(),\n        uniforms: {\n          webcamWidth: { type: 'f', value: this.webcamEl.width },\n          webcamHeight: { type: 'f', value: this.webcamEl.height },\n          tWebcam: { type: 't', value: 0 },\n          webcamOutlineStrength: { type: 'f', value: this.webcamOutlineStrength }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_3__shaders_difference_webcam__[\"b\" /* differenceSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_3__shaders_difference_webcam__[\"a\" /* differenceSimulationFragmentShader */]\n      });\n\n      this.sizeFBO = new __WEBPACK_IMPORTED_MODULE_0_three_js_fbo___default.a({\n        tWidth: tWidth,\n        tHeight: tHeight,\n        renderer: renderer.get(),\n        uniforms: {\n          tWebcam: { type: 't', value: 0 },\n\n          defaultSize: { type: 'f', value: this.defaultSize },\n          outlineMultiplier: { type: 'f', value: this.outlineMultiplier }\n        },\n        simulationVertexShader: __WEBPACK_IMPORTED_MODULE_1__shaders_size_simulation_shaders__[\"b\" /* sizeSimulationVertexShader */],\n        simulationFragmentShader: __WEBPACK_IMPORTED_MODULE_1__shaders_size_simulation_shaders__[\"a\" /* sizeSimulationFragmentShader */]\n      });\n\n      var uniforms = Object.assign({}, configUniforms, {\n        tSize: { type: 't', value: this.sizeFBO.targets[0] },\n        tWebcam: { type: 't', value: webcamDiffTexture },\n\n        tColour: { type: 't', value: webcamTexture }\n      });\n\n      this.material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: __WEBPACK_IMPORTED_MODULE_4__shaders_shaders__[\"b\" /* vertexShader */],\n        fragmentShader: __WEBPACK_IMPORTED_MODULE_4__shaders_shaders__[\"a\" /* fragmentShader */],\n        blending: blending,\n        depthTest: depthTest,\n        depthWrite: depthWrite,\n        transparent: transparent\n      });\n\n      // set uv coords of particles in texture as positions\n      var geometry = new THREE.Geometry();\n\n      for (var i = 0; i < this.numParticles; i++) {\n        var vertex = new THREE.Vector3();\n        vertex.x = i % tWidth / tWidth;\n        vertex.y = Math.floor(i / tWidth) / tHeight;\n        geometry.vertices.push(vertex);\n      }\n\n      this.particles = new THREE.Points(geometry, this.material);\n      this.particles.frustumCulled = false;\n\n      scene.add(this.get());\n\n      this.ready = true;\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      if (this.ready) {\n        var videoEl = this.videoEl,\n            webcamElContext = this.webcamElContext,\n            _webcamEl = this.webcamEl,\n            videoWidth = _webcamEl.width,\n            videoHeight = _webcamEl.height,\n            webcamTexture = this.webcamTexture;\n\n        if (videoEl.readyState === videoEl.HAVE_ENOUGH_DATA) {\n          webcamElContext.drawImage(videoEl, 0, 0, videoWidth, videoHeight);\n          webcamTexture.needsUpdate = true;\n        }\n\n        this.blackAndWhiteFBO.simulate();\n        this.webcamDifferenceFBO.simulationShader.uniforms.tWebcam.value = this.blackAndWhiteFBO.getCurrentFrame();\n        this.webcamDifferenceFBO.simulate();\n        this.sizeFBO.simulationShader.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame();\n        this.sizeFBO.simulate();\n        this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame();\n      }\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.particles;\n    }\n  }, {\n    key: 'setCameraZ',\n    value: function setCameraZ(newCameraZ) {\n      this.cameraZ = newCameraZ;\n    }\n  }, {\n    key: 'updateSizes',\n    value: function updateSizes() {\n      this.webcamDifferenceFBO.simulationShader.uniforms.webcamOutlineStrength.value = this.webcamOutlineStrength;\n      this.sizeFBO.simulationShader.uniforms.defaultSize.value = this.defaultSize;\n      this.sizeFBO.simulationShader.uniforms.outlineMultiplier.value = this.outlineMultiplier;\n    }\n  }]);\n\n  return Particles;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Particles);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))\n\n/***/ }),\n/* 13 */,\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return sizeSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sizeSimulationVertexShader; });\n/* eslint-disable */\n\nvar sizeSimulationFragmentShader = \"\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float defaultSize;\\n\\tuniform float outlineMultiplier;\\n\\n\\tfloat getSize() {\\n\\t\\tvec4 currPosition = vec4((vUv.x * 1.0), (vUv.y * 1.0), 0.0, 1.0);\\n\\t\\tfloat webcamParticleVal = texture2D(tWebcam, vec2(currPosition.x, currPosition.y)).r;\\n\\t\\tfloat size = defaultSize + (outlineMultiplier * webcamParticleVal);\\n\\n\\t\\treturn size;\\n\\t}\\n\\n\\tvoid main() {\\n\\t\\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\\n\\t}\\n\";\n\nvar sizeSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = vec2(uv);\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return blackAndWhiteSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return blackAndWhiteSimulationVertexShader; });\n/* eslint-disable */\n\nvar blackAndWhiteSimulationFragmentShader = \"\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeInc;\\n\\tuniform float sizeRange;\\n\\n\\tvoid main() {\\n\\t\\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\\n    float avg = (webcamParticle.x + webcamParticle.y + webcamParticle.z) / 3.0;\\n\\n\\t\\tgl_FragColor = vec4(avg, avg, avg, 1.0);\\n\\t}\\n\";\n\nvar blackAndWhiteSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return differenceSimulationFragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return differenceSimulationVertexShader; });\n/* eslint-disable */\n\nvar differenceSimulationFragmentShader = \"\\n\\t// this is the texture position the data for this particle is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tuniform sampler2D tWebcam;\\n\\n\\tuniform float sizeInc;\\n  uniform float sizeRange;\\n  uniform float webcamWidth;\\n\\tuniform float webcamHeight;\\n\\tuniform float webcamOutlineStrength;\\n\\n\\tvoid main() {\\n\\t\\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\\n\\t\\tvec3 webcamParticleAbove = texture2D(tWebcam, vec2(vUv.x, vUv.y - (1.0 / webcamWidth))).xyz;\\n\\t\\tvec3 webcamParticleBelow = texture2D(tWebcam, vec2(vUv.x, vUv.y + (1.0 / webcamWidth))).xyz;\\n\\t\\tvec3 webcamParticleLeft = texture2D(tWebcam, vec2(vUv.x - (1.0 / webcamHeight), vUv.y)).xyz;\\n\\t\\tvec3 webcamParticleRight = texture2D(tWebcam, vec2(vUv.x + (1.0 / webcamHeight), vUv.y)).xyz;\\n\\n    float average = (\\n\\t\\t\\twebcamParticleAbove.r +\\n      webcamParticleBelow.r +\\n      webcamParticleLeft.r +\\n\\t\\t\\twebcamParticleRight.r\\n\\t\\t) / 4.0;\\n\\n    webcamParticle.x -= average;\\n    webcamParticle.y -= average;\\n    webcamParticle.z -= average;\\n\\n    webcamParticle.x *= webcamOutlineStrength;\\n    webcamParticle.y *= webcamOutlineStrength;\\n    webcamParticle.z *= webcamOutlineStrength;\\n\\n\\t\\tgl_FragColor = vec4(webcamParticle, 1.0);\\n\\t}\\n\";\n\nvar differenceSimulationVertexShader = \"\\n\\t// this value stores the texture coordinates the data for this vertex is stored in\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t  vUv = uv;\\n\\n\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n\\t}\\n\";\n\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fragmentShader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return vertexShader; });\n/* eslint-disable */\n\nvar fragmentShader = \"\\n\\tuniform sampler2D tColour;\\n\\tuniform sampler2D starImg;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvec4 colour = texture2D(tColour, vUv).rgba;\\n\\n\\t\\tgl_FragColor = colour;\\n\\t}\\n\";\n\nvar vertexShader = \"\\n\\tuniform sampler2D tPosition;\\n\\tuniform sampler2D tSize;\\n\\n\\tuniform float sizeMultiplierForScreen;\\n\\n\\tvarying vec2 vUv;\\n\\n\\tvoid main() {\\n\\t\\tvUv = position.xy;\\n\\n\\t\\tvec4 position = vec4((vUv.x * 1.0) - 0.5, (vUv.y * 1.0) - 0.5, 0.0, 1.0);\\n\\t\\tfloat size = texture2D(tSize, vUv).w;\\n\\n\\t\\tvec4 mvPosition = modelViewMatrix * position;\\n\\t\\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\\n\\t\\tgl_Position = projectionMatrix * mvPosition;\\n\\t}\\n\";\n\n\n\n/***/ })\n],[5]);\n\n\n// WEBPACK FOOTER //\n// js/bundle.js","import DatGUI from 'dat-gui'\n\nexport default class Controls {\n  constructor ({\n    particles,\n    scene\n  } = {}) {\n    this.gui = new DatGUI.GUI()\n\n    this.addSizeControls(particles)\n  }\n\n  addSizeControls (particles) {\n    this.gui\n      .add(particles, 'defaultSize')\n      .min(0)\n      .max(0.025)\n      .step(0.0005)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n\n    this.gui\n      .add(particles, 'outlineMultiplier')\n      .min(0)\n      .max(0.005)\n      .step(0.00005)\n      .onFinishChange(() => {\n        particles.updateSizes()\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/controls.js","import isWebglEnabled from 'detector-webgl'\nimport Stats from 'stats.js'\nimport Camera from './io/camera'\nimport Controls from './io/controls'\nimport Renderer from './io/renderer'\nimport Scene from './objects/scene'\nimport Particles from './objects/particles'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (isWebglEnabled) {\n    const container = document.getElementById('webcam-simulation-container')\n    const renderer = new Renderer({ container })\n    const scene = new Scene()\n    const particles = new Particles({\n      scene,\n      renderer,\n      numParticles: window.matchMedia('(max-width: 480px)').matches ? 4000 : 100000,\n      webcamOutlineStrength: 1000,\n      defaultSize: 0.005,\n      outlineMultiplier: 0.0003\n    })\n    const camera = new Camera({\n      aspectRatio: 1,\n      particles,\n      position: {\n        x: 0,\n        y: 0.001,\n        z: -1.37\n      }\n    })\n    const stats = new Stats()\n\n    const init = () => {\n      new Controls({ particles }) // eslint-disable-line\n\n      stats.showPanel(0)\n      document.body.appendChild(stats.dom)\n    }\n\n    const animate = () => {\n      requestAnimationFrame(animate) // eslint-disable-line\n      render()\n    }\n\n    const render = () => {\n      stats.begin()\n\n      particles.update()\n\n      renderer.render({\n        scene: scene.get(),\n        camera: camera.get()\n      })\n\n      stats.end()\n    }\n\n    init()\n    animate()\n  } else {\n    const info = document.getElementById('info')\n    info.innerHTML = 'Your browser is not supported. Please use the latest version of Firefox or Chrome.'\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { getZRatio } from '../utils'\n\nexport default class Camera {\n  constructor ({\n    particles,\n    fov = 400,\n    aspectRatio = window.innerWidth / window.innerHeight,\n    near = 0.1,\n    far = 2000,\n    position = {\n      x: 0, y: 0, z: 0\n    },\n    up = [0, 0, 1]\n  }) {\n    this.particles = particles\n    this.particles.setCameraZ(position.z)\n    this.camera = new THREE.PerspectiveCamera(fov, aspectRatio, near, far)\n    this.up = up\n\n    this.setPosition(position)\n    this.setUp(...this.up)\n    this.setLookAt()\n\n    // window.addEventListener('resize', this.onWindowResize.bind(this));\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.camera.aspect = WIDTH / HEIGHT\n    this.setZ(window.innerHeight / getZRatio())\n    this.camera.updateProjectionMatrix()\n  }\n\n  setUp (x, y, z) {\n    this.camera.up.set(x, y, z)\n  }\n\n  setPosition ({\n    x = this.camera.position.x,\n    y = this.camera.position.y,\n    z = this.camera.position.z\n  }) {\n    this.setX(x)\n    this.setY(y)\n    this.setZ(z)\n  }\n\n  setX (x) {\n    this.camera.position.x = x\n    this.setLookAt()\n  }\n\n  setY (y) {\n    this.camera.position.y = y\n    this.setLookAt()\n  }\n\n  setZ (z) {\n    this.camera.position.z = z\n    this.setLookAt()\n    this.setUp(0, 0, 1)\n    this.particles.setCameraZ(z)\n  }\n\n  setLookAt () {\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0))\n  }\n\n  get () {\n    return this.camera\n  }\n\n  getPosition () {\n    return this.camera.position\n  }\n\n  getZ () {\n    return this.camera.position.z\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/camera.js","export function getParameterByName (name, url) {\n  if (!url) {\n    url = window.location.href\n  }\n\n  name = name.replace(/[[\\]]/g, '\\\\$&')\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`)\n  const results = regex.exec(url)\n\n  if (!results) return null\n  if (!results[2]) return ''\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport function getZRatio () {\n  if (window.innerWidth > 1100) {\n    return 170\n  } else if (window.innerWidth > 700) {\n    return 100\n  } else if (window.innerWidth > 500) {\n    return 85\n  } else {\n    return 50\n  }\n}\n\nexport function createDataTexture ({\n  data,\n  tWidth,\n  tHeight,\n  format,\n  filterType\n}) {\n  const dataTexture = new THREE.DataTexture(\n    data,\n    tWidth,\n    tHeight,\n    format,\n    THREE.FloatType\n  )\n\n  dataTexture.minFilter = dataTexture.magFilter = filterType\n  dataTexture.needsUpdate = true\n  dataTexture.flipY = false\n\n  return dataTexture\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","export default class Renderer {\n  constructor ({\n    alpha = true,\n    pixelRatio = window.devicePixelRatio,\n    width = window.innerWidth,\n    height = window.innerHeight,\n    container\n  }) {\n    this.renderer = new THREE.WebGLRenderer({ alpha })\n    const gl = this.renderer.context\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.setPixelRatio(pixelRatio)\n\n    this.setSize(width, height)\n\n    container.appendChild(this.getDomElement())\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n  }\n\n  getDomElement () {\n    return this.renderer.domElement\n  }\n\n  onWindowResize () {\n    const WIDTH = window.innerWidth\n    const HEIGHT = window.innerHeight\n\n    this.renderer.setSize(WIDTH, HEIGHT)\n  }\n\n  setPixelRatio (pixelRatio) {\n    this.renderer.setPixelRatio(pixelRatio)\n  }\n\n  setSize (w, h) {\n    this.renderer.setSize(w, h)\n  }\n\n  render ({\n    scene,\n    camera,\n    renderTarget = null,\n    force = false\n  } = {}) {\n    this.renderer.render(scene, camera, renderTarget, force)\n  }\n\n  get () {\n    return this.renderer\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/io/renderer.js","export default class Canvas {\n  constructor () {\n    this.scene = new THREE.Scene()\n  }\n\n  add (obj) {\n    this.scene.add(obj)\n  }\n\n  remove (obj) {\n    this.scene.remove(obj)\n  }\n\n  get () {\n    return this.scene\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/scene.js","import FBO from 'three.js-fbo'\nimport { sizeSimulationVertexShader, sizeSimulationFragmentShader } from '../shaders/size-simulation-shaders'\nimport { blackAndWhiteSimulationVertexShader, blackAndWhiteSimulationFragmentShader } from '../shaders/black-and-white-webcam'\nimport { differenceSimulationVertexShader, differenceSimulationFragmentShader } from '../shaders/difference-webcam'\nimport { vertexShader, fragmentShader } from '../shaders/shaders'\n\nexport default class Particles {\n  constructor ({\n    scene,\n    configUniforms = {\n      color: { value: new THREE.Color(0xffffff) },\n      sizeMultiplierForScreen: { value: (window.innerHeight * window.devicePixelRatio) / 2 }\n    },\n    blending = THREE.AdditiveBlending,\n    transparent = true,\n    depthTest = true,\n    depthWrite = false,\n\n    renderer,\n\n    numParticles = 10000,\n\n    // webcam particle values\n    webcamOutlineStrength = 1000,\n    defaultSize = 0.1,\n    outlineMultiplier = 0.04\n  }) {\n    this.renderer = renderer\n\n    this.numParticles = numParticles\n\n    // webcm particle controls\n    this.webcamOutlineStrength = webcamOutlineStrength\n    this.defaultSize = defaultSize\n    this.outlineMultiplier = outlineMultiplier\n\n    this.videoEl = document.createElement('video')\n    this.videoWidth = 1280\n    this.videoHeight = 720\n\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({ video: { width: this.videoWidth, height: this.videoHeight } }, stream => {\n        const videoEl = this.videoEl\n        videoEl.srcObject = stream\n        videoEl.autoplay = true\n\n        this.addParticles({\n          scene,\n          renderer,\n          configUniforms,\n          blending,\n          transparent,\n          depthTest,\n          depthWrite\n        })\n      }, () => console.error('video failed to load'))\n    } else {\n      const info = document.getElementById('info')\n      info.innerHTML = 'Requires use of webcam. Please use the latest version of Chrome.'\n    }\n  }\n\n  addParticles ({\n    scene,\n    renderer,\n    configUniforms,\n    blending,\n    transparent,\n    depthTest,\n    depthWrite\n  }) {\n    // height and width that set up a texture in memory\n    // this texture is used to store particle position values\n    const tHeight = this.tHeight = Math.ceil(Math.sqrt(this.numParticles))\n    const tWidth = this.tWidth = tHeight\n    this.numParticles = tWidth * tHeight\n\n    const webcamEl = this.webcamEl = document.createElement('canvas')\n    this.webcamElContext = webcamEl.getContext('2d')\n\n    const webcamTexture = this.webcamTexture = new THREE.Texture(webcamEl)\n    webcamTexture.minFilter = webcamTexture.magFilter = THREE.NearestFilter\n    webcamTexture.needsUpdate = true\n\n    const webcamDiffEl = this.webcamDiffEl = document.createElement('canvas')\n    this.webcamDiffElContext = webcamDiffEl.getContext('2d')\n\n    const webcamDiffTexture = this.webcamDiffTexture = new THREE.Texture(webcamDiffEl)\n    webcamDiffTexture.minFilter = webcamDiffTexture.magFilter = THREE.NearestFilter\n    webcamDiffTexture.needsUpdate = true\n\n    this.positions = new Float32Array(this.numParticles * 3)\n\n    this.blackAndWhiteFBO = new FBO({\n      tWidth: this.webcamEl.width,\n      tHeight: this.webcamEl.height,\n      renderer: renderer.get(),\n      uniforms: {\n        tWebcam: { type: 't', value: webcamTexture }\n      },\n      simulationVertexShader: blackAndWhiteSimulationVertexShader,\n      simulationFragmentShader: blackAndWhiteSimulationFragmentShader\n    })\n\n    this.webcamDifferenceFBO = new FBO({\n      tWidth: this.webcamEl.width,\n      tHeight: this.webcamEl.height,\n      renderer: renderer.get(),\n      uniforms: {\n        webcamWidth: { type: 'f', value: this.webcamEl.width },\n        webcamHeight: { type: 'f', value: this.webcamEl.height },\n        tWebcam: { type: 't', value: 0 },\n        webcamOutlineStrength: { type: 'f', value: this.webcamOutlineStrength }\n      },\n      simulationVertexShader: differenceSimulationVertexShader,\n      simulationFragmentShader: differenceSimulationFragmentShader\n    })\n\n    this.sizeFBO = new FBO({\n      tWidth,\n      tHeight,\n      renderer: renderer.get(),\n      uniforms: {\n        tWebcam: { type: 't', value: 0 },\n\n        defaultSize: { type: 'f', value: this.defaultSize },\n        outlineMultiplier: { type: 'f', value: this.outlineMultiplier }\n      },\n      simulationVertexShader: sizeSimulationVertexShader,\n      simulationFragmentShader: sizeSimulationFragmentShader\n    })\n\n    const uniforms = Object.assign({}, configUniforms, {\n      tSize: { type: 't', value: this.sizeFBO.targets[0] },\n      tWebcam: { type: 't', value: webcamDiffTexture },\n\n      tColour: { type: 't', value: webcamTexture }\n    })\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader,\n      fragmentShader,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent\n    })\n\n    // set uv coords of particles in texture as positions\n    const geometry = new THREE.Geometry()\n\n    for (let i = 0; i < this.numParticles; i++) {\n      const vertex = new THREE.Vector3()\n      vertex.x = (i % tWidth) / tWidth\n      vertex.y = Math.floor(i / tWidth) / tHeight\n      geometry.vertices.push(vertex)\n    }\n\n    this.particles = new THREE.Points(geometry, this.material)\n    this.particles.frustumCulled = false\n\n    scene.add(this.get())\n\n    this.ready = true\n  }\n\n  update () {\n    if (this.ready) {\n      const { videoEl, webcamElContext, webcamEl: { width: videoWidth, height: videoHeight }, webcamTexture } = this\n      if (videoEl.readyState === videoEl.HAVE_ENOUGH_DATA) {\n        webcamElContext.drawImage(videoEl, 0, 0, videoWidth, videoHeight)\n        webcamTexture.needsUpdate = true\n      }\n\n      this.blackAndWhiteFBO.simulate()\n      this.webcamDifferenceFBO.simulationShader.uniforms.tWebcam.value = this.blackAndWhiteFBO.getCurrentFrame()\n      this.webcamDifferenceFBO.simulate()\n      this.sizeFBO.simulationShader.uniforms.tWebcam.value = this.webcamDifferenceFBO.getCurrentFrame()\n      this.sizeFBO.simulate()\n      this.material.uniforms.tSize.value = this.sizeFBO.getCurrentFrame()\n    }\n  }\n\n  get () {\n    return this.particles\n  }\n\n  setCameraZ (newCameraZ) {\n    this.cameraZ = newCameraZ\n  }\n\n  updateSizes () {\n    this.webcamDifferenceFBO.simulationShader.uniforms.webcamOutlineStrength.value = this.webcamOutlineStrength\n    this.sizeFBO.simulationShader.uniforms.defaultSize.value = this.defaultSize\n    this.sizeFBO.simulationShader.uniforms.outlineMultiplier.value = this.outlineMultiplier\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/objects/particles.js","/* eslint-disable */\n\nconst sizeSimulationFragmentShader = `\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tWebcam;\n\n\tuniform float defaultSize;\n\tuniform float outlineMultiplier;\n\n\tfloat getSize() {\n\t\tvec4 currPosition = vec4((vUv.x * 1.0), (vUv.y * 1.0), 0.0, 1.0);\n\t\tfloat webcamParticleVal = texture2D(tWebcam, vec2(currPosition.x, currPosition.y)).r;\n\t\tfloat size = defaultSize + (outlineMultiplier * webcamParticleVal);\n\n\t\treturn size;\n\t}\n\n\tvoid main() {\n\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, getSize());\n\t}\n`\n\nconst sizeSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = vec2(uv);\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  sizeSimulationFragmentShader,\n  sizeSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/size-simulation-shaders.js","/* eslint-disable */\n\nconst blackAndWhiteSimulationFragmentShader = `\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeInc;\n\tuniform float sizeRange;\n\n\tvoid main() {\n\t\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\n    float avg = (webcamParticle.x + webcamParticle.y + webcamParticle.z) / 3.0;\n\n\t\tgl_FragColor = vec4(avg, avg, avg, 1.0);\n\t}\n`\n\nconst blackAndWhiteSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  blackAndWhiteSimulationFragmentShader,\n  blackAndWhiteSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/black-and-white-webcam.js","/* eslint-disable */\n\nconst differenceSimulationFragmentShader = `\n\t// this is the texture position the data for this particle is stored in\n\tvarying vec2 vUv;\n\n\tuniform sampler2D tWebcam;\n\n\tuniform float sizeInc;\n  uniform float sizeRange;\n  uniform float webcamWidth;\n\tuniform float webcamHeight;\n\tuniform float webcamOutlineStrength;\n\n\tvoid main() {\n\t\tvec3 webcamParticle = texture2D(tWebcam, vUv).xyz;\n\t\tvec3 webcamParticleAbove = texture2D(tWebcam, vec2(vUv.x, vUv.y - (1.0 / webcamWidth))).xyz;\n\t\tvec3 webcamParticleBelow = texture2D(tWebcam, vec2(vUv.x, vUv.y + (1.0 / webcamWidth))).xyz;\n\t\tvec3 webcamParticleLeft = texture2D(tWebcam, vec2(vUv.x - (1.0 / webcamHeight), vUv.y)).xyz;\n\t\tvec3 webcamParticleRight = texture2D(tWebcam, vec2(vUv.x + (1.0 / webcamHeight), vUv.y)).xyz;\n\n    float average = (\n\t\t\twebcamParticleAbove.r +\n      webcamParticleBelow.r +\n      webcamParticleLeft.r +\n\t\t\twebcamParticleRight.r\n\t\t) / 4.0;\n\n    webcamParticle.x -= average;\n    webcamParticle.y -= average;\n    webcamParticle.z -= average;\n\n    webcamParticle.x *= webcamOutlineStrength;\n    webcamParticle.y *= webcamOutlineStrength;\n    webcamParticle.z *= webcamOutlineStrength;\n\n\t\tgl_FragColor = vec4(webcamParticle, 1.0);\n\t}\n`\n\nconst differenceSimulationVertexShader = `\n\t// this value stores the texture coordinates the data for this vertex is stored in\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t  vUv = uv;\n\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n`\n\nexport {\n  differenceSimulationFragmentShader,\n  differenceSimulationVertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/difference-webcam.js","/* eslint-disable */\n\nconst fragmentShader = `\n\tuniform sampler2D tColour;\n\tuniform sampler2D starImg;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvec4 colour = texture2D(tColour, vUv).rgba;\n\n\t\tgl_FragColor = colour;\n\t}\n`\n\nconst vertexShader = `\n\tuniform sampler2D tPosition;\n\tuniform sampler2D tSize;\n\n\tuniform float sizeMultiplierForScreen;\n\n\tvarying vec2 vUv;\n\n\tvoid main() {\n\t\tvUv = position.xy;\n\n\t\tvec4 position = vec4((vUv.x * 1.0) - 0.5, (vUv.y * 1.0) - 0.5, 0.0, 1.0);\n\t\tfloat size = texture2D(tSize, vUv).w;\n\n\t\tvec4 mvPosition = modelViewMatrix * position;\n\t\tgl_PointSize = size * (sizeMultiplierForScreen / -mvPosition.z);\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t}\n`\n\nexport {\n  fragmentShader,\n  vertexShader\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/shaders/shaders.js"],"sourceRoot":""}